const CACHE_NAME="rental-hub-v2",RUNTIME_CACHE="rental-hub-runtime-v2",STATIC_ASSETS=["/dashboard.html","/login.html","/investor-management.html","/manifest.json"],CDN_ASSETS=["https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css","https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css","https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"];async function handleFetch(t,e){try{return e.pathname.includes("/api/")||e.pathname.includes("/tenants")||e.pathname.includes("localhost:3000")?await networkFirstStrategy(t):e.origin!==location.origin?await cacheFirstStrategy(t,RUNTIME_CACHE):await staleWhileRevalidateStrategy(t)}catch(e){return console.error("Fetch error:",e),await getOfflineFallback(t)}}async function networkFirstStrategy(t){try{const e=await fetch(t);if(e.ok)return e}catch(t){console.log("Network request failed, trying cache")}return await caches.match(t)||new Response("Network unavailable",{status:503})}async function cacheFirstStrategy(t,e){const a=await caches.match(t);if(a)return a;try{const a=await fetch(t);if(a.ok)return(await caches.open(e)).put(t,a.clone()),a}catch(t){console.error("Cache first strategy failed:",t)}return new Response("Resource unavailable",{status:404})}async function staleWhileRevalidateStrategy(t){const e=await caches.match(t),a=fetch(t).then(e=>(e.ok&&caches.open(CACHE_NAME).then(a=>a.put(t,e.clone())),e)).catch(t=>(console.error("Revalidation failed:",t),e));return e||a}async function getOfflineFallback(t){return"document"===t.destination&&await caches.match("/dashboard.html")||new Response("Offline",{status:503})}function doBackgroundSync(){console.log("Background sync triggered")}self.addEventListener("install",t=>{console.log("Service Worker installing..."),self.skipWaiting(),t.waitUntil(Promise.all([caches.open(CACHE_NAME).then(t=>(console.log("Caching static assets"),t.addAll(STATIC_ASSETS))),caches.open(RUNTIME_CACHE).then(t=>(console.log("Caching CDN assets"),t.addAll(CDN_ASSETS)))]).catch(t=>{console.error("Failed to cache resources during install:",t)}))}),self.addEventListener("fetch",t=>{const{request:e}=t,a=new URL(e.url);"GET"===e.method&&e.url.startsWith("http")&&t.respondWith(handleFetch(e,a))}),self.addEventListener("activate",t=>{console.log("Service Worker activating..."),t.waitUntil(Promise.all([caches.keys().then(t=>Promise.all(t.map(t=>{if(t!==CACHE_NAME&&t!==RUNTIME_CACHE)return console.log("Deleting old cache:",t),caches.delete(t)}))),self.clients.claim()]))}),self.addEventListener("sync",t=>{"background-sync"===t.tag&&t.waitUntil(doBackgroundSync())}),self.addEventListener("push",t=>{const e={body:t.data?t.data.text():"New notification from Rental Hub",icon:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 192"><rect width="192" height="192" fill="%23667eea"/><path fill="white" d="M96 48L48 96h16v48h64V96h16L96 48zm0 16l32 32v40h-16v-16H80v16H64V96l32-32z"/></svg>',badge:'data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 192 192"><rect width="192" height="192" fill="%23667eea"/><path fill="white" d="M96 48L48 96h16v48h64V96h16L96 48zm0 16l32 32v40h-16v-16H80v16H64V96l32-32z"/></svg>',vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:1}};t.waitUntil(self.registration.showNotification("Rental Hub",e))}),self.addEventListener("notificationclick",t=>{t.notification.close(),t.waitUntil(clients.openWindow("/dashboard.html"))});