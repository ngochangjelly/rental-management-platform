/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/components/contract-analysis.js":
/*!************************************************!*\
  !*** ./src/js/components/contract-analysis.js ***!
  \************************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Contract Analysis Component\n * Handles PDF upload, analysis, and result display\n */\nvar ContractAnalysisComponent = /*#__PURE__*/function () {\n  function ContractAnalysisComponent() {\n    _classCallCheck(this, ContractAnalysisComponent);\n    this.currentPage = 1;\n    this.pdfDoc = null;\n    this.scale = 1.0;\n    this.analysisData = null;\n    this.canvas = document.createElement('canvas');\n    this.ctx = this.canvas.getContext('2d');\n    this.init();\n  }\n  return _createClass(ContractAnalysisComponent, [{\n    key: \"init\",\n    value: function init() {\n      this.setupFileUpload();\n      this.setupPDFControls();\n      this.setupEventListeners();\n    }\n  }, {\n    key: \"setupFileUpload\",\n    value: function setupFileUpload() {\n      var _this = this;\n      var uploadArea = document.getElementById('uploadArea');\n      var fileInput = document.getElementById('fileInput');\n      if (!uploadArea || !fileInput) return;\n\n      // Click to upload\n      uploadArea.addEventListener('click', function () {\n        fileInput.click();\n      });\n\n      // Drag and drop\n      uploadArea.addEventListener('dragover', function (e) {\n        e.preventDefault();\n        uploadArea.classList.add('dragover');\n      });\n      uploadArea.addEventListener('dragleave', function () {\n        uploadArea.classList.remove('dragover');\n      });\n      uploadArea.addEventListener('drop', function (e) {\n        e.preventDefault();\n        uploadArea.classList.remove('dragover');\n        var files = e.dataTransfer.files;\n        if (files.length > 0) {\n          _this.handleFileUpload(files[0]);\n        }\n      });\n\n      // File input change\n      fileInput.addEventListener('change', function (e) {\n        if (e.target.files.length > 0) {\n          _this.handleFileUpload(e.target.files[0]);\n        }\n      });\n    }\n  }, {\n    key: \"handleFileUpload\",\n    value: function () {\n      var _handleFileUpload = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(file) {\n        var formData, progressContainer, progressBar, analysisProgress, uploadResponse, uploadResult, analysisResponse, result, downloadBtn, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              if (!(file.type !== 'application/pdf')) {\n                _context.n = 1;\n                break;\n              }\n              alert('Please upload a PDF file only.');\n              return _context.a(2);\n            case 1:\n              if (!(file.size > 10 * 1024 * 1024)) {\n                _context.n = 2;\n                break;\n              }\n              alert('File size must be less than 10MB.');\n              return _context.a(2);\n            case 2:\n              formData = new FormData();\n              formData.append('agreement', file);\n\n              // Show progress\n              progressContainer = document.getElementById('uploadProgress');\n              progressBar = progressContainer.querySelector('.progress-bar');\n              analysisProgress = document.getElementById('analysisProgress');\n              progressContainer.style.display = 'block';\n              analysisProgress.style.display = 'block';\n              _context.p = 3;\n              _context.n = 4;\n              return fetch(buildApiUrl('/upload/agreement'), {\n                method: 'POST',\n                credentials: 'include',\n                body: formData\n              });\n            case 4:\n              uploadResponse = _context.v;\n              if (uploadResponse.ok) {\n                _context.n = 5;\n                break;\n              }\n              throw new Error('Upload failed');\n            case 5:\n              _context.n = 6;\n              return uploadResponse.json();\n            case 6:\n              uploadResult = _context.v;\n              console.log('File uploaded:', uploadResult.filename);\n\n              // Analyze uploaded file\n              _context.n = 7;\n              return API.post('/analysis/analyze', {\n                filename: uploadResult.filename\n              });\n            case 7:\n              analysisResponse = _context.v;\n              if (analysisResponse.ok) {\n                _context.n = 8;\n                break;\n              }\n              throw new Error('Analysis failed');\n            case 8:\n              _context.n = 9;\n              return analysisResponse.json();\n            case 9:\n              result = _context.v;\n              console.log('Analysis completed:', result);\n\n              // Store analysis data globally\n              this.analysisData = result;\n\n              // Display results\n              this.displayAnalysisResults(result);\n\n              // Load PDF viewer\n              _context.n = 10;\n              return this.loadPDF(uploadResult.filename);\n            case 10:\n              // Show download button\n              downloadBtn = document.getElementById('downloadReportBtn');\n              if (downloadBtn) {\n                downloadBtn.style.display = 'inline-block';\n              }\n              _context.n = 12;\n              break;\n            case 11:\n              _context.p = 11;\n              _t = _context.v;\n              console.error('Error:', _t);\n              alert('Error processing file: ' + _t.message);\n            case 12:\n              _context.p = 12;\n              progressContainer.style.display = 'none';\n              analysisProgress.style.display = 'none';\n              return _context.f(12);\n            case 13:\n              return _context.a(2);\n          }\n        }, _callee, this, [[3, 11, 12, 13]]);\n      }));\n      function handleFileUpload(_x) {\n        return _handleFileUpload.apply(this, arguments);\n      }\n      return handleFileUpload;\n    }()\n  }, {\n    key: \"displayAnalysisResults\",\n    value: function displayAnalysisResults(data) {\n      var resultsContainer = document.getElementById('resultsContainer');\n      if (!resultsContainer) return;\n      if (!data.success) {\n        resultsContainer.innerHTML = '<div class=\"alert alert-danger\">Analysis failed: ' + data.error + '</div>';\n        return;\n      }\n      var analysis = data.analysis;\n      var issues = analysis.keywordAnalysis || [];\n      var html = '<div class=\"analysis-results\">';\n\n      // Summary stats\n      html += '<div class=\"row mb-3\">';\n      html += '<div class=\"col-4 text-center\"><div class=\"border rounded p-2\"><strong>' + issues.length + '</strong><br><small class=\"text-muted\">Total Issues</small></div></div>';\n      html += '<div class=\"col-4 text-center\"><div class=\"border rounded p-2\"><strong>' + issues.filter(function (i) {\n        return i.severity === 'HIGH';\n      }).length + '</strong><br><small class=\"text-danger\">High Risk</small></div></div>';\n      html += '<div class=\"col-4 text-center\"><div class=\"border rounded p-2\"><strong>' + issues.filter(function (i) {\n        return i.severity === 'MEDIUM';\n      }).length + '</strong><br><small class=\"text-warning\">Medium Risk</small></div></div>';\n      html += '</div>';\n      if (issues.length === 0) {\n        html += '<div class=\"alert alert-success\"><i class=\"bi bi-check-circle me-2\"></i>No issues found in this contract!</div>';\n      } else {\n        // Group issues by severity\n        var highIssues = issues.filter(function (i) {\n          return i.severity === 'HIGH';\n        });\n        var mediumIssues = issues.filter(function (i) {\n          return i.severity === 'MEDIUM';\n        });\n        var lowIssues = issues.filter(function (i) {\n          return i.severity === 'LOW';\n        });\n        [{\n          title: 'High Risk Issues',\n          issues: highIssues,\n          \"class\": 'danger',\n          icon: 'exclamation-triangle'\n        }, {\n          title: 'Medium Risk Issues',\n          issues: mediumIssues,\n          \"class\": 'warning',\n          icon: 'exclamation-circle'\n        }, {\n          title: 'Low Risk Issues',\n          issues: lowIssues,\n          \"class\": 'info',\n          icon: 'info-circle'\n        }].forEach(function (group) {\n          if (group.issues.length > 0) {\n            html += '<div class=\"alert alert-' + group[\"class\"] + ' mb-3\">';\n            html += '<h6><i class=\"bi bi-' + group.icon + ' me-2\"></i>' + group.title + ' (' + group.issues.length + ')</h6>';\n            html += '<ul class=\"mb-0\">';\n            group.issues.forEach(function (issue) {\n              html += '<li><strong>' + issue.name + '</strong><br><small>' + issue.description + '</small></li>';\n            });\n            html += '</ul>';\n            html += '</div>';\n          }\n        });\n      }\n      html += '</div>';\n      resultsContainer.innerHTML = html;\n    }\n  }, {\n    key: \"setupPDFControls\",\n    value: function setupPDFControls() {\n      var _this2 = this;\n      // Add event listeners to PDF navigation buttons\n      document.addEventListener('click', function (e) {\n        if (e.target.closest('#nextPageBtn')) {\n          _this2.nextPage();\n        }\n        if (e.target.closest('#prevPageBtn')) {\n          _this2.previousPage();\n        }\n      });\n    }\n  }, {\n    key: \"loadPDF\",\n    value: function () {\n      var _loadPDF = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(filename) {\n        var url, response, totalPagesEl, pdfContainer, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.p = _context2.n) {\n            case 0:\n              _context2.p = 0;\n              console.log('Loading PDF:', filename);\n              url = \"/pdf/\".concat(filename);\n              console.log('PDF URL:', url);\n\n              // Test if PDF endpoint is accessible\n              _context2.n = 1;\n              return fetch(url, {\n                credentials: 'include'\n              });\n            case 1:\n              response = _context2.v;\n              console.log('PDF response status:', response.status);\n              if (response.ok) {\n                _context2.n = 2;\n                break;\n              }\n              throw new Error(\"Failed to load PDF: \".concat(response.status));\n            case 2:\n              _context2.n = 3;\n              return pdfjsLib.getDocument(url).promise;\n            case 3:\n              this.pdfDoc = _context2.v;\n              totalPagesEl = document.getElementById('totalPages');\n              if (totalPagesEl) {\n                totalPagesEl.textContent = this.pdfDoc.numPages;\n              }\n              _context2.n = 4;\n              return this.renderAllPages();\n            case 4:\n              console.log('PDF loaded successfully');\n              _context2.n = 6;\n              break;\n            case 5:\n              _context2.p = 5;\n              _t2 = _context2.v;\n              console.error('Error loading PDF:', _t2);\n              // Show error message to user\n              pdfContainer = document.getElementById('pdfContainer');\n              if (pdfContainer) {\n                pdfContainer.innerHTML = \"\\n                    <div class=\\\"alert alert-warning\\\">\\n                        <i class=\\\"bi bi-exclamation-triangle me-2\\\"></i>\\n                        Unable to load PDF: \".concat(_t2.message, \"\\n                    </div>\\n                \");\n              }\n            case 6:\n              return _context2.a(2);\n          }\n        }, _callee2, this, [[0, 5]]);\n      }));\n      function loadPDF(_x2) {\n        return _loadPDF.apply(this, arguments);\n      }\n      return loadPDF;\n    }()\n  }, {\n    key: \"renderAllPages\",\n    value: function () {\n      var _renderAllPages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var pdfContainer, pageNum, page, viewport, canvas, ctx, pageContainer, highlightLayer, renderContext, zoomLevelEl, _pdfContainer, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.p = _context3.n) {\n            case 0:\n              _context3.p = 0;\n              if (this.pdfDoc) {\n                _context3.n = 1;\n                break;\n              }\n              throw new Error('PDF document not loaded');\n            case 1:\n              pdfContainer = document.getElementById('pdfContainer');\n              if (pdfContainer) {\n                _context3.n = 2;\n                break;\n              }\n              return _context3.a(2);\n            case 2:\n              pdfContainer.innerHTML = ''; // Clear existing content\n\n              console.log(\"Rendering all \".concat(this.pdfDoc.numPages, \" pages\"));\n              pageNum = 1;\n            case 3:\n              if (!(pageNum <= this.pdfDoc.numPages)) {\n                _context3.n = 7;\n                break;\n              }\n              console.log(\"Rendering page \".concat(pageNum, \" of \").concat(this.pdfDoc.numPages));\n              _context3.n = 4;\n              return this.pdfDoc.getPage(pageNum);\n            case 4:\n              page = _context3.v;\n              viewport = page.getViewport({\n                scale: this.scale\n              }); // Create canvas for this page\n              canvas = document.createElement('canvas');\n              ctx = canvas.getContext('2d');\n              canvas.className = 'pdf-canvas';\n              canvas.height = viewport.height;\n              canvas.width = viewport.width;\n              canvas.style.marginBottom = '20px';\n              canvas.style.border = '1px solid #ddd';\n\n              // Create container for page and highlights\n              pageContainer = document.createElement('div');\n              pageContainer.style.position = 'relative';\n              pageContainer.style.marginBottom = '20px';\n\n              // Create highlight layer for this page\n              highlightLayer = document.createElement('div');\n              highlightLayer.className = 'highlight-layer';\n              highlightLayer.style.position = 'absolute';\n              highlightLayer.style.top = '0';\n              highlightLayer.style.left = '0';\n              highlightLayer.style.width = viewport.width + 'px';\n              highlightLayer.style.height = viewport.height + 'px';\n              highlightLayer.style.pointerEvents = 'none';\n\n              // Render page\n              renderContext = {\n                canvasContext: ctx,\n                viewport: viewport\n              };\n              _context3.n = 5;\n              return page.render(renderContext).promise;\n            case 5:\n              pageContainer.appendChild(canvas);\n              pageContainer.appendChild(highlightLayer);\n              pdfContainer.appendChild(pageContainer);\n              console.log(\"Page \".concat(pageNum, \" rendered successfully\"));\n            case 6:\n              pageNum++;\n              _context3.n = 3;\n              break;\n            case 7:\n              // Update zoom level display\n              zoomLevelEl = document.getElementById('zoomLevel');\n              if (zoomLevelEl) {\n                zoomLevelEl.textContent = Math.round(this.scale * 100) + '%';\n              }\n              console.log('All pages rendered successfully');\n              _context3.n = 9;\n              break;\n            case 8:\n              _context3.p = 8;\n              _t3 = _context3.v;\n              console.error('Error rendering pages:', _t3);\n              _pdfContainer = document.getElementById('pdfContainer');\n              if (_pdfContainer) {\n                _pdfContainer.innerHTML = \"\\n                    <div class=\\\"alert alert-danger\\\">\\n                        <i class=\\\"bi bi-exclamation-triangle me-2\\\"></i>\\n                        Error rendering pages: \".concat(_t3.message, \"\\n                    </div>\\n                \");\n              }\n            case 9:\n              return _context3.a(2);\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n      function renderAllPages() {\n        return _renderAllPages.apply(this, arguments);\n      }\n      return renderAllPages;\n    }()\n  }, {\n    key: \"previousPage\",\n    value: function previousPage() {\n      if (!this.pdfDoc) {\n        console.error('PDF not loaded');\n        return;\n      }\n      if (this.currentPage <= 1) {\n        console.log('Already on first page');\n        return;\n      }\n      this.currentPage--;\n      this.renderPage(this.currentPage);\n    }\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      if (!this.pdfDoc) {\n        console.error('PDF not loaded');\n        alert('PDF not loaded yet. Please wait for the PDF to load completely.');\n        return;\n      }\n      if (this.currentPage >= this.pdfDoc.numPages) {\n        console.log('Already on last page');\n        alert('Already on the last page');\n        return;\n      }\n      this.currentPage++;\n      this.renderPage(this.currentPage);\n    }\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn() {\n      this.scale += 0.2;\n      this.renderAllPages();\n    }\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut() {\n      if (this.scale <= 0.4) return;\n      this.scale -= 0.2;\n      this.renderAllPages();\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this3 = this;\n      // Download report\n      var downloadBtn = document.getElementById('downloadReportBtn');\n      if (downloadBtn) {\n        downloadBtn.addEventListener('click', /*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n          var response, blob, url, a, _t4;\n          return _regenerator().w(function (_context4) {\n            while (1) switch (_context4.p = _context4.n) {\n              case 0:\n                if (_this3.analysisData) {\n                  _context4.n = 1;\n                  break;\n                }\n                alert('No analysis data available');\n                return _context4.a(2);\n              case 1:\n                _context4.p = 1;\n                _context4.n = 2;\n                return API.post('/analysis/report', _this3.analysisData);\n              case 2:\n                response = _context4.v;\n                if (!response.ok) {\n                  _context4.n = 4;\n                  break;\n                }\n                _context4.n = 3;\n                return response.blob();\n              case 3:\n                blob = _context4.v;\n                url = window.URL.createObjectURL(blob);\n                a = document.createElement('a');\n                a.style.display = 'none';\n                a.href = url;\n                a.download = 'contract-analysis-report.pdf';\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n                document.body.removeChild(a);\n                _context4.n = 5;\n                break;\n              case 4:\n                throw new Error('Failed to generate report');\n              case 5:\n                _context4.n = 7;\n                break;\n              case 6:\n                _context4.p = 6;\n                _t4 = _context4.v;\n                console.error('Error downloading report:', _t4);\n                alert('Error generating report: ' + _t4.message);\n              case 7:\n                return _context4.a(2);\n            }\n          }, _callee4, null, [[1, 6]]);\n        })));\n      }\n    }\n  }]);\n}(); // Export for use in other modules\nwindow.ContractAnalysisComponent = ContractAnalysisComponent;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/components/contract-analysis.js?\n}");

/***/ }),

/***/ "./src/js/components/financial-reports.js":
/*!************************************************!*\
  !*** ./src/js/components/financial-reports.js ***!
  \************************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n// Note: showToast and escapeHtml are expected to be available globally\n/**\n * Financial Reports Component\n * Handles monthly financial report management with income, expenses, and investor calculations\n */\nvar FinancialReportsComponent = /*#__PURE__*/function () {\n  function FinancialReportsComponent() {\n    _classCallCheck(this, FinancialReportsComponent);\n    this.selectedProperty = null;\n    this.currentDate = new Date();\n    this.currentReport = null;\n    this.investors = [];\n    this.isModalOpen = false;\n    this.isIncomeExpenseModalOpen = false;\n    this.init();\n  }\n  return _createClass(FinancialReportsComponent, [{\n    key: \"init\",\n    value: function init() {\n      this.bindEvents();\n      this.loadProperties();\n\n      // Initial cleanup to ensure no leftover modals from previous sessions\n      this.forceCleanupModalBackdrops();\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this = this;\n      // Property selector\n      var propertySelector = document.getElementById(\"propertySelector\");\n      if (propertySelector) {\n        propertySelector.addEventListener(\"change\", function (e) {\n          _this.selectProperty(e.target.value);\n        });\n      }\n\n      // Month navigation\n      var prevMonthBtn = document.getElementById(\"prevMonth\");\n      var nextMonthBtn = document.getElementById(\"nextMonth\");\n      if (prevMonthBtn) {\n        prevMonthBtn.addEventListener(\"click\", function () {\n          _this.changeMonth(-1);\n        });\n      }\n      if (nextMonthBtn) {\n        nextMonthBtn.addEventListener(\"click\", function () {\n          _this.changeMonth(1);\n        });\n      }\n\n      // Add income/expense buttons\n      var addIncomeBtn = document.getElementById(\"addIncomeBtn\");\n      var addExpenseBtn = document.getElementById(\"addExpenseBtn\");\n      var addInvestorBtn = document.getElementById(\"addInvestorBtn\");\n      if (addIncomeBtn) {\n        addIncomeBtn.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          // Prevent multiple modal creations\n          if (_this.isIncomeExpenseModalOpen) {\n            return;\n          }\n          _this.showIncomeExpenseModal(\"income\")[\"catch\"](console.error);\n        });\n      }\n      if (addExpenseBtn) {\n        addExpenseBtn.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          // Prevent multiple modal creations\n          if (_this.isIncomeExpenseModalOpen) {\n            return;\n          }\n          _this.showIncomeExpenseModal(\"expense\")[\"catch\"](console.error);\n        });\n      }\n      if (addInvestorBtn) {\n        addInvestorBtn.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n\n          // Prevent multiple modal creations\n          if (_this.isModalOpen) {\n            return;\n          }\n          _this.showInvestorModal();\n        });\n      }\n    }\n  }, {\n    key: \"loadProperties\",\n    value: function () {\n      var _loadProperties = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var response, result, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.PROPERTIES);\n            case 1:\n              response = _context.v;\n              _context.n = 2;\n              return response.json();\n            case 2:\n              result = _context.v;\n              if (result.success) {\n                this.populatePropertySelector(result.properties);\n              } else {\n                // Handle API errors (like authentication required)\n                if (response.status === 401 || response.status === 403) {\n                  this.showError(\"Please log in to load properties\");\n                  this.populatePropertySelector([]); // Show empty selector\n                } else {\n                  this.showError(result.error || \"Failed to load properties\");\n                  this.populatePropertySelector([]); // Show empty selector\n                }\n              }\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error(\"Error loading properties:\", _t);\n              this.showError(\"Failed to load properties. Please check your connection and try again.\");\n              this.populatePropertySelector([]); // Show empty selector with default message\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, this, [[0, 3]]);\n      }));\n      function loadProperties() {\n        return _loadProperties.apply(this, arguments);\n      }\n      return loadProperties;\n    }()\n  }, {\n    key: \"populatePropertySelector\",\n    value: function populatePropertySelector(properties) {\n      var selector = document.getElementById(\"propertySelector\");\n      if (!selector) return;\n\n      // Clear existing options\n      selector.innerHTML = \"\";\n      if (!properties || properties.length === 0) {\n        // Show message when no properties are available\n        selector.innerHTML = '<option value=\"\" disabled>No properties available - please log in or add properties</option>';\n        return;\n      }\n\n      // Add default selection option\n      var defaultOption = document.createElement(\"option\");\n      defaultOption.value = \"\";\n      defaultOption.textContent = \"Select a property...\";\n      selector.appendChild(defaultOption);\n\n      // Add property options\n      properties.forEach(function (property) {\n        var option = document.createElement(\"option\");\n        option.value = property.propertyId;\n        option.textContent = \"\".concat(property.propertyId, \" - \").concat(property.address, \", \").concat(property.unit);\n        selector.appendChild(option);\n      });\n    }\n  }, {\n    key: \"selectProperty\",\n    value: function () {\n      var _selectProperty = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(propertyId) {\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              // Cleanup any open modals when switching properties\n              this.forceCleanupModalBackdrops();\n              this.isModalOpen = false;\n              this.isIncomeExpenseModalOpen = false;\n              if (propertyId) {\n                _context2.n = 1;\n                break;\n              }\n              this.selectedProperty = null;\n              document.getElementById(\"financialReportContent\").style.display = \"none\";\n              return _context2.a(2);\n            case 1:\n              this.selectedProperty = propertyId;\n              document.getElementById(\"financialReportContent\").style.display = \"block\";\n\n              // Load investors for this property\n              _context2.n = 2;\n              return this.loadInvestors(propertyId);\n            case 2:\n              _context2.n = 3;\n              return this.loadFinancialReport();\n            case 3:\n              // Update month display\n              this.updateMonthDisplay();\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, this);\n      }));\n      function selectProperty(_x2) {\n        return _selectProperty.apply(this, arguments);\n      }\n      return selectProperty;\n    }()\n  }, {\n    key: \"loadInvestors\",\n    value: function () {\n      var _loadInvestors = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(propertyId) {\n        var response, result, _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.p = _context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.INVESTORS_BY_PROPERTY(propertyId));\n            case 1:\n              response = _context3.v;\n              _context3.n = 2;\n              return response.json();\n            case 2:\n              result = _context3.v;\n              if (result.success) {\n                this.investors = result.data;\n                this.updateInvestorDisplay();\n              }\n              _context3.n = 4;\n              break;\n            case 3:\n              _context3.p = 3;\n              _t2 = _context3.v;\n              console.error(\"Error loading investors:\", _t2);\n              this.investors = [];\n              this.updateInvestorDisplay();\n            case 4:\n              return _context3.a(2);\n          }\n        }, _callee3, this, [[0, 3]]);\n      }));\n      function loadInvestors(_x3) {\n        return _loadInvestors.apply(this, arguments);\n      }\n      return loadInvestors;\n    }()\n  }, {\n    key: \"loadFinancialReport\",\n    value: function () {\n      var _loadFinancialReport = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var year, month, response, result, _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.p = _context4.n) {\n            case 0:\n              if (this.selectedProperty) {\n                _context4.n = 1;\n                break;\n              }\n              return _context4.a(2);\n            case 1:\n              _context4.p = 1;\n              year = this.currentDate.getFullYear();\n              month = this.currentDate.getMonth() + 1;\n              _context4.n = 2;\n              return API.get(API_CONFIG.ENDPOINTS.FINANCIAL_REPORT(this.selectedProperty, year, month));\n            case 2:\n              response = _context4.v;\n              if (!response.ok) {\n                _context4.n = 4;\n                break;\n              }\n              _context4.n = 3;\n              return response.json();\n            case 3:\n              result = _context4.v;\n              if (result.success) {\n                this.currentReport = result.data;\n              } else {\n                this.currentReport = null;\n              }\n              _context4.n = 5;\n              break;\n            case 4:\n              if (response.status === 404) {\n                // No report exists for this month - start fresh\n                this.currentReport = {\n                  propertyId: this.selectedProperty,\n                  year: year,\n                  month: month,\n                  income: [],\n                  expenses: [],\n                  investorTransactions: [],\n                  totalIncome: 0,\n                  totalExpenses: 0,\n                  netProfit: 0\n                };\n              }\n            case 5:\n              this.updateDisplays();\n              _context4.n = 7;\n              break;\n            case 6:\n              _context4.p = 6;\n              _t3 = _context4.v;\n              console.error(\"Error loading financial report:\", _t3);\n              // Don't show error alert - just log it and continue with empty report\n              this.currentReport = {\n                propertyId: this.selectedProperty,\n                year: this.currentDate.getFullYear(),\n                month: this.currentDate.getMonth() + 1,\n                income: [],\n                expenses: [],\n                investorTransactions: [],\n                totalIncome: 0,\n                totalExpenses: 0,\n                netProfit: 0\n              };\n              this.updateDisplays();\n            case 7:\n              return _context4.a(2);\n          }\n        }, _callee4, this, [[1, 6]]);\n      }));\n      function loadFinancialReport() {\n        return _loadFinancialReport.apply(this, arguments);\n      }\n      return loadFinancialReport;\n    }()\n  }, {\n    key: \"updateDisplays\",\n    value: function updateDisplays() {\n      this.updateIncomeDisplay();\n      this.updateExpenseDisplay();\n      this.updateSummaryDisplay();\n      this.updateInvestorDisplay();\n    }\n  }, {\n    key: \"updateIncomeDisplay\",\n    value: function updateIncomeDisplay() {\n      var _this2 = this;\n      var incomeList = document.getElementById(\"incomeList\");\n      var totalIncomeEl = document.getElementById(\"totalIncome\");\n      if (!this.currentReport || !this.currentReport.income || this.currentReport.income.length === 0) {\n        incomeList.innerHTML = \"\\n                <div class=\\\"text-center text-muted py-4\\\" id=\\\"noIncomeMessage\\\">\\n                    <i class=\\\"bi bi-plus-circle fs-1\\\"></i>\\n                    <p class=\\\"mt-2\\\">No income items added</p>\\n                </div>\\n            \";\n        if (totalIncomeEl) totalIncomeEl.textContent = \"$0.00\";\n        return;\n      }\n      var html = \"\";\n      var total = 0;\n      this.currentReport.income.forEach(function (item, index) {\n        total += item.amount;\n\n        // Find investor name by ID\n        var investor = _this2.investors.find(function (inv) {\n          return inv.investorId === item.personInCharge;\n        });\n        var investorName = investor ? investor.name : item.personInCharge;\n        html += \"\\n                <div class=\\\"border-bottom py-2 mb-2\\\">\\n                    <div class=\\\"d-flex justify-content-between align-items-start\\\">\\n                        <div class=\\\"flex-grow-1\\\">\\n                            <h6 class=\\\"mb-1\\\">\".concat(escapeHtml(item.item), \"</h6>\\n                            <small class=\\\"text-muted\\\">\\n                                Person: \").concat(escapeHtml(investorName)).concat(item.recipientAccountDetail ? \" | Account: \" + escapeHtml(item.recipientAccountDetail) : \"\", \"\\n                            </small>\\n                        </div>\\n                        <div class=\\\"text-end\\\">\\n                            <div class=\\\"fw-bold text-success\\\">$\").concat(item.amount.toFixed(2), \"</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mt-2\\\">\\n                        <button class=\\\"btn btn-sm btn-outline-primary me-2\\\" onclick=\\\"window.financialReports.editItem('income', \").concat(index, \")\\\">\\n                            <i class=\\\"bi bi-pencil\\\"></i>\\n                        </button>\\n                        <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"window.financialReports.deleteItem('income', \").concat(index, \")\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n            \");\n      });\n      incomeList.innerHTML = html;\n      if (totalIncomeEl) totalIncomeEl.textContent = \"$\".concat(total.toFixed(2));\n    }\n  }, {\n    key: \"updateExpenseDisplay\",\n    value: function updateExpenseDisplay() {\n      var _this3 = this;\n      var expenseList = document.getElementById(\"expenseList\");\n      var totalExpensesEl = document.getElementById(\"totalExpenses\");\n      if (!this.currentReport || !this.currentReport.expenses || this.currentReport.expenses.length === 0) {\n        expenseList.innerHTML = \"\\n                <div class=\\\"text-center text-muted py-4\\\">\\n                    <i class=\\\"bi bi-dash-circle fs-1\\\"></i>\\n                    <p class=\\\"mt-2\\\">No expense items added</p>\\n                </div>\\n            \";\n        if (totalExpensesEl) totalExpensesEl.textContent = \"$0.00\";\n        return;\n      }\n      var html = \"\";\n      var total = 0;\n      this.currentReport.expenses.forEach(function (item, index) {\n        total += item.amount;\n\n        // Find investor name by ID\n        var investor = _this3.investors.find(function (inv) {\n          return inv.investorId === item.personInCharge;\n        });\n        var investorName = investor ? investor.name : item.personInCharge;\n        html += \"\\n                <div class=\\\"border-bottom py-2 mb-2\\\">\\n                    <div class=\\\"d-flex justify-content-between align-items-start\\\">\\n                        <div class=\\\"flex-grow-1\\\">\\n                            <h6 class=\\\"mb-1\\\">\".concat(escapeHtml(item.item), \"</h6>\\n                            <small class=\\\"text-muted\\\">\\n                                Person: \").concat(escapeHtml(investorName)).concat(item.recipientAccountDetail ? \" | Account: \" + escapeHtml(item.recipientAccountDetail) : \"\", \"\\n                            </small>\\n                        </div>\\n                        <div class=\\\"text-end\\\">\\n                            <div class=\\\"fw-bold text-danger\\\">$\").concat(item.amount.toFixed(2), \"</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"mt-2\\\">\\n                        <button class=\\\"btn btn-sm btn-outline-primary me-2\\\" onclick=\\\"window.financialReports.editItem('expense', \").concat(index, \")\\\">\\n                            <i class=\\\"bi bi-pencil\\\"></i>\\n                        </button>\\n                        <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"window.financialReports.deleteItem('expense', \").concat(index, \")\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n            \");\n      });\n      expenseList.innerHTML = html;\n      if (totalExpensesEl) totalExpensesEl.textContent = \"$\".concat(total.toFixed(2));\n    }\n  }, {\n    key: \"updateSummaryDisplay\",\n    value: function updateSummaryDisplay() {\n      if (!this.currentReport) return;\n      var totalIncome = this.currentReport.totalIncome || 0;\n      var totalExpenses = this.currentReport.totalExpenses || 0;\n      var netProfit = totalIncome - totalExpenses;\n      var netProfitEl = document.getElementById(\"netProfit\");\n      if (netProfitEl) {\n        netProfitEl.textContent = \"$\".concat(netProfit.toFixed(2));\n        netProfitEl.className = netProfit >= 0 ? \"text-success mb-0\" : \"text-danger mb-0\";\n      }\n    }\n  }, {\n    key: \"updateInvestorDisplay\",\n    value: function updateInvestorDisplay() {\n      var _this4 = this;\n      var investorDistribution = document.getElementById(\"investorDistribution\");\n      if (!this.investors || this.investors.length === 0) {\n        investorDistribution.innerHTML = \"\\n                <div class=\\\"text-center text-muted py-3\\\">\\n                    <i class=\\\"bi bi-person-lines-fill fs-1\\\"></i>\\n                    <p class=\\\"mt-2\\\">No investors configured for this property</p>\\n                </div>\\n            \";\n        return;\n      }\n      var netProfit = this.currentReport ? (this.currentReport.totalIncome || 0) - (this.currentReport.totalExpenses || 0) : 0;\n      var html = \"\";\n      this.investors.forEach(function (investor) {\n        var propertyData = investor.properties.find(function (p) {\n          return p.propertyId === _this4.selectedProperty;\n        });\n        var percentage = propertyData ? propertyData.percentage : 0;\n        var investorShare = netProfit * percentage / 100;\n\n        // Find existing transaction data\n        var existingTransaction = _this4.currentReport && _this4.currentReport.investorTransactions ? _this4.currentReport.investorTransactions.find(function (t) {\n          return t.investorId === investor.investorId;\n        }) : null;\n        var alreadyPaid = existingTransaction ? existingTransaction.alreadyPaid : 0;\n        var alreadyReceived = existingTransaction ? existingTransaction.alreadyReceived : 0;\n\n        // Calculate expenses paid by this investor on behalf of the group\n        var expensesPaidByInvestor = _this4.currentReport && _this4.currentReport.expenses ? _this4.currentReport.expenses.filter(function (expense) {\n          return expense.personInCharge === investor.investorId;\n        }).reduce(function (total, expense) {\n          return total + expense.amount;\n        }, 0) : 0;\n\n        // Calculate income received by this investor on behalf of the group\n        var incomeReceivedByInvestor = _this4.currentReport && _this4.currentReport.income ? _this4.currentReport.income.filter(function (income) {\n          return income.personInCharge === investor.investorId;\n        }).reduce(function (total, income) {\n          return total + income.amount;\n        }, 0) : 0;\n\n        // Final amount = investor's share - what they already paid + what they received + expenses they paid on behalf of group - income they received on behalf of group\n        var finalAmount = investorShare - alreadyPaid + alreadyReceived + expensesPaidByInvestor - incomeReceivedByInvestor;\n        html += \"\\n                <div class=\\\"card mb-2\\\">\\n                    <div class=\\\"card-body py-2\\\">\\n                        <!-- Mobile layout -->\\n                        <div class=\\\"d-md-none\\\">\\n                            <div class=\\\"d-flex justify-content-between align-items-start mb-2\\\">\\n                                <div>\\n                                    <h6 class=\\\"mb-1\\\">\".concat(escapeHtml(investor.name), \"</h6>\\n                                    <small class=\\\"text-muted\\\">\").concat(investor.investorId, \"</small>\\n                                    \").concat(investor.phone ? \"<br><small class=\\\"text-muted\\\">\".concat(escapeHtml(investor.phone), \"</small>\") : \"\", \"\\n                                </div>\\n                                <div class=\\\"text-end\\\">\\n                                    <button class=\\\"btn btn-sm btn-outline-primary me-1\\\" onclick=\\\"window.financialReports.editInvestor('\").concat(investor.investorId, \"')\\\" title=\\\"Edit\\\">\\n                                        <i class=\\\"bi bi-pencil\\\"></i>\\n                                    </button>\\n                                    <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"window.financialReports.removeInvestor('\").concat(investor.investorId, \"')\\\" title=\\\"Remove\\\">\\n                                        <i class=\\\"bi bi-trash\\\"></i>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row text-center\\\">\\n                                <div class=\\\"col-4\\\">\\n                                    <div class=\\\"fw-bold\\\">\").concat(percentage, \"%</div>\\n                                    <small class=\\\"text-muted\\\">Share</small>\\n                                </div>\\n                                <div class=\\\"col-4\\\">\\n                                    <div class=\\\"fw-bold text-primary\\\">$\").concat(investorShare.toFixed(2), \"</div>\\n                                    <small class=\\\"text-muted\\\">Profit Share</small>\\n                                </div>\\n                                <div class=\\\"col-4\\\">\\n                                    <div class=\\\"fw-bold text-warning\\\">$\").concat(expensesPaidByInvestor.toFixed(2), \"</div>\\n                                    <small class=\\\"text-muted\\\">Paid</small>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row text-center mt-2\\\">\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"fw-bold text-info\\\">$\").concat(incomeReceivedByInvestor.toFixed(2), \"</div>\\n                                    <small class=\\\"text-muted\\\">Received</small>\\n                                </div>\\n                                <div class=\\\"col-6\\\">\\n                                    <div class=\\\"fw-bold \").concat(finalAmount >= 0 ? \"text-success\" : \"text-danger\", \"\\\">\\n                                        $\").concat(finalAmount.toFixed(2), \"\\n                                    </div>\\n                                    <small class=\\\"text-muted\\\">Final</small>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        \\n                        <!-- Desktop layout -->\\n                        <div class=\\\"row align-items-center d-none d-md-flex\\\">\\n                            <div class=\\\"col-md-3 col-lg-2\\\">\\n                                <h6 class=\\\"mb-0\\\">\").concat(escapeHtml(investor.name), \"</h6>\\n                                <small class=\\\"text-muted\\\">\").concat(investor.investorId, \"</small>\\n                                \").concat(investor.phone ? \"<br><small class=\\\"text-muted\\\">\".concat(escapeHtml(investor.phone), \"</small>\") : \"\", \"\\n                            </div>\\n                            <div class=\\\"col-md-1 col-lg-1 text-center\\\">\\n                                <div class=\\\"fw-bold\\\">\").concat(percentage, \"%</div>\\n                                <small class=\\\"text-muted\\\">Share</small>\\n                            </div>\\n                            <div class=\\\"col-md-2 col-lg-2 text-center\\\">\\n                                <div class=\\\"fw-bold text-primary\\\">$\").concat(investorShare.toFixed(2), \"</div>\\n                                <small class=\\\"text-muted\\\">Profit Share</small>\\n                            </div>\\n                            <div class=\\\"col-md-2 col-lg-2 text-center\\\">\\n                                <div class=\\\"fw-bold text-warning\\\">$\").concat(expensesPaidByInvestor.toFixed(2), \"</div>\\n                                <small class=\\\"text-muted\\\">Paid</small>\\n                            </div>\\n                            <div class=\\\"col-md-2 col-lg-2 text-center\\\">\\n                                <div class=\\\"fw-bold text-info\\\">$\").concat(incomeReceivedByInvestor.toFixed(2), \"</div>\\n                                <small class=\\\"text-muted\\\">Received</small>\\n                            </div>\\n                            <div class=\\\"col-md-1 col-lg-2 text-center\\\">\\n                                <div class=\\\"fw-bold \").concat(finalAmount >= 0 ? \"text-success\" : \"text-danger\", \"\\\">\\n                                    $\").concat(finalAmount.toFixed(2), \"\\n                                </div>\\n                                <small class=\\\"text-muted\\\">Final</small>\\n                            </div>\\n                            <div class=\\\"col-md-1 col-lg-1 text-end\\\">\\n                                <button class=\\\"btn btn-sm btn-outline-primary me-1\\\" onclick=\\\"window.financialReports.editInvestor('\").concat(investor.investorId, \"')\\\" title=\\\"Edit\\\">\\n                                    <i class=\\\"bi bi-pencil\\\"></i>\\n                                </button>\\n                                <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"window.financialReports.removeInvestor('\").concat(investor.investorId, \"')\\\" title=\\\"Remove\\\">\\n                                    <i class=\\\"bi bi-trash\\\"></i>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            \");\n      });\n      investorDistribution.innerHTML = html;\n    }\n  }, {\n    key: \"updateMonthDisplay\",\n    value: function updateMonthDisplay() {\n      var currentMonthEl = document.getElementById(\"currentMonth\");\n      var currentMonthBadge = document.getElementById(\"currentMonthBadge\");\n      if (currentMonthEl) {\n        var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        var month = monthNames[this.currentDate.getMonth()];\n        var year = this.currentDate.getFullYear();\n        currentMonthEl.textContent = \"\".concat(month, \" \").concat(year);\n      }\n      if (currentMonthBadge) {\n        var now = new Date();\n        var isCurrentMonth = this.currentDate.getMonth() === now.getMonth() && this.currentDate.getFullYear() === now.getFullYear();\n        currentMonthBadge.textContent = isCurrentMonth ? \"Current Month\" : \"Historical\";\n\n        // Use smaller font size for better mobile display\n        var isMobile = window.innerWidth < 768;\n        var fontSizeClass = isMobile ? \"\" : \"fs-6\"; // No fs-6 on mobile, use CSS instead\n\n        currentMonthBadge.className = isCurrentMonth ? \"badge bg-info \".concat(fontSizeClass).trim() : \"badge bg-secondary \".concat(fontSizeClass).trim();\n      }\n    }\n  }, {\n    key: \"changeMonth\",\n    value: function changeMonth(direction) {\n      var newDate = new Date(this.currentDate);\n      newDate.setMonth(newDate.getMonth() + direction);\n      this.currentDate = newDate;\n      this.updateMonthDisplay();\n      this.loadFinancialReport();\n    }\n  }, {\n    key: \"showIncomeExpenseModal\",\n    value: function () {\n      var _showIncomeExpenseModal = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(type) {\n        var _this5 = this;\n        var modalHtml, modalElement, modal, form;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.n) {\n            case 0:\n              if (!this.isIncomeExpenseModalOpen) {\n                _context5.n = 1;\n                break;\n              }\n              return _context5.a(2);\n            case 1:\n              if (!(!this.investors || this.investors.length === 0)) {\n                _context5.n = 2;\n                break;\n              }\n              this.showError(\"Please add investors to this property before adding \".concat(type, \" items.\"));\n              return _context5.a(2);\n            case 2:\n              this.isIncomeExpenseModalOpen = true;\n\n              // Force cleanup any existing modals\n              this.cleanupExistingModals();\n\n              // Create modal HTML dynamically\n              modalHtml = this.createIncomeExpenseModalHtml(type); // Add modal to page\n              document.body.insertAdjacentHTML(\"beforeend\", modalHtml);\n\n              // Wait a tick to ensure DOM is updated\n              _context5.n = 3;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 10);\n              });\n            case 3:\n              // Show modal\n              modalElement = document.getElementById(\"incomeExpenseModal\");\n              if (modalElement) {\n                _context5.n = 4;\n                break;\n              }\n              console.error(\"Modal element not found in DOM\");\n              this.isIncomeExpenseModalOpen = false;\n              return _context5.a(2);\n            case 4:\n              modal = new bootstrap.Modal(modalElement, {\n                backdrop: true,\n                keyboard: true,\n                focus: false // Disable Bootstrap's focus management\n              }); // Focus on first input after modal is shown\n\n              modalElement.addEventListener(\"shown.bs.modal\", function () {\n                var firstInput = modalElement.querySelector('input[name=\"item\"]');\n                if (firstInput) {\n                  // Remove any disabled attributes and ensure inputs are interactive\n                  var allInputs = modalElement.querySelectorAll(\"input, select, textarea\");\n                  allInputs.forEach(function (input) {\n                    input.removeAttribute(\"disabled\");\n                    input.removeAttribute(\"readonly\");\n                    input.style.pointerEvents = \"auto\";\n                    input.tabIndex = 0;\n\n                    // Add explicit click handler to ensure focus works\n                    input.addEventListener(\"click\", function (e) {\n                      e.stopPropagation();\n                      this.focus();\n                    });\n                    input.addEventListener(\"mousedown\", function (e) {\n                      e.stopPropagation();\n                    });\n                  });\n\n                  // Multiple attempts to focus\n                  setTimeout(function () {\n                    firstInput.focus();\n                  }, 100);\n                  setTimeout(function () {\n                    firstInput.focus();\n                    firstInput.select();\n                  }, 300);\n                }\n              });\n\n              // Clean up modal when hidden\n              modalElement.addEventListener(\"hidden.bs.modal\", function () {\n                _this5.isIncomeExpenseModalOpen = false;\n                modalElement.remove();\n\n                // Force cleanup of backdrops after a short delay\n                setTimeout(function () {\n                  _this5.forceCleanupModalBackdrops();\n                }, 100);\n              });\n              modal.show();\n\n              // Bind form submission for income/expense\n              form = document.getElementById(\"incomeExpenseForm\");\n              if (form) {\n                form.addEventListener(\"submit\", function (e) {\n                  e.preventDefault();\n\n                  // Prevent multiple submissions\n                  if (form.dataset.submitting === \"true\") {\n                    return;\n                  }\n                  form.dataset.submitting = \"true\";\n                  _this5.saveIncomeExpenseItem(type, modal)[\"finally\"](function () {\n                    form.dataset.submitting = \"false\";\n                  });\n                });\n              }\n            case 5:\n              return _context5.a(2);\n          }\n        }, _callee5, this);\n      }));\n      function showIncomeExpenseModal(_x4) {\n        return _showIncomeExpenseModal.apply(this, arguments);\n      }\n      return showIncomeExpenseModal;\n    }()\n  }, {\n    key: \"generateInvestorOptions\",\n    value: function generateInvestorOptions() {\n      if (!this.investors || this.investors.length === 0) {\n        return '<option value=\"\" disabled>No investors available for this property</option>';\n      }\n      return this.investors.map(function (investor) {\n        return \"<option value=\\\"\".concat(investor.investorId, \"\\\">\").concat(escapeHtml(investor.name), \" (ID: \").concat(investor.investorId, \")</option>\");\n      }).join(\"\");\n    }\n  }, {\n    key: \"createIncomeExpenseModalHtml\",\n    value: function createIncomeExpenseModalHtml(type) {\n      var isIncome = type === \"income\";\n      var title = isIncome ? \"Add Income Item\" : \"Add Expense Item\";\n      var icon = isIncome ? \"plus-circle\" : \"dash-circle\";\n      var color = isIncome ? \"success\" : \"danger\";\n      return \"\\n            <div class=\\\"modal fade\\\" id=\\\"incomeExpenseModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"incomeExpenseModalLabel\\\" aria-hidden=\\\"true\\\">\\n                <div class=\\\"modal-dialog\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <h5 class=\\\"modal-title\\\" id=\\\"incomeExpenseModalLabel\\\">\\n                                <i class=\\\"bi bi-\".concat(icon, \" me-2\\\"></i>\").concat(title, \"\\n                            </h5>\\n                            <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n                        </div>\\n                        <form id=\\\"incomeExpenseForm\\\">\\n                            <div class=\\\"modal-body\\\">\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Item Description <span class=\\\"text-danger\\\">*</span></label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"item\\\" required placeholder=\\\"e.g., Rent, Utilities, Repairs\\\" autocomplete=\\\"off\\\">\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Amount (SGD) <span class=\\\"text-danger\\\">*</span></label>\\n                                    <div class=\\\"input-group\\\">\\n                                        <span class=\\\"input-group-text\\\">$</span>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"amount\\\" required min=\\\"0\\\" step=\\\"0.01\\\" placeholder=\\\"0.00\\\" autocomplete=\\\"off\\\">\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Person in Charge <span class=\\\"text-danger\\\">*</span></label>\\n                                    <select class=\\\"form-select\\\" name=\\\"personInCharge\\\" required>\\n                                        <option value=\\\"\\\">Select investor...</option>\\n                                        \").concat(this.generateInvestorOptions(), \"\\n                                    </select>\\n                                    <div class=\\\"form-text\\\">Select the investor responsible for this \").concat(type, \"</div>\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Account Details</label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"recipientAccountDetail\\\" placeholder=\\\"Bank or payment details (optional)\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"form-text\\\">Optional: Add bank account or payment method details</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"modal-footer\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\">Cancel</button>\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-\").concat(color, \"\\\">\\n                                    <i class=\\\"bi bi-\").concat(icon, \" me-1\\\"></i>Add \").concat(isIncome ? \"Income\" : \"Expense\", \"\\n                                </button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n  }, {\n    key: \"saveIncomeExpenseItem\",\n    value: function () {\n      var _saveIncomeExpenseItem = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(type, modal) {\n        var _this6 = this;\n        var form, formData, itemData, year, month, endpoint, response, result, _t4;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.p = _context6.n) {\n            case 0:\n              form = document.getElementById(\"incomeExpenseForm\");\n              formData = new FormData(form);\n              itemData = {\n                item: formData.get(\"item\"),\n                amount: parseFloat(formData.get(\"amount\")),\n                personInCharge: formData.get(\"personInCharge\"),\n                recipientAccountDetail: formData.get(\"recipientAccountDetail\")\n              };\n              _context6.p = 1;\n              year = this.currentDate.getFullYear();\n              month = this.currentDate.getMonth() + 1;\n              endpoint = type === \"income\" ? API_CONFIG.ENDPOINTS.FINANCIAL_REPORT_INCOME(this.selectedProperty, year, month) : API_CONFIG.ENDPOINTS.FINANCIAL_REPORT_EXPENSES(this.selectedProperty, year, month);\n              _context6.n = 2;\n              return API.post(endpoint, itemData);\n            case 2:\n              response = _context6.v;\n              _context6.n = 3;\n              return response.json();\n            case 3:\n              result = _context6.v;\n              if (!result.success) {\n                _context6.n = 5;\n                break;\n              }\n              // Force close modal and cleanup\n              this.isIncomeExpenseModalOpen = false;\n              modal.hide();\n\n              // Use a more aggressive cleanup approach\n              setTimeout(function () {\n                _this6.forceCleanupModalBackdrops();\n              }, 150);\n              _context6.n = 4;\n              return this.loadFinancialReport();\n            case 4:\n              this.showSuccess(\"\".concat(type.charAt(0).toUpperCase() + type.slice(1), \" item added successfully\"));\n              _context6.n = 6;\n              break;\n            case 5:\n              throw new Error(result.message || \"Failed to add \".concat(type, \" item\"));\n            case 6:\n              _context6.n = 8;\n              break;\n            case 7:\n              _context6.p = 7;\n              _t4 = _context6.v;\n              console.error(\"Error saving \".concat(type, \" item:\"), _t4);\n              this.showError(_t4.message || \"Failed to add \".concat(type, \" item\"));\n            case 8:\n              return _context6.a(2);\n          }\n        }, _callee6, this, [[1, 7]]);\n      }));\n      function saveIncomeExpenseItem(_x5, _x6) {\n        return _saveIncomeExpenseItem.apply(this, arguments);\n      }\n      return saveIncomeExpenseItem;\n    }()\n  }, {\n    key: \"showInvestorModal\",\n    value: function showInvestorModal() {\n      var _this7 = this;\n      var investorId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // Prevent multiple modal creations\n      if (this.isModalOpen) {\n        return;\n      }\n      this.isModalOpen = true;\n\n      // Force cleanup any existing modals (including Bootstrap instances)\n      this.cleanupExistingModals();\n\n      // Create investor modal HTML dynamically\n      var modalHtml = this.createInvestorModalHtml(investorId);\n\n      // Add modal to page\n      document.body.insertAdjacentHTML(\"beforeend\", modalHtml);\n\n      // Show modal\n      var modalElement = document.getElementById(\"investorModal\");\n      var modal = new bootstrap.Modal(modalElement, {\n        backdrop: true,\n        keyboard: true,\n        focus: false\n      });\n\n      // Focus on first input after modal is shown\n      modalElement.addEventListener(\"shown.bs.modal\", function () {\n        // Pre-fill form if editing existing investor (do this after modal is shown)\n        if (investorId) {\n          _this7.fillInvestorForm(investorId);\n        }\n        var firstInput = modalElement.querySelector('input[name=\"username\"]');\n        if (firstInput) {\n          // Test if input is focusable and typable immediately\n          firstInput.focus();\n        }\n      });\n\n      // Clean up modal when hidden\n      modalElement.addEventListener(\"hidden.bs.modal\", function () {\n        _this7.isModalOpen = false;\n        modalElement.remove();\n\n        // Force cleanup of backdrops after a short delay\n        setTimeout(function () {\n          _this7.forceCleanupModalBackdrops();\n        }, 100);\n      });\n      modal.show();\n\n      // Bind form submission\n      var form = document.getElementById(\"investorForm\");\n      form.addEventListener(\"submit\", function (e) {\n        e.preventDefault();\n\n        // Prevent multiple submissions\n        if (form.dataset.submitting === \"true\") {\n          return;\n        }\n        form.dataset.submitting = \"true\";\n        _this7.saveInvestor(investorId, modal)[\"finally\"](function () {\n          form.dataset.submitting = \"false\";\n        });\n      });\n    }\n  }, {\n    key: \"cleanupExistingModals\",\n    value: function cleanupExistingModals() {\n      // Find all modals with our IDs\n      var modalIds = [\"investorModal\", \"incomeExpenseModal\"];\n      modalIds.forEach(function (modalId) {\n        var existingModal = document.getElementById(modalId);\n        if (existingModal) {\n          // Try to hide the modal first if it has a Bootstrap instance\n          try {\n            var bootstrapModal = bootstrap.Modal.getInstance(existingModal);\n            if (bootstrapModal) {\n              bootstrapModal.hide();\n              bootstrapModal.dispose();\n            }\n          } catch (e) {}\n\n          // Remove the element\n          existingModal.remove();\n        }\n      });\n\n      // Force cleanup of all modal-related elements\n      this.forceCleanupModalBackdrops();\n    }\n  }, {\n    key: \"forceCleanupModalBackdrops\",\n    value: function forceCleanupModalBackdrops() {\n      // Clear any backdrop elements that might be left behind\n      var backdrops = document.querySelectorAll(\".modal-backdrop\");\n      backdrops.forEach(function (backdrop) {\n        backdrop.remove();\n      });\n\n      // Also check for any Bootstrap modal classes and elements\n      var modalElements = document.querySelectorAll(\".modal\");\n      modalElements.forEach(function (modal) {\n        if (modal.id === \"investorModal\" || modal.id === \"incomeExpenseModal\") {\n          modal.remove();\n        }\n      });\n\n      // Reset body classes and styles that Bootstrap might have added\n      document.body.classList.remove(\"modal-open\");\n      document.body.style.removeProperty(\"overflow\");\n      document.body.style.removeProperty(\"padding-right\");\n      document.body.style.removeProperty(\"margin-right\");\n\n      // Force reflow to ensure changes take effect\n      document.body.offsetHeight;\n    }\n  }, {\n    key: \"createInvestorModalHtml\",\n    value: function createInvestorModalHtml(investorId) {\n      var isEdit = !!investorId;\n      var title = isEdit ? \"Edit Investor\" : \"Add Investor\";\n      return \"\\n            <div class=\\\"modal fade\\\" id=\\\"investorModal\\\" tabindex=\\\"-1\\\" aria-labelledby=\\\"investorModalLabel\\\" aria-hidden=\\\"true\\\">\\n                <div class=\\\"modal-dialog\\\">\\n                    <div class=\\\"modal-content\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <h5 class=\\\"modal-title\\\" id=\\\"investorModalLabel\\\">\\n                                <i class=\\\"bi bi-person-plus me-2\\\"></i>\".concat(title, \"\\n                            </h5>\\n                            <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"></button>\\n                        </div>\\n                        <form id=\\\"investorForm\\\">\\n                            <div class=\\\"modal-body\\\">\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Username <span class=\\\"text-danger\\\">*</span></label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" required placeholder=\\\"Enter unique username\\\" autocomplete=\\\"off\\\">\\n                                    <div class=\\\"form-text\\\">Unique username for this investor (e.g., john_smith, investor1)</div>\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Investor Name <span class=\\\"text-danger\\\">*</span></label>\\n                                    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" required placeholder=\\\"Enter full name\\\" autocomplete=\\\"off\\\">\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Percentage Share <span class=\\\"text-danger\\\">*</span></label>\\n                                    <div class=\\\"input-group\\\">\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"percentage\\\" required min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.1\\\" placeholder=\\\"0.0\\\" autocomplete=\\\"off\\\">\\n                                        <span class=\\\"input-group-text\\\">%</span>\\n                                    </div>\\n                                    <div class=\\\"form-text\\\">Enter percentage share (0-100%)</div>\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Phone Number (Optional)</label>\\n                                    <input type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"phone\\\" placeholder=\\\"Enter phone number\\\" autocomplete=\\\"off\\\">\\n                                </div>\\n                                <div class=\\\"mb-3\\\">\\n                                    <label class=\\\"form-label\\\">Email (Optional)</label>\\n                                    <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" placeholder=\\\"Enter email address\\\" autocomplete=\\\"off\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"modal-footer\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\">Cancel</button>\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n                                    <i class=\\\"bi bi-check-circle me-1\\\"></i>\").concat(isEdit ? \"Update\" : \"Add\", \" Investor\\n                                </button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        \");\n    }\n  }, {\n    key: \"fillInvestorForm\",\n    value: function fillInvestorForm(investorId) {\n      var _this8 = this;\n      var investor = this.investors.find(function (inv) {\n        return inv.investorId === investorId;\n      });\n      if (investor) {\n        var form = document.getElementById(\"investorForm\");\n        var usernameInput = form.querySelector('input[name=\"username\"]');\n        var nameInput = form.querySelector('input[name=\"name\"]');\n        var phoneInput = form.querySelector('input[name=\"phone\"]');\n        var emailInput = form.querySelector('input[name=\"email\"]');\n        var percentageInput = form.querySelector('input[name=\"percentage\"]');\n        if (usernameInput) {\n          usernameInput.value = investor.username || \"\";\n        }\n        if (nameInput) {\n          nameInput.value = investor.name || \"\";\n        }\n        if (phoneInput) {\n          phoneInput.value = investor.phone || \"\";\n        }\n        if (emailInput) {\n          emailInput.value = investor.email || \"\";\n        }\n        var propertyData = investor.properties.find(function (p) {\n          return p.propertyId === _this8.selectedProperty;\n        });\n        if (propertyData && percentageInput) {\n          percentageInput.value = propertyData.percentage;\n        }\n      }\n    }\n  }, {\n    key: \"saveInvestor\",\n    value: function () {\n      var _saveInvestor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(investorId, modal) {\n        var _this9 = this;\n        var form, formData, investorData, wasExistingInvestor, _t5;\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.p = _context7.n) {\n            case 0:\n              form = document.getElementById(\"investorForm\");\n              formData = new FormData(form);\n              investorData = {\n                username: formData.get(\"username\") || \"\",\n                name: formData.get(\"name\") || \"\",\n                phone: formData.get(\"phone\") || \"\",\n                email: formData.get(\"email\") || \"\",\n                percentage: parseFloat(formData.get(\"percentage\")) || 0\n              };\n              _context7.p = 1;\n              if (!investorId) {\n                _context7.n = 3;\n                break;\n              }\n              _context7.n = 2;\n              return this.updateInvestor(investorId, investorData);\n            case 2:\n              _context7.n = 4;\n              break;\n            case 3:\n              _context7.n = 4;\n              return this.createInvestor(investorData);\n            case 4:\n              // Force close modal and cleanup\n              this.isModalOpen = false;\n              modal.hide();\n\n              // Use a more aggressive cleanup approach\n              setTimeout(function () {\n                _this9.forceCleanupModalBackdrops();\n              }, 150);\n              _context7.n = 5;\n              return this.loadInvestors(this.selectedProperty);\n            case 5:\n              // Show different messages based on whether we're editing or creating\n              if (investorId) {\n                this.showSuccess(\"Investor updated successfully\");\n              } else {\n                // Check if this was an existing investor being added to a new property\n                wasExistingInvestor = this.lastActionWasAddPropertyToExisting;\n                this.lastActionWasAddPropertyToExisting = false; // Reset flag\n\n                if (wasExistingInvestor) {\n                  this.showSuccess(\"Existing investor added to this property successfully\");\n                } else {\n                  this.showSuccess(\"New investor created and added successfully\");\n                }\n              }\n              _context7.n = 7;\n              break;\n            case 6:\n              _context7.p = 6;\n              _t5 = _context7.v;\n              console.error(\"Error saving investor:\", _t5);\n              this.showError(_t5.message || \"Failed to \".concat(investorId ? \"update\" : \"add\", \" investor\"));\n            case 7:\n              return _context7.a(2);\n          }\n        }, _callee7, this, [[1, 6]]);\n      }));\n      function saveInvestor(_x7, _x8) {\n        return _saveInvestor.apply(this, arguments);\n      }\n      return saveInvestor;\n    }()\n  }, {\n    key: \"createInvestor\",\n    value: function () {\n      var _createInvestor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(investorData) {\n        var _this0 = this;\n        var allInvestorsResponse, allInvestorsResult, existingInvestor, hasProperty, addPropertyResponse, addPropertyResult, investorId, newInvestor, response, result, _t6;\n        return _regenerator().w(function (_context8) {\n          while (1) switch (_context8.p = _context8.n) {\n            case 0:\n              _context8.p = 0;\n              _context8.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.INVESTORS);\n            case 1:\n              allInvestorsResponse = _context8.v;\n              _context8.n = 2;\n              return allInvestorsResponse.json();\n            case 2:\n              allInvestorsResult = _context8.v;\n              if (!(allInvestorsResult.success && allInvestorsResult.data)) {\n                _context8.n = 7;\n                break;\n              }\n              // Look for existing investor by username or name\n              existingInvestor = allInvestorsResult.data.find(function (investor) {\n                // Check by username if both have username\n                if (investor.username && investorData.username) {\n                  return investor.username === investorData.username;\n                }\n                // Otherwise check by name (case insensitive)\n                return investor.name.toLowerCase() === investorData.name.toLowerCase();\n              });\n              if (!existingInvestor) {\n                _context8.n = 7;\n                break;\n              }\n              // Check if this property is already in the investor's portfolio\n              hasProperty = existingInvestor.properties.some(function (p) {\n                return p.propertyId === _this0.selectedProperty;\n              });\n              if (!hasProperty) {\n                _context8.n = 3;\n                break;\n              }\n              throw new Error(\"Investor is already invested in this property\");\n            case 3:\n              _context8.n = 4;\n              return API.post(API_CONFIG.ENDPOINTS.INVESTOR_ADD_PROPERTY(existingInvestor.investorId), {\n                propertyId: this.selectedProperty,\n                percentage: investorData.percentage\n              });\n            case 4:\n              addPropertyResponse = _context8.v;\n              _context8.n = 5;\n              return addPropertyResponse.json();\n            case 5:\n              addPropertyResult = _context8.v;\n              if (addPropertyResult.success) {\n                _context8.n = 6;\n                break;\n              }\n              throw new Error(addPropertyResult.message || \"Failed to add property to existing investor\");\n            case 6:\n              this.lastActionWasAddPropertyToExisting = true; // Set flag for success message\n              return _context8.a(2);\n            case 7:\n              _context8.n = 8;\n              return this.generateInvestorId();\n            case 8:\n              investorId = _context8.v;\n              newInvestor = {\n                investorId: investorId,\n                username: investorData.username,\n                name: investorData.name,\n                phone: investorData.phone,\n                email: investorData.email,\n                properties: [{\n                  propertyId: this.selectedProperty,\n                  percentage: investorData.percentage\n                }]\n              };\n              _context8.n = 9;\n              return API.post(API_CONFIG.ENDPOINTS.INVESTORS, newInvestor);\n            case 9:\n              response = _context8.v;\n              _context8.n = 10;\n              return response.json();\n            case 10:\n              result = _context8.v;\n              if (result.success) {\n                _context8.n = 11;\n                break;\n              }\n              throw new Error(result.message || \"Failed to create investor\");\n            case 11:\n              _context8.n = 13;\n              break;\n            case 12:\n              _context8.p = 12;\n              _t6 = _context8.v;\n              console.error(\"Error in createInvestor:\", _t6);\n              throw _t6;\n            case 13:\n              return _context8.a(2);\n          }\n        }, _callee8, this, [[0, 12]]);\n      }));\n      function createInvestor(_x9) {\n        return _createInvestor.apply(this, arguments);\n      }\n      return createInvestor;\n    }()\n  }, {\n    key: \"generateInvestorId\",\n    value: function () {\n      var _generateInvestorId = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9() {\n        var response, result, maxId, _t7;\n        return _regenerator().w(function (_context9) {\n          while (1) switch (_context9.p = _context9.n) {\n            case 0:\n              _context9.p = 0;\n              _context9.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.INVESTORS);\n            case 1:\n              response = _context9.v;\n              _context9.n = 2;\n              return response.json();\n            case 2:\n              result = _context9.v;\n              if (!(result.success && result.data)) {\n                _context9.n = 3;\n                break;\n              }\n              // Find the highest numeric ID and increment\n              maxId = 0;\n              result.data.forEach(function (investor) {\n                var numericId = parseInt(investor.investorId);\n                if (!isNaN(numericId) && numericId > maxId) {\n                  maxId = numericId;\n                }\n              });\n              return _context9.a(2, (maxId + 1).toString());\n            case 3:\n              return _context9.a(2, \"1\");\n            case 4:\n              _context9.n = 6;\n              break;\n            case 5:\n              _context9.p = 5;\n              _t7 = _context9.v;\n              console.error(\"Error generating investor ID:\", _t7);\n              return _context9.a(2, Date.now().toString());\n            case 6:\n              return _context9.a(2);\n          }\n        }, _callee9, null, [[0, 5]]);\n      }));\n      function generateInvestorId() {\n        return _generateInvestorId.apply(this, arguments);\n      }\n      return generateInvestorId;\n    }()\n  }, {\n    key: \"updateInvestor\",\n    value: function () {\n      var _updateInvestor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(investorId, investorData) {\n        var response, result;\n        return _regenerator().w(function (_context0) {\n          while (1) switch (_context0.n) {\n            case 0:\n              _context0.n = 1;\n              return API.put(API_CONFIG.ENDPOINTS.INVESTOR_BY_ID(investorId), investorData);\n            case 1:\n              response = _context0.v;\n              _context0.n = 2;\n              return response.json();\n            case 2:\n              result = _context0.v;\n              if (result.success) {\n                _context0.n = 3;\n                break;\n              }\n              throw new Error(result.message || \"Failed to update investor\");\n            case 3:\n              return _context0.a(2);\n          }\n        }, _callee0);\n      }));\n      function updateInvestor(_x0, _x1) {\n        return _updateInvestor.apply(this, arguments);\n      }\n      return updateInvestor;\n    }()\n  }, {\n    key: \"editInvestor\",\n    value: function editInvestor(investorId) {\n      this.showInvestorModal(investorId);\n    }\n  }, {\n    key: \"removeInvestor\",\n    value: function () {\n      var _removeInvestor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1(investorId) {\n        var response, result, _t8;\n        return _regenerator().w(function (_context1) {\n          while (1) switch (_context1.p = _context1.n) {\n            case 0:\n              if (confirm(\"Are you sure you want to remove this investor from this property?\")) {\n                _context1.n = 1;\n                break;\n              }\n              return _context1.a(2);\n            case 1:\n              _context1.p = 1;\n              _context1.n = 2;\n              return API[\"delete\"](API_CONFIG.ENDPOINTS.INVESTOR_REMOVE_PROPERTY(investorId, this.selectedProperty));\n            case 2:\n              response = _context1.v;\n              _context1.n = 3;\n              return response.json();\n            case 3:\n              result = _context1.v;\n              if (!result.success) {\n                _context1.n = 5;\n                break;\n              }\n              _context1.n = 4;\n              return this.loadInvestors(this.selectedProperty);\n            case 4:\n              // Show different messages based on the action taken\n              if (result.action === \"deleted_completely\") {\n                this.showSuccess(\"Investor removed completely from database (no more property investments)\");\n              } else {\n                this.showSuccess(\"Investor removed from this property successfully\");\n              }\n              _context1.n = 6;\n              break;\n            case 5:\n              throw new Error(result.message || \"Failed to remove investor\");\n            case 6:\n              _context1.n = 8;\n              break;\n            case 7:\n              _context1.p = 7;\n              _t8 = _context1.v;\n              console.error(\"Error removing investor:\", _t8);\n              this.showError(_t8.message || \"Failed to remove investor\");\n            case 8:\n              return _context1.a(2);\n          }\n        }, _callee1, this, [[1, 7]]);\n      }));\n      function removeInvestor(_x10) {\n        return _removeInvestor.apply(this, arguments);\n      }\n      return removeInvestor;\n    }()\n  }, {\n    key: \"editItem\",\n    value: function editItem(type, index) {\n      // TODO: Implement edit functionality\n      this.showInfo(\"Edit functionality for \".concat(type, \" item #\").concat(index + 1, \" coming soon!\"));\n    }\n  }, {\n    key: \"deleteItem\",\n    value: function () {\n      var _deleteItem = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee10(type, index) {\n        var year, month, endpoint, response, result, _t9;\n        return _regenerator().w(function (_context10) {\n          while (1) switch (_context10.p = _context10.n) {\n            case 0:\n              if (confirm(\"Are you sure you want to delete this item?\")) {\n                _context10.n = 1;\n                break;\n              }\n              return _context10.a(2);\n            case 1:\n              _context10.p = 1;\n              year = this.currentDate.getFullYear();\n              month = this.currentDate.getMonth() + 1; // Build the endpoint URL for deleting the specific item\n              endpoint = type === \"income\" ? API_CONFIG.ENDPOINTS.FINANCIAL_REPORT_INCOME(this.selectedProperty, year, month) + \"/\".concat(index) : API_CONFIG.ENDPOINTS.FINANCIAL_REPORT_EXPENSES(this.selectedProperty, year, month) + \"/\".concat(index);\n              _context10.n = 2;\n              return API[\"delete\"](endpoint);\n            case 2:\n              response = _context10.v;\n              _context10.n = 3;\n              return response.json();\n            case 3:\n              result = _context10.v;\n              if (!result.success) {\n                _context10.n = 5;\n                break;\n              }\n              _context10.n = 4;\n              return this.loadFinancialReport();\n            case 4:\n              this.showSuccess(\"\".concat(type.charAt(0).toUpperCase() + type.slice(1), \" item deleted successfully\"));\n              _context10.n = 6;\n              break;\n            case 5:\n              throw new Error(result.message || \"Failed to delete \".concat(type, \" item\"));\n            case 6:\n              _context10.n = 8;\n              break;\n            case 7:\n              _context10.p = 7;\n              _t9 = _context10.v;\n              console.error(\"Error deleting \".concat(type, \" item:\"), _t9);\n              this.showError(_t9.message || \"Failed to delete \".concat(type, \" item\"));\n            case 8:\n              return _context10.a(2);\n          }\n        }, _callee10, this, [[1, 7]]);\n      }));\n      function deleteItem(_x11, _x12) {\n        return _deleteItem.apply(this, arguments);\n      }\n      return deleteItem;\n    }()\n  }, {\n    key: \"showToast\",\n    value: function (_showToast) {\n      function showToast(_x) {\n        return _showToast.apply(this, arguments);\n      }\n      showToast.toString = function () {\n        return _showToast.toString();\n      };\n      return showToast;\n    }(function (message) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n      showToast(message, type);\n    })\n  }, {\n    key: \"showSuccess\",\n    value: function showSuccess(message) {\n      this.showToast(message, \"success\");\n    }\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      this.showToast(message, \"error\");\n    }\n  }, {\n    key: \"showInfo\",\n    value: function showInfo(message) {\n      this.showToast(message, \"info\");\n    }\n\n    // Public method to refresh the component\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      if (this.selectedProperty) {\n        this.loadFinancialReport();\n      }\n    }\n  }]);\n}(); // Make component globally accessible\nwindow.FinancialReportsComponent = FinancialReportsComponent;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/components/financial-reports.js?\n}");

/***/ }),

/***/ "./src/js/components/investor-management.js":
/*!**************************************************!*\
  !*** ./src/js/components/investor-management.js ***!
  \**************************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Investor Management Component\n * Handles comprehensive investor management with properties and percentages\n */\nvar InvestorManagementComponent = /*#__PURE__*/function () {\n  function InvestorManagementComponent() {\n    _classCallCheck(this, InvestorManagementComponent);\n    this.investors = [];\n    this.properties = [];\n    this.isModalOpen = false;\n    this.editingInvestorId = null;\n    this.init();\n  }\n  return _createClass(InvestorManagementComponent, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n      // Check if required DOM elements exist before proceeding\n      var requiredElements = ['investorsList', 'addInvestorBtn', 'investorCount'];\n      var missingElements = requiredElements.filter(function (id) {\n        return !document.getElementById(id);\n      });\n      if (missingElements.length > 0) {\n        console.warn('InvestorManagementComponent: Required DOM elements missing:', missingElements);\n        // Try again after a short delay\n        setTimeout(function () {\n          return _this.init();\n        }, 200);\n        return;\n      }\n      this.bindEvents();\n      this.loadData();\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this2 = this;\n      // Add investor button\n      var addInvestorBtn = document.getElementById(\"addInvestorBtn\");\n      if (addInvestorBtn) {\n        addInvestorBtn.addEventListener(\"click\", function () {\n          _this2.showInvestorModal();\n        });\n      }\n    }\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return Promise.all([this.loadInvestors(), this.loadProperties()]);\n            case 1:\n              _context.n = 3;\n              break;\n            case 2:\n              _context.p = 2;\n              _t = _context.v;\n              console.error(\"Error loading data:\", _t);\n            case 3:\n              _context.p = 3;\n              // Always render investors, even if API calls failed\n              this.renderInvestors();\n              return _context.f(3);\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, this, [[0, 2, 3, 4]]);\n      }));\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n      return loadData;\n    }()\n  }, {\n    key: \"loadInvestors\",\n    value: function () {\n      var _loadInvestors = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var response, result, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.p = _context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.INVESTORS);\n            case 1:\n              response = _context2.v;\n              _context2.n = 2;\n              return response.json();\n            case 2:\n              result = _context2.v;\n              if (result.success) {\n                this.investors = result.data || [];\n                this.updateInvestorCount();\n              } else {\n                this.investors = [];\n                this.showError(result.message || \"Failed to load investors\");\n              }\n              _context2.n = 4;\n              break;\n            case 3:\n              _context2.p = 3;\n              _t2 = _context2.v;\n              console.error(\"Error loading investors:\", _t2);\n              this.investors = [];\n              this.showError(\"Failed to load investors\");\n            case 4:\n              return _context2.a(2);\n          }\n        }, _callee2, this, [[0, 3]]);\n      }));\n      function loadInvestors() {\n        return _loadInvestors.apply(this, arguments);\n      }\n      return loadInvestors;\n    }()\n  }, {\n    key: \"loadProperties\",\n    value: function () {\n      var _loadProperties = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var response, result, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.p = _context3.n) {\n            case 0:\n              _context3.p = 0;\n              console.log(\"Loading properties from:\", API_CONFIG.BASE_URL + API_CONFIG.ENDPOINTS.PROPERTIES);\n              _context3.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.PROPERTIES);\n            case 1:\n              response = _context3.v;\n              if (response.ok) {\n                _context3.n = 2;\n                break;\n              }\n              console.warn(\"Properties API returned \".concat(response.status, \": \").concat(response.statusText));\n              if (response.status === 401 || response.status === 403) {\n                console.warn(\"Authentication required for properties API\");\n              }\n              this.properties = [];\n              return _context3.a(2);\n            case 2:\n              _context3.n = 3;\n              return response.json();\n            case 3:\n              result = _context3.v;\n              console.log(\"Properties API response:\", result);\n              if (result.success && Array.isArray(result.properties)) {\n                this.properties = result.properties;\n                console.log(\"Loaded \".concat(this.properties.length, \" properties:\"), this.properties);\n              } else {\n                console.warn(\"Properties API response format issue:\", result);\n                this.properties = [];\n              }\n              _context3.n = 5;\n              break;\n            case 4:\n              _context3.p = 4;\n              _t3 = _context3.v;\n              console.error(\"Error loading properties:\", _t3);\n              this.properties = [];\n            case 5:\n              return _context3.a(2);\n          }\n        }, _callee3, this, [[0, 4]]);\n      }));\n      function loadProperties() {\n        return _loadProperties.apply(this, arguments);\n      }\n      return loadProperties;\n    }()\n  }, {\n    key: \"updateInvestorCount\",\n    value: function updateInvestorCount() {\n      var countElement = document.getElementById(\"investorCount\");\n      if (countElement) {\n        countElement.textContent = this.investors.length;\n      }\n    }\n  }, {\n    key: \"renderInvestors\",\n    value: function renderInvestors() {\n      var investorsList = document.getElementById(\"investorsList\");\n      if (!investorsList) {\n        console.warn(\"investorsList element not found\");\n        return;\n      }\n      if (this.investors.length === 0) {\n        investorsList.innerHTML = \"\\n        <div class=\\\"text-center py-5\\\">\\n          <i class=\\\"bi bi-person-badge fs-1 text-muted\\\"></i>\\n          <p class=\\\"mt-3 text-muted\\\">No investors found</p>\\n          <button class=\\\"btn btn-primary\\\" onclick=\\\"window.investorManager.showInvestorModal()\\\">\\n            <i class=\\\"bi bi-plus-circle me-1\\\"></i>Add First Investor\\n          </button>\\n        </div>\\n      \";\n        return;\n      }\n      var html = '<div class=\"row\">';\n      this.investors.forEach(function (investor) {\n        var totalProperties = investor.properties ? investor.properties.length : 0;\n        var totalPercentage = investor.properties ? investor.properties.reduce(function (sum, prop) {\n          return sum + prop.percentage;\n        }, 0) : 0;\n        html += \"\\n        <div class=\\\"col-md-6 col-lg-4 mb-4\\\">\\n          <div class=\\\"card investor-card h-100\\\">\\n            <div class=\\\"card-header d-flex justify-content-between align-items-center\\\">\\n              <div>\\n                <h6 class=\\\"mb-0\\\">\".concat(escapeHtml(investor.name), \"</h6>\\n                <small class=\\\"text-muted\\\">ID: \").concat(investor.investorId, \"</small>\\n              </div>\\n              <div class=\\\"dropdown\\\">\\n                <button class=\\\"btn btn-sm btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" data-bs-toggle=\\\"dropdown\\\">\\n                  <i class=\\\"bi bi-three-dots\\\"></i>\\n                </button>\\n                <ul class=\\\"dropdown-menu\\\">\\n                  <li><a class=\\\"dropdown-item\\\" href=\\\"#\\\" onclick=\\\"window.investorManager.editInvestor('\").concat(investor.investorId, \"')\\\">\\n                    <i class=\\\"bi bi-pencil me-2\\\"></i>Edit\\n                  </a></li>\\n                  <li><a class=\\\"dropdown-item text-danger\\\" href=\\\"#\\\" onclick=\\\"window.investorManager.deleteInvestor('\").concat(investor.investorId, \"')\\\">\\n                    <i class=\\\"bi bi-trash me-2\\\"></i>Delete\\n                  </a></li>\\n                </ul>\\n              </div>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n              \").concat(investor.username ? \"<p class=\\\"mb-2\\\"><strong>Username:</strong> \".concat(escapeHtml(investor.username), \"</p>\") : '', \"\\n              \").concat(investor.email ? \"<p class=\\\"mb-2\\\"><strong>Email:</strong> \".concat(escapeHtml(investor.email), \"</p>\") : '', \"\\n              \").concat(investor.phone ? \"<p class=\\\"mb-2\\\"><strong>Phone:</strong> \".concat(escapeHtml(investor.phone), \"</p>\") : '', \"\\n              \\n              <hr>\\n              <div class=\\\"d-flex justify-content-between align-items-center mb-2\\\">\\n                <span><strong>Properties:</strong></span>\\n                <span class=\\\"badge bg-primary\\\">\").concat(totalProperties, \"</span>\\n              </div>\\n              \\n              \").concat(totalProperties > 0 ? \"\\n                <div class=\\\"properties-list\\\">\\n                  \".concat(investor.properties.map(function (property) {\n          return \"\\n                    <div class=\\\"d-flex justify-content-between align-items-center mb-1\\\">\\n                      <span class=\\\"property-badge badge bg-light text-dark\\\">\".concat(property.propertyId, \"</span>\\n                      <span class=\\\"percentage-display\\\">\").concat(property.percentage, \"%</span>\\n                    </div>\\n                  \");\n        }).join(''), \"\\n                </div>\\n                <div class=\\\"mt-2 pt-2 border-top\\\">\\n                  <small class=\\\"text-muted\\\">Total Investment: <strong class=\\\"percentage-display\\\">\").concat(totalPercentage, \"%</strong></small>\\n                </div>\\n              \") : \"\\n                <div class=\\\"text-center text-muted\\\">\\n                  <small>No property investments</small>\\n                </div>\\n              \", \"\\n            </div>\\n            <div class=\\\"card-footer bg-transparent\\\">\\n              <div class=\\\"btn-group w-100\\\" role=\\\"group\\\">\\n                <button class=\\\"btn btn-sm btn-outline-primary\\\" onclick=\\\"window.investorManager.addPropertyToInvestor('\").concat(investor.investorId, \"')\\\">\\n                  <i class=\\\"bi bi-plus me-1\\\"></i>Add Property\\n                </button>\\n                <button class=\\\"btn btn-sm btn-outline-info\\\" onclick=\\\"window.investorManager.viewInvestorDetails('\").concat(investor.investorId, \"')\\\">\\n                  <i class=\\\"bi bi-eye me-1\\\"></i>Details\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      \");\n      });\n      html += '</div>';\n      investorsList.innerHTML = html;\n    }\n  }, {\n    key: \"showInvestorModal\",\n    value: function showInvestorModal() {\n      var _this3 = this;\n      var investorId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      if (this.isModalOpen) return;\n      this.isModalOpen = true;\n      this.editingInvestorId = investorId;\n      var isEdit = !!investorId;\n      var title = isEdit ? \"Edit Investor\" : \"Add Investor\";\n      var modalHtml = \"\\n      <div class=\\\"modal fade\\\" id=\\\"investorModal\\\" tabindex=\\\"-1\\\">\\n        <div class=\\\"modal-dialog modal-lg\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\">\\n                <i class=\\\"bi bi-person-\".concat(isEdit ? 'gear' : 'plus', \" me-2\\\"></i>\").concat(title, \"\\n              </h5>\\n              <button type=\\\"button\\\" class=\\\"btn-close\\\" data-bs-dismiss=\\\"modal\\\"></button>\\n            </div>\\n            <form id=\\\"investorForm\\\">\\n              <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"mb-3\\\">\\n                      <label class=\\\"form-label\\\">Username <span class=\\\"text-danger\\\">*</span></label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" required>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"mb-3\\\">\\n                      <label class=\\\"form-label\\\">Full Name <span class=\\\"text-danger\\\">*</span></label>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" required>\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"mb-3\\\">\\n                      <label class=\\\"form-label\\\">Email</label>\\n                      <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\">\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"mb-3\\\">\\n                      <label class=\\\"form-label\\\">Phone</label>\\n                      <input type=\\\"tel\\\" class=\\\"form-control\\\" name=\\\"phone\\\">\\n                    </div>\\n                  </div>\\n                </div>\\n                \\n                <hr>\\n                <h6><i class=\\\"bi bi-building me-2\\\"></i>Property Investments</h6>\\n                <div id=\\\"propertiesList\\\">\\n                  <div class=\\\"text-muted\\\">Loading properties...</div>\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-primary mt-2\\\" id=\\\"addPropertyBtn\\\">\\n                  <i class=\\\"bi bi-plus me-1\\\"></i>Add Property\\n                </button>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-bs-dismiss=\\\"modal\\\">Cancel</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">\\n                  <i class=\\\"bi bi-check-circle me-1\\\"></i>\").concat(isEdit ? 'Update' : 'Create', \" Investor\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n      document.body.insertAdjacentHTML('beforeend', modalHtml);\n      var modal = new bootstrap.Modal(document.getElementById('investorModal'));\n\n      // Populate form if editing\n      if (isEdit) {\n        this.populateInvestorForm(investorId);\n      } else {\n        this.renderPropertiesInModal([]);\n      }\n\n      // Bind form events\n      this.bindModalEvents();\n\n      // Clean up on close\n      document.getElementById('investorModal').addEventListener('hidden.bs.modal', function () {\n        _this3.isModalOpen = false;\n        _this3.editingInvestorId = null;\n        document.getElementById('investorModal').remove();\n      });\n      modal.show();\n    }\n  }, {\n    key: \"populateInvestorForm\",\n    value: function populateInvestorForm(investorId) {\n      var investor = this.investors.find(function (inv) {\n        return inv.investorId === investorId;\n      });\n      if (!investor) return;\n      var form = document.getElementById('investorForm');\n      form.querySelector('[name=\"username\"]').value = investor.username || '';\n      form.querySelector('[name=\"name\"]').value = investor.name || '';\n      form.querySelector('[name=\"email\"]').value = investor.email || '';\n      form.querySelector('[name=\"phone\"]').value = investor.phone || '';\n      this.renderPropertiesInModal(investor.properties || []);\n    }\n  }, {\n    key: \"renderPropertiesInModal\",\n    value: function renderPropertiesInModal() {\n      var _this4 = this;\n      var investorProperties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var propertiesList = document.getElementById('propertiesList');\n      if (!propertiesList) return;\n      console.log(\"Rendering properties modal with:\", {\n        investorProperties: investorProperties,\n        systemProperties: this.properties\n      });\n      var html = '<div class=\"property-investments\">';\n\n      // Show existing investments\n      investorProperties.forEach(function (investment, index) {\n        var property = _this4.properties.find(function (p) {\n          return p.propertyId === investment.propertyId || p.propertyId === String(investment.propertyId) || String(p.propertyId) === String(investment.propertyId);\n        });\n        console.log(\"Investment \".concat(index, \":\"), {\n          investment: investment,\n          foundProperty: property\n        });\n        html += \"\\n        <div class=\\\"property-row mb-3 p-3 border rounded\\\" data-index=\\\"\".concat(index, \"\\\">\\n          <div class=\\\"row align-items-start\\\">\\n            <div class=\\\"col-md-8\\\">\\n              <div class=\\\"mb-2\\\">\\n                <strong class=\\\"text-primary\\\">Property ID: \").concat(investment.propertyId, \"</strong>\\n                \").concat(property ? \"\\n                  <div class=\\\"p-2 bg-light rounded\\\">\\n                    <div><strong>Property ID:</strong> \".concat(escapeHtml(property.propertyId), \"</div>\\n                    <div><strong>Address:</strong> <i class=\\\"bi bi-geo-alt me-1\\\"></i>\").concat(escapeHtml(property.address || 'Address not available'), \"</div>\\n                    <div><strong>Unit:</strong> \").concat(escapeHtml(property.unit || 'No unit specified'), \"</div>\\n                    <div><strong>Rent:</strong> $\").concat(property.rent || 'N/A', \"</div>\\n                    <div><strong>Max Pax:</strong> \").concat(property.maxPax || 'N/A', \"</div>\\n                    \").concat(property.agentName ? \"<div><strong>Agent:</strong> \".concat(escapeHtml(property.agentName), \"</div>\") : '', \"\\n                  </div>\\n                \") : \"\\n                  <div class=\\\"p-2 bg-warning bg-opacity-10 rounded\\\">\\n                    <div><i class=\\\"bi bi-exclamation-triangle me-2 text-warning\\\"></i><strong>Property Details Unavailable</strong></div>\\n                    <small class=\\\"text-muted\\\">Property data could not be loaded from the system. The investment record shows Property ID: \".concat(investment.propertyId, \"</small>\\n                  </div>\\n                \"), \"\\n              </div>\\n              <input type=\\\"hidden\\\" name=\\\"properties[\").concat(index, \"][propertyId]\\\" value=\\\"\").concat(investment.propertyId, \"\\\">\\n            </div>\\n            <div class=\\\"col-md-3\\\">\\n              <div class=\\\"mb-2\\\">\\n                <label class=\\\"form-label fw-bold text-success\\\">Investment %</label>\\n                <div class=\\\"input-group\\\">\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"properties[\").concat(index, \"][percentage]\\\" \\n                         placeholder=\\\"Percentage\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.1\\\" \\n                         value=\\\"\").concat(investment.percentage, \"\\\" required>\\n                  <span class=\\\"input-group-text\\\">%</span>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-1\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"this.closest('.property-row').remove()\\\" title=\\\"Remove Property\\\">\\n                <i class=\\\"bi bi-trash\\\"></i>\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      \");\n      });\n      html += '</div>';\n\n      // Add informational message based on properties loading status\n      if (this.properties.length === 0 && investorProperties.length === 0) {\n        html += '<div class=\"alert alert-info mt-2\"><small><i class=\"bi bi-info-circle me-1\"></i>No properties or investments to display. Add properties to the system first, then assign them to investors.</small></div>';\n      } else if (this.properties.length === 0 && investorProperties.length > 0) {\n        html += '<div class=\"alert alert-warning mt-2\"><small><i class=\"bi bi-exclamation-triangle me-1\"></i>Unable to load property details from the system (check authentication or API connection). Investment records are preserved and shown above.</small></div>';\n      }\n      propertiesList.innerHTML = html;\n    }\n  }, {\n    key: \"bindModalEvents\",\n    value: function bindModalEvents() {\n      var _this5 = this;\n      // Add property button\n      var addPropertyBtn = document.getElementById('addPropertyBtn');\n      if (addPropertyBtn) {\n        addPropertyBtn.addEventListener('click', function () {\n          _this5.addPropertyRowToModal();\n        });\n      }\n\n      // Form submission\n      var form = document.getElementById('investorForm');\n      if (form) {\n        form.addEventListener('submit', function (e) {\n          e.preventDefault();\n          _this5.saveInvestor();\n        });\n      }\n    }\n  }, {\n    key: \"addPropertyRowToModal\",\n    value: function addPropertyRowToModal() {\n      var propertiesList = document.getElementById('propertiesList');\n      if (!propertiesList) return;\n\n      // Check if there are any properties available to add\n      if (this.properties.length === 0) {\n        this.showError('No properties available to add. Please add properties to the system first.');\n        return;\n      }\n      var propertyInvestments = propertiesList.querySelector('.property-investments');\n      if (!propertyInvestments) {\n        this.renderPropertiesInModal([]);\n        return;\n      }\n      var currentRows = propertyInvestments.querySelectorAll('.property-row');\n      var nextIndex = currentRows.length;\n      var newRowHtml = \"\\n      <div class=\\\"property-row mb-3 p-3 border rounded bg-light\\\" data-index=\\\"\".concat(nextIndex, \"\\\">\\n        <div class=\\\"row align-items-start\\\">\\n          <div class=\\\"col-md-8\\\">\\n            <div class=\\\"mb-2\\\">\\n              <label class=\\\"form-label fw-bold text-primary\\\">Select Property</label>\\n              <select class=\\\"form-select\\\" name=\\\"properties[\").concat(nextIndex, \"][propertyId]\\\" required onchange=\\\"this.closest('.property-row').querySelector('.property-preview').style.display = this.value ? 'block' : 'none'\\\">\\n                <option value=\\\"\\\">Choose a property...</option>\\n                \").concat(this.properties.map(function (prop) {\n        return \"\\n                  <option value=\\\"\".concat(prop.propertyId, \"\\\" \\n                          data-address=\\\"\").concat(prop.address || '', \"\\\" \\n                          data-unit=\\\"\").concat(prop.unit || '', \"\\\" \\n                          data-rent=\\\"\").concat(prop.rent || '', \"\\\">\\n                    ID: \").concat(prop.propertyId, \" - \").concat(prop.address || 'No address').concat(prop.unit ? ', ' + prop.unit : '', \" ($\").concat(prop.rent || 'N/A', \")\\n                  </option>\\n                \");\n      }).join(''), \"\\n              </select>\\n            </div>\\n            <div class=\\\"property-preview mt-2\\\" style=\\\"display: none;\\\">\\n              <div class=\\\"text-muted small\\\">\\n                <div><strong>Address:</strong> <span class=\\\"preview-address\\\">-</span></div>\\n                <div><strong>Unit:</strong> <span class=\\\"preview-unit\\\">-</span></div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"mb-2\\\">\\n              <label class=\\\"form-label fw-bold text-success\\\">Investment %</label>\\n              <div class=\\\"input-group\\\">\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"properties[\").concat(nextIndex, \"][percentage]\\\" \\n                       placeholder=\\\"0.0\\\" min=\\\"0\\\" max=\\\"100\\\" step=\\\"0.1\\\" required>\\n                <span class=\\\"input-group-text\\\">%</span>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-1\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"this.closest('.property-row').remove()\\\" title=\\\"Remove Property\\\">\\n              <i class=\\\"bi bi-trash\\\"></i>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    \");\n      propertyInvestments.insertAdjacentHTML('beforeend', newRowHtml);\n    }\n  }, {\n    key: \"saveInvestor\",\n    value: function () {\n      var _saveInvestor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n        var form, formData, investorData, propertyRows, response, result, investorId, newInvestor, _response, _result, _t4;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.p = _context4.n) {\n            case 0:\n              form = document.getElementById('investorForm');\n              formData = new FormData(form);\n              _context4.p = 1;\n              investorData = {\n                username: formData.get('username'),\n                name: formData.get('name'),\n                email: formData.get('email'),\n                phone: formData.get('phone'),\n                properties: []\n              };\n              console.log(\"Saving investor data:\", investorData);\n\n              // Collect property investments\n              propertyRows = form.querySelectorAll('.property-row');\n              console.log(\"Found property rows:\", propertyRows.length);\n              propertyRows.forEach(function (row, index) {\n                var selectElement = row.querySelector('select[name*=\"propertyId\"]');\n                var hiddenElement = row.querySelector('input[name*=\"propertyId\"][type=\"hidden\"]');\n                var propertyId = selectElement ? selectElement.value : hiddenElement ? hiddenElement.value : null;\n                var percentage = parseFloat(row.querySelector('input[type=\"number\"]').value);\n                console.log(\"Row \".concat(index, \":\"), {\n                  propertyId: propertyId,\n                  percentage: percentage,\n                  hasSelect: !!selectElement,\n                  hasHidden: !!hiddenElement\n                });\n                if (propertyId && !isNaN(percentage)) {\n                  investorData.properties.push({\n                    propertyId: propertyId,\n                    percentage: percentage\n                  });\n                }\n              });\n              console.log(\"Final investor data to save:\", investorData);\n              if (!this.editingInvestorId) {\n                _context4.n = 5;\n                break;\n              }\n              // Update existing investor\n              console.log(\"Updating investor with ID:\", this.editingInvestorId);\n              _context4.n = 2;\n              return API.put(API_CONFIG.ENDPOINTS.INVESTOR_BY_ID(this.editingInvestorId), investorData);\n            case 2:\n              response = _context4.v;\n              console.log(\"Update response status:\", response.status);\n              _context4.n = 3;\n              return response.json();\n            case 3:\n              result = _context4.v;\n              console.log(\"Update result:\", result);\n              if (!(!response.ok || !result.success)) {\n                _context4.n = 4;\n                break;\n              }\n              throw new Error(result.message || \"API returned \".concat(response.status, \": \").concat(response.statusText));\n            case 4:\n              this.showSuccess('Investor updated successfully');\n              _context4.n = 10;\n              break;\n            case 5:\n              _context4.n = 6;\n              return this.generateInvestorId();\n            case 6:\n              investorId = _context4.v;\n              newInvestor = _objectSpread({\n                investorId: investorId\n              }, investorData);\n              console.log(\"Creating new investor:\", newInvestor);\n              _context4.n = 7;\n              return API.post(API_CONFIG.ENDPOINTS.INVESTORS, newInvestor);\n            case 7:\n              _response = _context4.v;\n              console.log(\"Create response status:\", _response.status);\n              _context4.n = 8;\n              return _response.json();\n            case 8:\n              _result = _context4.v;\n              console.log(\"Create result:\", _result);\n              if (!(!_response.ok || !_result.success)) {\n                _context4.n = 9;\n                break;\n              }\n              throw new Error(_result.message || \"API returned \".concat(_response.status, \": \").concat(_response.statusText));\n            case 9:\n              this.showSuccess('Investor created successfully');\n            case 10:\n              // Close modal and refresh\n              bootstrap.Modal.getInstance(document.getElementById('investorModal')).hide();\n              _context4.n = 11;\n              return this.loadData();\n            case 11:\n              _context4.n = 13;\n              break;\n            case 12:\n              _context4.p = 12;\n              _t4 = _context4.v;\n              console.error('Error saving investor:', _t4);\n              this.showError(_t4.message || 'Failed to save investor');\n            case 13:\n              return _context4.a(2);\n          }\n        }, _callee4, this, [[1, 12]]);\n      }));\n      function saveInvestor() {\n        return _saveInvestor.apply(this, arguments);\n      }\n      return saveInvestor;\n    }()\n  }, {\n    key: \"generateInvestorId\",\n    value: function () {\n      var _generateInvestorId = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5() {\n        var response, result, maxId, _t5;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.p = _context5.n) {\n            case 0:\n              _context5.p = 0;\n              _context5.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.INVESTORS);\n            case 1:\n              response = _context5.v;\n              _context5.n = 2;\n              return response.json();\n            case 2:\n              result = _context5.v;\n              if (!(result.success && result.data)) {\n                _context5.n = 3;\n                break;\n              }\n              maxId = 0;\n              result.data.forEach(function (investor) {\n                var numericId = parseInt(investor.investorId);\n                if (!isNaN(numericId) && numericId > maxId) {\n                  maxId = numericId;\n                }\n              });\n              return _context5.a(2, (maxId + 1).toString());\n            case 3:\n              return _context5.a(2, \"1\");\n            case 4:\n              _context5.n = 6;\n              break;\n            case 5:\n              _context5.p = 5;\n              _t5 = _context5.v;\n              console.error(\"Error generating investor ID:\", _t5);\n              return _context5.a(2, Date.now().toString());\n            case 6:\n              return _context5.a(2);\n          }\n        }, _callee5, null, [[0, 5]]);\n      }));\n      function generateInvestorId() {\n        return _generateInvestorId.apply(this, arguments);\n      }\n      return generateInvestorId;\n    }()\n  }, {\n    key: \"editInvestor\",\n    value: function editInvestor(investorId) {\n      this.showInvestorModal(investorId);\n    }\n  }, {\n    key: \"deleteInvestor\",\n    value: function () {\n      var _deleteInvestor = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(investorId) {\n        var investor, confirmMessage, response, result, _t6;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.p = _context6.n) {\n            case 0:\n              investor = this.investors.find(function (inv) {\n                return inv.investorId === investorId;\n              });\n              if (investor) {\n                _context6.n = 1;\n                break;\n              }\n              return _context6.a(2);\n            case 1:\n              confirmMessage = \"Are you sure you want to delete investor \\\"\".concat(investor.name, \"\\\"?\\n\\nThis will remove them from all properties and cannot be undone.\");\n              if (confirm(confirmMessage)) {\n                _context6.n = 2;\n                break;\n              }\n              return _context6.a(2);\n            case 2:\n              _context6.p = 2;\n              _context6.n = 3;\n              return API[\"delete\"](API_CONFIG.ENDPOINTS.INVESTOR_BY_ID(investorId));\n            case 3:\n              response = _context6.v;\n              _context6.n = 4;\n              return response.json();\n            case 4:\n              result = _context6.v;\n              if (!result.success) {\n                _context6.n = 6;\n                break;\n              }\n              this.showSuccess('Investor deleted successfully');\n              _context6.n = 5;\n              return this.loadData();\n            case 5:\n              _context6.n = 7;\n              break;\n            case 6:\n              throw new Error(result.message || 'Failed to delete investor');\n            case 7:\n              _context6.n = 9;\n              break;\n            case 8:\n              _context6.p = 8;\n              _t6 = _context6.v;\n              console.error('Error deleting investor:', _t6);\n              this.showError(_t6.message || 'Failed to delete investor');\n            case 9:\n              return _context6.a(2);\n          }\n        }, _callee6, this, [[2, 8]]);\n      }));\n      function deleteInvestor(_x2) {\n        return _deleteInvestor.apply(this, arguments);\n      }\n      return deleteInvestor;\n    }()\n  }, {\n    key: \"addPropertyToInvestor\",\n    value: function addPropertyToInvestor(investorId) {\n      this.showInvestorModal(investorId);\n    }\n  }, {\n    key: \"viewInvestorDetails\",\n    value: function viewInvestorDetails(investorId) {\n      var investor = this.investors.find(function (inv) {\n        return inv.investorId === investorId;\n      });\n      if (!investor) return;\n\n      // For now, just edit the investor - could be expanded to a detailed view\n      this.editInvestor(investorId);\n    }\n  }, {\n    key: \"showToast\",\n    value: function (_showToast) {\n      function showToast(_x) {\n        return _showToast.apply(this, arguments);\n      }\n      showToast.toString = function () {\n        return _showToast.toString();\n      };\n      return showToast;\n    }(function (message) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"info\";\n      if (typeof showToast === 'function') {\n        showToast(message, type);\n      } else {\n        alert(message);\n      }\n    })\n  }, {\n    key: \"showSuccess\",\n    value: function showSuccess(message) {\n      this.showToast(message, \"success\");\n    }\n  }, {\n    key: \"showError\",\n    value: function showError(message) {\n      this.showToast(message, \"error\");\n    }\n  }, {\n    key: \"showInfo\",\n    value: function showInfo(message) {\n      this.showToast(message, \"info\");\n    }\n  }]);\n}(); // Make component globally accessible\nwindow.InvestorManagementComponent = InvestorManagementComponent;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/components/investor-management.js?\n}");

/***/ }),

/***/ "./src/js/components/property-management.js":
/*!**************************************************!*\
  !*** ./src/js/components/property-management.js ***!
  \**************************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Property Management Component\n * Handles property CRUD operations\n */\nvar PropertyManagementComponent = /*#__PURE__*/function () {\n  function PropertyManagementComponent() {\n    _classCallCheck(this, PropertyManagementComponent);\n    this.properties = [];\n    this.init();\n  }\n  return _createClass(PropertyManagementComponent, [{\n    key: \"init\",\n    value: function init() {\n      this.setupEventListeners();\n      this.loadProperties();\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      // Add property button\n      var addPropertyBtn = document.getElementById(\"addPropertyBtn\");\n      if (addPropertyBtn) {\n        addPropertyBtn.addEventListener(\"click\", function () {\n          _this.showAddPropertyModal();\n        });\n      }\n\n      // Property form submission (add/edit)\n      var propertyForm = document.getElementById(\"propertyForm\");\n      if (propertyForm) {\n        propertyForm.addEventListener(\"submit\", function (e) {\n          e.preventDefault();\n          _this.handlePropertySubmit(e);\n        });\n      }\n\n      // Set default move-in date to today\n      var moveInDateInput = document.getElementById(\"moveInDate\");\n      if (moveInDateInput && !moveInDateInput.value) {\n        moveInDateInput.value = new Date().toISOString().split(\"T\")[0];\n      }\n\n      // Search functionality\n      var searchInput = document.getElementById(\"propertySearchInput\");\n      if (searchInput) {\n        searchInput.addEventListener(\"input\", function (e) {\n          _this.filterProperties(e.target.value);\n        });\n      }\n    }\n  }, {\n    key: \"loadProperties\",\n    value: function () {\n      var _loadProperties = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var response, result, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.PROPERTIES);\n            case 1:\n              response = _context.v;\n              _context.n = 2;\n              return response.json();\n            case 2:\n              result = _context.v;\n              if (result.success) {\n                this.properties = result.properties;\n                this.renderPropertiesTable();\n\n                // Update sidebar badges\n                if (window.updateSidebarBadges) {\n                  window.updateSidebarBadges();\n                }\n              } else {\n                console.error(\"Failed to load properties:\", result.error);\n                this.showEmptyState();\n              }\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error(\"Error loading properties:\", _t);\n              this.showEmptyState(\"Error loading properties. Please try again.\");\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, this, [[0, 3]]);\n      }));\n      function loadProperties() {\n        return _loadProperties.apply(this, arguments);\n      }\n      return loadProperties;\n    }()\n  }, {\n    key: \"renderPropertiesTable\",\n    value: function renderPropertiesTable() {\n      var _this2 = this;\n      var tbody = document.getElementById(\"propertiesTableBody\");\n      var mobileList = document.getElementById(\"mobilePropertyList\");\n      if (!tbody) return;\n      if (this.properties.length === 0) {\n        this.showEmptyState();\n        this.showMobileEmptyState();\n        return;\n      }\n\n      // Render desktop table\n      var tableHtml = \"\";\n      this.properties.forEach(function (property) {\n        tableHtml += \"\\n                <tr>\\n                    <td>\".concat(_this2.escapeHtml(property.propertyId), \"</td>\\n                    <td>\").concat(_this2.escapeHtml(property.address), \"</td>\\n                    <td>\").concat(_this2.escapeHtml(property.unit), \"</td>\\n                    <td>\").concat(property.maxPax, \"</td>\\n                    <td>$\").concat((property.rent || 0).toLocaleString(), \"</td>\\n                    <td>\\n                        <button class=\\\"btn btn-sm btn-outline-primary me-1\\\" onclick=\\\"propertyManager.editProperty('\").concat(property.propertyId, \"')\\\">\\n                            <i class=\\\"bi bi-pencil\\\"></i> Edit\\n                        </button>\\n                        <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"propertyManager.deleteProperty('\").concat(property.propertyId, \"')\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i> Delete\\n                        </button>\\n                    </td>\\n                </tr>\\n            \");\n      });\n      tbody.innerHTML = tableHtml;\n\n      // Render mobile cards\n      if (mobileList) {\n        var mobileHtml = \"\";\n        this.properties.forEach(function (property) {\n          mobileHtml += \"\\n                  <div class=\\\"mobile-property-card\\\">\\n                      <div class=\\\"mobile-property-header\\\">\\n                          <div class=\\\"mobile-property-info\\\">\\n                              <div class=\\\"mobile-property-id\\\">\".concat(_this2.escapeHtml(property.propertyId), \"</div>\\n                              <div class=\\\"mobile-property-address\\\">\").concat(_this2.escapeHtml(property.address), \"</div>\\n                          </div>\\n                      </div>\\n                      <div class=\\\"mobile-property-details\\\">\\n                          <div><strong>Unit:</strong> \").concat(_this2.escapeHtml(property.unit), \"</div>\\n                          <div><strong>Rent:</strong> $\").concat((property.rent || 0).toLocaleString(), \"</div>\\n                      </div>\\n                      <div class=\\\"mobile-property-actions\\\">\\n                          <button class=\\\"btn btn-outline-primary btn-sm\\\" onclick=\\\"propertyManager.editProperty('\").concat(property.propertyId, \"')\\\">\\n                              <i class=\\\"bi bi-pencil\\\"></i> Edit\\n                          </button>\\n                          <button class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"propertyManager.deleteProperty('\").concat(property.propertyId, \"')\\\">\\n                              <i class=\\\"bi bi-trash\\\"></i> Delete\\n                          </button>\\n                      </div>\\n                  </div>\\n              \");\n        });\n        mobileList.innerHTML = mobileHtml;\n      }\n    }\n  }, {\n    key: \"showEmptyState\",\n    value: function showEmptyState() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"No properties found\";\n      var tbody = document.getElementById(\"propertiesTableBody\");\n      if (!tbody) return;\n      tbody.innerHTML = \"\\n            <tr>\\n                <td colspan=\\\"6\\\" class=\\\"text-center text-muted py-4\\\">\\n                    <i class=\\\"bi bi-building fs-1\\\"></i>\\n                    <p class=\\\"mt-2\\\">\".concat(message, \"</p>\\n                </td>\\n            </tr>\\n        \");\n    }\n  }, {\n    key: \"showMobileEmptyState\",\n    value: function showMobileEmptyState() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"No properties found\";\n      var mobileList = document.getElementById(\"mobilePropertyList\");\n      if (!mobileList) return;\n      mobileList.innerHTML = \"\\n            <div class=\\\"text-center text-muted py-4\\\">\\n                <i class=\\\"bi bi-building fs-1\\\"></i>\\n                <p class=\\\"mt-2\\\">\".concat(message, \"</p>\\n            </div>\\n        \");\n    }\n  }, {\n    key: \"filterProperties\",\n    value: function filterProperties(searchTerm) {\n      var _this3 = this;\n      if (!searchTerm.trim()) {\n        this.renderPropertiesTable();\n        return;\n      }\n      var filteredProperties = this.properties.filter(function (property) {\n        return property.propertyId.toLowerCase().includes(searchTerm.toLowerCase()) || property.address.toLowerCase().includes(searchTerm.toLowerCase()) || property.unit.toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      var tbody = document.getElementById(\"propertiesTableBody\");\n      var mobileList = document.getElementById(\"mobilePropertyList\");\n      if (!tbody) return;\n      if (filteredProperties.length === 0) {\n        this.showEmptyState(\"No properties match \\\"\".concat(searchTerm, \"\\\"\"));\n        this.showMobileEmptyState(\"No properties match \\\"\".concat(searchTerm, \"\\\"\"));\n        return;\n      }\n\n      // Render filtered desktop table\n      var tableHtml = \"\";\n      filteredProperties.forEach(function (property) {\n        tableHtml += \"\\n                <tr>\\n                    <td>\".concat(_this3.escapeHtml(property.propertyId), \"</td>\\n                    <td>\").concat(_this3.escapeHtml(property.address), \"</td>\\n                    <td>\").concat(_this3.escapeHtml(property.unit), \"</td>\\n                    <td>\").concat(property.maxPax, \"</td>\\n                    <td>$\").concat((property.rent || 0).toLocaleString(), \"</td>\\n                    <td>\\n                        <button class=\\\"btn btn-sm btn-outline-primary me-1\\\" onclick=\\\"propertyManager.editProperty('\").concat(property.propertyId, \"')\\\">\\n                            <i class=\\\"bi bi-pencil\\\"></i> Edit\\n                        </button>\\n                        <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"propertyManager.deleteProperty('\").concat(property.propertyId, \"')\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i> Delete\\n                        </button>\\n                    </td>\\n                </tr>\\n            \");\n      });\n      tbody.innerHTML = tableHtml;\n\n      // Render filtered mobile cards\n      if (mobileList) {\n        var mobileHtml = \"\";\n        filteredProperties.forEach(function (property) {\n          mobileHtml += \"\\n                  <div class=\\\"mobile-property-card\\\">\\n                      <div class=\\\"mobile-property-header\\\">\\n                          <div class=\\\"mobile-property-info\\\">\\n                              <div class=\\\"mobile-property-id\\\">\".concat(_this3.escapeHtml(property.propertyId), \"</div>\\n                              <div class=\\\"mobile-property-address\\\">\").concat(_this3.escapeHtml(property.address), \"</div>\\n                          </div>\\n                      </div>\\n                      <div class=\\\"mobile-property-details\\\">\\n                          <div><strong>Unit:</strong> \").concat(_this3.escapeHtml(property.unit), \"</div>\\n                          <div><strong>Rent:</strong> $\").concat((property.rent || 0).toLocaleString(), \"</div>\\n                      </div>\\n                      <div class=\\\"mobile-property-actions\\\">\\n                          <button class=\\\"btn btn-outline-primary btn-sm\\\" onclick=\\\"propertyManager.editProperty('\").concat(property.propertyId, \"')\\\">\\n                              <i class=\\\"bi bi-pencil\\\"></i> Edit\\n                          </button>\\n                          <button class=\\\"btn btn-outline-danger btn-sm\\\" onclick=\\\"propertyManager.deleteProperty('\").concat(property.propertyId, \"')\\\">\\n                              <i class=\\\"bi bi-trash\\\"></i> Delete\\n                          </button>\\n                      </div>\\n                  </div>\\n              \");\n        });\n        mobileList.innerHTML = mobileHtml;\n      }\n    }\n  }, {\n    key: \"showAddPropertyModal\",\n    value: function showAddPropertyModal() {\n      this.showPropertyModal();\n    }\n  }, {\n    key: \"showPropertyModal\",\n    value: function showPropertyModal() {\n      var _this4 = this;\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      // Update modal title and button text\n      var isEdit = !!property;\n      document.getElementById(\"propertyModalTitle\").textContent = isEdit ? \"Edit Property\" : \"Add New Property\";\n      var submitBtn = document.getElementById(\"propertySubmitBtn\");\n      submitBtn.innerHTML = isEdit ? '<i class=\"bi bi-pencil-square me-1\"></i><span id=\"propertySubmitText\">Update Property</span>' : '<i class=\"bi bi-plus-circle me-1\"></i><span id=\"propertySubmitText\">Add Property</span>';\n\n      // Reset and populate form\n      var form = document.getElementById(\"propertyForm\");\n      if (form) {\n        form.reset();\n\n        // Store the property being edited (if any)\n        form.setAttribute(\"data-property-id\", (property === null || property === void 0 ? void 0 : property.propertyId) || \"\");\n        form.setAttribute(\"data-mode\", isEdit ? \"edit\" : \"add\");\n        if (isEdit && property) {\n          // Populate form with existing data\n          document.getElementById(\"propertyId\").value = property.propertyId || \"\";\n          document.getElementById(\"address\").value = property.address || \"\";\n          document.getElementById(\"unit\").value = property.unit || \"\";\n          document.getElementById(\"maxPax\").value = property.maxPax || 1;\n\n          // Format date for input\n          if (property.moveInDate) {\n            var date = new Date(property.moveInDate);\n            document.getElementById(\"moveInDate\").value = date.toISOString().split(\"T\")[0];\n          } else {\n            document.getElementById(\"moveInDate\").value = new Date().toISOString().split(\"T\")[0];\n          }\n          document.getElementById(\"rentPaymentDate\").value = property.rentPaymentDate || 1;\n          document.getElementById(\"rent\").value = property.rent || 0;\n          document.getElementById(\"agentName\").value = property.agentName || \"\";\n          document.getElementById(\"agentPhone\").value = property.agentPhone || \"\";\n          document.getElementById(\"landlordBankAccount\").value = property.landlordBankAccount || \"\";\n          document.getElementById(\"landlordBankName\").value = property.landlordBankName || \"\";\n          document.getElementById(\"landlordAccountName\").value = property.landlordAccountName || \"\";\n          document.getElementById(\"telegramBotToken\").value = property.telegramBotToken || \"\";\n          document.getElementById(\"telegramChannelId\").value = property.telegramChannelId || \"\";\n\n          // Make propertyId readonly in edit mode\n          document.getElementById(\"propertyId\").readOnly = true;\n          document.getElementById(\"propertyId\").classList.add(\"bg-light\");\n        } else {\n          // Set default values for add mode\n          var moveInDateInput = document.getElementById(\"moveInDate\");\n          if (moveInDateInput) {\n            moveInDateInput.value = new Date().toISOString().split(\"T\")[0];\n          }\n          document.getElementById(\"maxPax\").value = \"1\";\n          document.getElementById(\"rentPaymentDate\").value = \"1\";\n          document.getElementById(\"rent\").value = \"0\";\n\n          // Make propertyId editable in add mode\n          document.getElementById(\"propertyId\").readOnly = false;\n          document.getElementById(\"propertyId\").classList.remove(\"bg-light\");\n        }\n      }\n\n      // Show modal\n      var modalEl = document.getElementById(\"propertyModal\");\n      var modal = new bootstrap.Modal(modalEl);\n\n      // Add event listener for when modal is fully hidden\n      modalEl.addEventListener(\"hidden.bs.modal\", function () {\n        _this4.cleanupModal();\n      }, {\n        once: true\n      });\n      modal.show();\n    }\n  }, {\n    key: \"cleanupModal\",\n    value: function cleanupModal() {\n      // Remove any remaining backdrop\n      var backdrops = document.querySelectorAll(\".modal-backdrop\");\n      backdrops.forEach(function (backdrop) {\n        return backdrop.remove();\n      });\n\n      // Remove modal classes from body\n      document.body.classList.remove(\"modal-open\");\n      document.body.style.paddingRight = \"\";\n      document.body.style.overflow = \"\";\n    }\n  }, {\n    key: \"getPropertyDataFromUser\",\n    value: function getPropertyDataFromUser() {\n      var existingProperty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var propertyId = prompt(\"Property ID:\", (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.propertyId) || \"\");\n      if (!propertyId) return null;\n      var address = prompt(\"Address:\", (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.address) || \"\");\n      if (!address) return null;\n      var unit = prompt(\"Unit:\", (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.unit) || \"\");\n      if (!unit) return null;\n      var maxPax = parseInt(prompt(\"Max Occupants:\", (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.maxPax) || \"1\"));\n      if (isNaN(maxPax) || maxPax < 1) return null;\n      var rent = parseFloat(prompt(\"Monthly Rent:\", (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.rent) || \"0\"));\n      if (isNaN(rent) || rent < 0) return null;\n      return {\n        propertyId: propertyId,\n        address: address,\n        unit: unit,\n        maxPax: maxPax,\n        rent: rent,\n        agentName: (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.agentName) || \"\",\n        agentPhone: (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.agentPhone) || \"\",\n        landlordBankAccount: (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.landlordBankAccount) || \"\",\n        landlordBankName: (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.landlordBankName) || \"\",\n        landlordAccountName: (existingProperty === null || existingProperty === void 0 ? void 0 : existingProperty.landlordAccountName) || \"\"\n      };\n    }\n  }, {\n    key: \"handlePropertySubmit\",\n    value: function () {\n      var _handlePropertySubmit = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(event) {\n        var _formData$get, _formData$get2, _formData$get3, _formData$get4, _formData$get5, _formData$get6, _formData$get7, form, formData, isEdit, originalPropertyId, propertyData, submitBtn, originalText, modal, _isEdit, _submitBtn, _isEdit2, _t2;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.p = _context2.n) {\n            case 0:\n              _context2.p = 0;\n              form = event.target;\n              formData = new FormData(form);\n              isEdit = form.getAttribute(\"data-mode\") === \"edit\";\n              originalPropertyId = form.getAttribute(\"data-property-id\");\n              propertyData = {\n                propertyId: formData.get(\"propertyId\").trim().toUpperCase(),\n                address: formData.get(\"address\").trim(),\n                unit: formData.get(\"unit\").trim(),\n                maxPax: parseInt(formData.get(\"maxPax\")) || 1,\n                moveInDate: formData.get(\"moveInDate\") || new Date().toISOString().split(\"T\")[0],\n                rentPaymentDate: parseInt(formData.get(\"rentPaymentDate\")) || 1,\n                rent: parseFloat(formData.get(\"rent\")) || 0,\n                agentName: ((_formData$get = formData.get(\"agentName\")) === null || _formData$get === void 0 ? void 0 : _formData$get.trim()) || \"\",\n                agentPhone: ((_formData$get2 = formData.get(\"agentPhone\")) === null || _formData$get2 === void 0 ? void 0 : _formData$get2.trim()) || \"\",\n                landlordBankAccount: ((_formData$get3 = formData.get(\"landlordBankAccount\")) === null || _formData$get3 === void 0 ? void 0 : _formData$get3.trim()) || \"\",\n                landlordBankName: ((_formData$get4 = formData.get(\"landlordBankName\")) === null || _formData$get4 === void 0 ? void 0 : _formData$get4.trim()) || \"\",\n                landlordAccountName: ((_formData$get5 = formData.get(\"landlordAccountName\")) === null || _formData$get5 === void 0 ? void 0 : _formData$get5.trim()) || \"\",\n                telegramBotToken: ((_formData$get6 = formData.get(\"telegramBotToken\")) === null || _formData$get6 === void 0 ? void 0 : _formData$get6.trim()) || \"\",\n                telegramChannelId: ((_formData$get7 = formData.get(\"telegramChannelId\")) === null || _formData$get7 === void 0 ? void 0 : _formData$get7.trim()) || \"\"\n              }; // Validate required fields\n              if (!(!propertyData.propertyId || !propertyData.address || !propertyData.unit)) {\n                _context2.n = 1;\n                break;\n              }\n              alert(\"Please fill in all required fields (Property ID, Address, Unit)\");\n              return _context2.a(2);\n            case 1:\n              if (!(propertyData.maxPax < 1 || propertyData.maxPax > 20)) {\n                _context2.n = 2;\n                break;\n              }\n              alert(\"Maximum occupancy must be between 1 and 20\");\n              return _context2.a(2);\n            case 2:\n              if (!(propertyData.rentPaymentDate < 1 || propertyData.rentPaymentDate > 31)) {\n                _context2.n = 3;\n                break;\n              }\n              alert(\"Rent payment date must be between 1 and 31\");\n              return _context2.a(2);\n            case 3:\n              if (!(propertyData.rent < 0)) {\n                _context2.n = 4;\n                break;\n              }\n              alert(\"Rent cannot be negative\");\n              return _context2.a(2);\n            case 4:\n              // Show loading state\n              submitBtn = event.target.querySelector('button[type=\"submit\"]');\n              originalText = submitBtn.innerHTML;\n              submitBtn.disabled = true;\n              submitBtn.innerHTML = isEdit ? '<i class=\"bi bi-hourglass-split me-1\"></i>Updating Property...' : '<i class=\"bi bi-hourglass-split me-1\"></i>Adding Property...';\n\n              // Add or update the property\n              if (!isEdit) {\n                _context2.n = 6;\n                break;\n              }\n              _context2.n = 5;\n              return this.updateProperty(originalPropertyId, propertyData);\n            case 5:\n              _context2.n = 7;\n              break;\n            case 6:\n              _context2.n = 7;\n              return this.addProperty(propertyData);\n            case 7:\n              // Close modal on success\n              modal = bootstrap.Modal.getInstance(document.getElementById(\"propertyModal\"));\n              if (modal) {\n                modal.hide();\n              }\n\n              // Ensure backdrop is removed\n              setTimeout(function () {\n                var backdrop = document.querySelector(\".modal-backdrop\");\n                if (backdrop) {\n                  backdrop.remove();\n                }\n                document.body.classList.remove(\"modal-open\");\n                document.body.style.paddingRight = \"\";\n              }, 300);\n\n              // Reset button state\n              submitBtn.disabled = false;\n              submitBtn.innerHTML = originalText;\n              _context2.n = 9;\n              break;\n            case 8:\n              _context2.p = 8;\n              _t2 = _context2.v;\n              console.error(\"Error in handlePropertySubmit:\", _t2);\n              _isEdit = event.target.getAttribute(\"data-mode\") === \"edit\";\n              alert(\"An error occurred while \".concat(_isEdit ? \"updating\" : \"adding\", \" the property. Please try again.\"));\n\n              // Reset button state\n              _submitBtn = event.target.querySelector('button[type=\"submit\"]');\n              if (_submitBtn) {\n                _submitBtn.disabled = false;\n                _isEdit2 = event.target.getAttribute(\"data-mode\") === \"edit\";\n                _submitBtn.innerHTML = _isEdit2 ? '<i class=\"bi bi-pencil-square me-1\"></i>Update Property' : '<i class=\"bi bi-plus-circle me-1\"></i>Add Property';\n              }\n            case 9:\n              return _context2.a(2);\n          }\n        }, _callee2, this, [[0, 8]]);\n      }));\n      function handlePropertySubmit(_x) {\n        return _handlePropertySubmit.apply(this, arguments);\n      }\n      return handlePropertySubmit;\n    }()\n  }, {\n    key: \"addProperty\",\n    value: function () {\n      var _addProperty = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(propertyData) {\n        var response, result, _t3;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.p = _context3.n) {\n            case 0:\n              _context3.p = 0;\n              _context3.n = 1;\n              return API.post(API_CONFIG.ENDPOINTS.PROPERTIES, propertyData);\n            case 1:\n              response = _context3.v;\n              _context3.n = 2;\n              return response.json();\n            case 2:\n              result = _context3.v;\n              if (!result.success) {\n                _context3.n = 4;\n                break;\n              }\n              _context3.n = 3;\n              return this.loadProperties();\n            case 3:\n              _context3.n = 5;\n              break;\n            case 4:\n              alert(\"Failed to add property: \" + result.error);\n            case 5:\n              _context3.n = 7;\n              break;\n            case 6:\n              _context3.p = 6;\n              _t3 = _context3.v;\n              console.error(\"Error adding property:\", _t3);\n              alert(\"Error adding property. Please try again.\");\n            case 7:\n              return _context3.a(2);\n          }\n        }, _callee3, this, [[0, 6]]);\n      }));\n      function addProperty(_x2) {\n        return _addProperty.apply(this, arguments);\n      }\n      return addProperty;\n    }()\n  }, {\n    key: \"editProperty\",\n    value: function () {\n      var _editProperty = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(propertyId) {\n        var property;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.n) {\n            case 0:\n              // Find the property to edit\n              property = this.properties.find(function (p) {\n                return p.propertyId === propertyId;\n              });\n              if (property) {\n                _context4.n = 1;\n                break;\n              }\n              alert(\"Property not found\");\n              return _context4.a(2);\n            case 1:\n              // Show the modal with property data\n              this.showPropertyModal(property);\n            case 2:\n              return _context4.a(2);\n          }\n        }, _callee4, this);\n      }));\n      function editProperty(_x3) {\n        return _editProperty.apply(this, arguments);\n      }\n      return editProperty;\n    }()\n  }, {\n    key: \"updateProperty\",\n    value: function () {\n      var _updateProperty = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(propertyId, propertyData) {\n        var response, result, _t4;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.p = _context5.n) {\n            case 0:\n              _context5.p = 0;\n              _context5.n = 1;\n              return API.put(API_CONFIG.ENDPOINTS.PROPERTY_BY_ID(propertyId), propertyData);\n            case 1:\n              response = _context5.v;\n              _context5.n = 2;\n              return response.json();\n            case 2:\n              result = _context5.v;\n              if (!result.success) {\n                _context5.n = 4;\n                break;\n              }\n              _context5.n = 3;\n              return this.loadProperties();\n            case 3:\n              _context5.n = 5;\n              break;\n            case 4:\n              alert(\"Failed to update property: \" + result.error);\n            case 5:\n              _context5.n = 7;\n              break;\n            case 6:\n              _context5.p = 6;\n              _t4 = _context5.v;\n              console.error(\"Error updating property:\", _t4);\n              alert(\"Error updating property: \" + _t4.message);\n              throw _t4;\n            case 7:\n              return _context5.a(2);\n          }\n        }, _callee5, this, [[0, 6]]);\n      }));\n      function updateProperty(_x4, _x5) {\n        return _updateProperty.apply(this, arguments);\n      }\n      return updateProperty;\n    }()\n  }, {\n    key: \"deleteProperty\",\n    value: function () {\n      var _deleteProperty = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(propertyId) {\n        var response, result, _t5;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.p = _context6.n) {\n            case 0:\n              if (confirm(\"Are you sure you want to delete property \".concat(propertyId, \"?\"))) {\n                _context6.n = 1;\n                break;\n              }\n              return _context6.a(2);\n            case 1:\n              _context6.p = 1;\n              _context6.n = 2;\n              return API[\"delete\"](API_CONFIG.ENDPOINTS.PROPERTY_BY_ID(propertyId));\n            case 2:\n              response = _context6.v;\n              _context6.n = 3;\n              return response.json();\n            case 3:\n              result = _context6.v;\n              if (!result.success) {\n                _context6.n = 5;\n                break;\n              }\n              _context6.n = 4;\n              return this.loadProperties();\n            case 4:\n              _context6.n = 6;\n              break;\n            case 5:\n              alert(\"Failed to delete property: \" + result.error);\n            case 6:\n              _context6.n = 8;\n              break;\n            case 7:\n              _context6.p = 7;\n              _t5 = _context6.v;\n              console.error(\"Error deleting property:\", _t5);\n              alert(\"Error deleting property. Please try again.\");\n            case 8:\n              return _context6.a(2);\n          }\n        }, _callee6, this, [[1, 7]]);\n      }));\n      function deleteProperty(_x6) {\n        return _deleteProperty.apply(this, arguments);\n      }\n      return deleteProperty;\n    }() // Utility method to escape HTML to prevent XSS\n  }, {\n    key: \"escapeHtml\",\n    value: function escapeHtml(text) {\n      var map = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#039;\"\n      };\n      return text.replace(/[&<>\"']/g, function (m) {\n        return map[m];\n      });\n    }\n\n    // Public method to refresh the properties list\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.loadProperties();\n    }\n  }]);\n}(); // Export for use in other modules\nwindow.PropertyManagementComponent = PropertyManagementComponent;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/components/property-management.js?\n}");

/***/ }),

/***/ "./src/js/components/tenant-management.js":
/*!************************************************!*\
  !*** ./src/js/components/tenant-management.js ***!
  \************************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Tenant Management Component (v2 - fixed update endpoint)\n * Handles tenant CRUD operations\n */\nvar TenantManagementComponent = /*#__PURE__*/function () {\n  function TenantManagementComponent() {\n    _classCallCheck(this, TenantManagementComponent);\n    this.tenants = [];\n    this.selectedProperties = [];\n    this.propertiesCache = null; // Cache for properties\n    this.propertiesCacheTime = null;\n    this.cacheTimeout = 30000; // Cache for 30 seconds\n    this.passportPics = []; // Array of passport image URLs\n    this.visaPics = []; // Array of visa image URLs\n    this.init();\n  }\n  return _createClass(TenantManagementComponent, [{\n    key: \"init\",\n    value: function init() {\n      this.setupEventListeners();\n      this.loadTenants();\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      // Add tenant button\n      var addTenantBtn = document.getElementById('addTenantBtn');\n      if (addTenantBtn) {\n        addTenantBtn.addEventListener('click', function () {\n          _this.showAddTenantModal();\n        });\n      }\n\n      // Tenant form submission (add/edit)\n      var tenantForm = document.getElementById('tenantForm');\n      if (tenantForm) {\n        tenantForm.addEventListener('submit', function (e) {\n          e.preventDefault();\n          _this.handleTenantSubmit(e);\n        });\n      }\n\n      // Search functionality\n      var searchInput = document.getElementById('tenantSearchInput');\n      if (searchInput) {\n        searchInput.addEventListener('input', function (e) {\n          _this.filterTenants(e.target.value);\n        });\n      }\n    }\n  }, {\n    key: \"loadTenants\",\n    value: function () {\n      var _loadTenants = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var response, result, _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.p = _context.n) {\n            case 0:\n              _context.p = 0;\n              _context.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.TENANTS);\n            case 1:\n              response = _context.v;\n              _context.n = 2;\n              return response.json();\n            case 2:\n              result = _context.v;\n              if (result.success) {\n                this.tenants = result.tenants;\n                this.renderTenantsTable();\n\n                // Update sidebar badges\n                if (window.updateSidebarBadges) {\n                  window.updateSidebarBadges();\n                }\n              } else {\n                console.error('Failed to load tenants:', result.error);\n                this.showEmptyState();\n              }\n              _context.n = 4;\n              break;\n            case 3:\n              _context.p = 3;\n              _t = _context.v;\n              console.error('Error loading tenants:', _t);\n              this.showEmptyState('Error loading tenants. Please try again.');\n            case 4:\n              return _context.a(2);\n          }\n        }, _callee, this, [[0, 3]]);\n      }));\n      function loadTenants() {\n        return _loadTenants.apply(this, arguments);\n      }\n      return loadTenants;\n    }()\n  }, {\n    key: \"renderTenantsTable\",\n    value: function renderTenantsTable() {\n      var _this2 = this;\n      var tbody = document.getElementById('tenantsTableBody');\n      if (!tbody) return;\n      if (this.tenants.length === 0) {\n        this.showEmptyState();\n        return;\n      }\n      var html = '';\n      this.tenants.forEach(function (tenant) {\n        var moveinDate = tenant.moveinDate ? new Date(tenant.moveinDate).toLocaleDateString() : 'N/A';\n        var moveoutDate = tenant.moveoutDate ? new Date(tenant.moveoutDate).toLocaleDateString() : 'Current';\n        html += \"\\n                <tr>\\n                    <td>\\n                        <div>\".concat(_this2.escapeHtml(tenant.name), \"</div>\\n                        <small class=\\\"text-muted\\\">\").concat(_this2.escapeHtml(tenant.phoneNumber || 'No phone'), \"</small>\\n                    </td>\\n                    <td>\").concat(_this2.escapeHtml(tenant.fin), \"</td>\\n                    <td>\").concat(_this2.escapeHtml(tenant.passportNumber), \"</td>\\n                    <td>\\n                        <span class=\\\"badge bg-\").concat(tenant.isRegistered ? 'success' : 'secondary', \"\\\">\\n                            \").concat(tenant.isRegistered ? 'Registered' : 'Unregistered', \"\\n                        </span>\\n                        \").concat(tenant.isMainTenant ? '<span class=\"badge bg-primary ms-1\">Main</span>' : '', \"\\n                    </td>\\n                    <td>\\n                        <div><strong>Room:</strong> \").concat(_this2.escapeHtml(tenant.room || 'N/A'), \"</div>\\n                        <small class=\\\"text-muted\\\">In: \").concat(moveinDate, \" | Out: \").concat(moveoutDate, \"</small>\\n                    </td>\\n                    <td>\\n                        <span class=\\\"badge bg-info\\\">\\n                            \").concat(tenant.properties ? tenant.properties.length : 0, \" properties\\n                        </span>\\n                    </td>\\n                    <td>\\n                        <button class=\\\"btn btn-sm btn-outline-primary me-1\\\" onclick=\\\"tenantManager.editTenant('\").concat(tenant.fin, \"')\\\">\\n                            <i class=\\\"bi bi-pencil\\\"></i> Edit\\n                        </button>\\n                        <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"tenantManager.deleteTenant('\").concat(tenant.fin, \"')\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i> Delete\\n                        </button>\\n                    </td>\\n                </tr>\\n            \");\n      });\n      tbody.innerHTML = html;\n    }\n  }, {\n    key: \"showEmptyState\",\n    value: function showEmptyState() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'No tenants found';\n      var tbody = document.getElementById('tenantsTableBody');\n      if (!tbody) return;\n      tbody.innerHTML = \"\\n            <tr>\\n                <td colspan=\\\"7\\\" class=\\\"text-center text-muted py-4\\\">\\n                    <i class=\\\"bi bi-people fs-1\\\"></i>\\n                    <p class=\\\"mt-2\\\">\".concat(message, \"</p>\\n                </td>\\n            </tr>\\n        \");\n    }\n  }, {\n    key: \"filterTenants\",\n    value: function filterTenants(searchTerm) {\n      var _this3 = this;\n      if (!searchTerm.trim()) {\n        this.renderTenantsTable();\n        return;\n      }\n      var filteredTenants = this.tenants.filter(function (tenant) {\n        return tenant.name.toLowerCase().includes(searchTerm.toLowerCase()) || tenant.fin.toLowerCase().includes(searchTerm.toLowerCase()) || tenant.passportNumber.toLowerCase().includes(searchTerm.toLowerCase()) || tenant.phoneNumber && tenant.phoneNumber.toLowerCase().includes(searchTerm.toLowerCase()) || tenant.room && tenant.room.toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      var tbody = document.getElementById('tenantsTableBody');\n      if (!tbody) return;\n      if (filteredTenants.length === 0) {\n        this.showEmptyState(\"No tenants match \\\"\".concat(searchTerm, \"\\\"\"));\n        return;\n      }\n      var html = '';\n      filteredTenants.forEach(function (tenant) {\n        var moveinDate = tenant.moveinDate ? new Date(tenant.moveinDate).toLocaleDateString() : 'N/A';\n        var moveoutDate = tenant.moveoutDate ? new Date(tenant.moveoutDate).toLocaleDateString() : 'Current';\n        html += \"\\n                <tr>\\n                    <td>\\n                        <div>\".concat(_this3.escapeHtml(tenant.name), \"</div>\\n                        <small class=\\\"text-muted\\\">\").concat(_this3.escapeHtml(tenant.phoneNumber || 'No phone'), \"</small>\\n                    </td>\\n                    <td>\").concat(_this3.escapeHtml(tenant.fin), \"</td>\\n                    <td>\").concat(_this3.escapeHtml(tenant.passportNumber), \"</td>\\n                    <td>\\n                        <span class=\\\"badge bg-\").concat(tenant.isRegistered ? 'success' : 'secondary', \"\\\">\\n                            \").concat(tenant.isRegistered ? 'Registered' : 'Unregistered', \"\\n                        </span>\\n                        \").concat(tenant.isMainTenant ? '<span class=\"badge bg-primary ms-1\">Main</span>' : '', \"\\n                    </td>\\n                    <td>\\n                        <div><strong>Room:</strong> \").concat(_this3.escapeHtml(tenant.room || 'N/A'), \"</div>\\n                        <small class=\\\"text-muted\\\">In: \").concat(moveinDate, \" | Out: \").concat(moveoutDate, \"</small>\\n                    </td>\\n                    <td>\\n                        <span class=\\\"badge bg-info\\\">\\n                            \").concat(tenant.properties ? tenant.properties.length : 0, \" properties\\n                        </span>\\n                    </td>\\n                    <td>\\n                        <button class=\\\"btn btn-sm btn-outline-primary me-1\\\" onclick=\\\"tenantManager.editTenant('\").concat(tenant.fin, \"')\\\">\\n                            <i class=\\\"bi bi-pencil\\\"></i> Edit\\n                        </button>\\n                        <button class=\\\"btn btn-sm btn-outline-danger\\\" onclick=\\\"tenantManager.deleteTenant('\").concat(tenant.fin, \"')\\\">\\n                            <i class=\\\"bi bi-trash\\\"></i> Delete\\n                        </button>\\n                    </td>\\n                </tr>\\n            \");\n      });\n      tbody.innerHTML = html;\n    }\n  }, {\n    key: \"showAddTenantModal\",\n    value: function showAddTenantModal() {\n      this.showTenantModal();\n    }\n  }, {\n    key: \"showTenantModal\",\n    value: function () {\n      var _showTenantModal = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var _this4 = this;\n        var tenant,\n          isEdit,\n          submitBtn,\n          form,\n          modalEl,\n          modal,\n          _args2 = arguments;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.n) {\n            case 0:\n              tenant = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : null;\n              // Update modal title and button text\n              isEdit = !!tenant;\n              document.getElementById('tenantModalTitle').textContent = isEdit ? 'Edit Tenant' : 'Add New Tenant';\n              submitBtn = document.getElementById('tenantSubmitBtn');\n              submitBtn.innerHTML = isEdit ? '<i class=\"bi bi-person-check me-1\"></i><span id=\"tenantSubmitText\">Update Tenant</span>' : '<i class=\"bi bi-person-plus me-1\"></i><span id=\"tenantSubmitText\">Add Tenant</span>';\n\n              // Reset and populate form\n              form = document.getElementById('tenantForm');\n              if (form) {\n                form.reset();\n\n                // Store the tenant being edited (if any)\n                form.setAttribute('data-tenant-fin', (tenant === null || tenant === void 0 ? void 0 : tenant.fin) || '');\n                form.setAttribute('data-mode', isEdit ? 'edit' : 'add');\n                if (isEdit && tenant) {\n                  // Populate form with existing data\n                  document.getElementById('tenantName').value = tenant.name || '';\n                  document.getElementById('tenantFin').value = tenant.fin || '';\n                  document.getElementById('tenantPassport').value = tenant.passportNumber || '';\n                  document.getElementById('tenantPhoneNumber').value = tenant.phoneNumber || '';\n                  document.getElementById('tenantRoom').value = tenant.room || '';\n                  document.getElementById('tenantMoveinDate').value = tenant.moveinDate ? tenant.moveinDate.split('T')[0] : '';\n                  document.getElementById('tenantMoveoutDate').value = tenant.moveoutDate ? tenant.moveoutDate.split('T')[0] : '';\n                  document.getElementById('tenantIsRegistered').checked = tenant.isRegistered || false;\n                  document.getElementById('tenantIsMainTenant').checked = tenant.isMainTenant || false;\n\n                  // Handle multiple images (with backward compatibility)\n                  this.passportPics = tenant.passportPics || (tenant.passportPic ? [tenant.passportPic] : []);\n                  this.visaPics = tenant.visaPics || (tenant.visaPic ? [tenant.visaPic] : []);\n                  this.updateImageGallery('passport');\n                  this.updateImageGallery('visa');\n\n                  // Set up properties - extract property IDs only\n                  this.selectedProperties = (tenant.properties || []).map(function (prop) {\n                    return typeof prop === 'string' ? prop : prop.propertyId || prop._id;\n                  });\n\n                  // Make FIN readonly in edit mode\n                  document.getElementById('tenantFin').readOnly = true;\n                  document.getElementById('tenantFin').classList.add('bg-light');\n                } else {\n                  // Reset for add mode\n                  this.selectedProperties = [];\n                  this.passportPics = [];\n                  this.visaPics = [];\n                  this.updateImageGallery('passport');\n                  this.updateImageGallery('visa');\n\n                  // Make FIN editable in add mode\n                  document.getElementById('tenantFin').readOnly = false;\n                  document.getElementById('tenantFin').classList.remove('bg-light');\n                }\n              }\n\n              // Load available properties and populate select\n              _context2.n = 1;\n              return this.loadPropertiesForSelect();\n            case 1:\n              this.updateSelectedPropertiesList();\n\n              // Add event listeners for image URL inputs\n              this.setupImageUrlListeners();\n\n              // Show modal\n              modalEl = document.getElementById('tenantModal');\n              modal = new bootstrap.Modal(modalEl); // Add event listener for when modal is fully hidden\n              modalEl.addEventListener('hidden.bs.modal', function () {\n                _this4.cleanupModal();\n              }, {\n                once: true\n              });\n              modal.show();\n            case 2:\n              return _context2.a(2);\n          }\n        }, _callee2, this);\n      }));\n      function showTenantModal() {\n        return _showTenantModal.apply(this, arguments);\n      }\n      return showTenantModal;\n    }()\n  }, {\n    key: \"cleanupModal\",\n    value: function cleanupModal() {\n      // Remove any remaining backdrop\n      var backdrops = document.querySelectorAll('.modal-backdrop');\n      backdrops.forEach(function (backdrop) {\n        return backdrop.remove();\n      });\n\n      // Remove modal classes from body\n      document.body.classList.remove('modal-open');\n      document.body.style.paddingRight = '';\n      document.body.style.overflow = '';\n\n      // Reset selected properties\n      this.selectedProperties = [];\n    }\n  }, {\n    key: \"loadPropertiesForSelect\",\n    value: function () {\n      var _loadPropertiesForSelect = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n        var now, response, result, checkboxList, _t2;\n        return _regenerator().w(function (_context3) {\n          while (1) switch (_context3.p = _context3.n) {\n            case 0:\n              _context3.p = 0;\n              // Check cache first\n              now = Date.now();\n              if (!(this.propertiesCache && this.propertiesCacheTime && now - this.propertiesCacheTime < this.cacheTimeout)) {\n                _context3.n = 1;\n                break;\n              }\n              console.log('Using cached properties data');\n              this.populatePropertyCheckboxes(this.propertiesCache);\n              return _context3.a(2);\n            case 1:\n              _context3.n = 2;\n              return API.get(API_CONFIG.ENDPOINTS.PROPERTIES);\n            case 2:\n              response = _context3.v;\n              _context3.n = 3;\n              return response.json();\n            case 3:\n              result = _context3.v;\n              // Cache the result\n              if (result.success) {\n                this.propertiesCache = result;\n                this.propertiesCacheTime = now;\n              }\n              this.populatePropertyCheckboxes(result);\n              _context3.n = 5;\n              break;\n            case 4:\n              _context3.p = 4;\n              _t2 = _context3.v;\n              console.error('Error loading properties:', _t2);\n              checkboxList = document.getElementById('propertyCheckboxList');\n              if (checkboxList) {\n                checkboxList.innerHTML = '<li class=\"px-3 py-2 text-danger\">Error loading properties</li>';\n              }\n            case 5:\n              return _context3.a(2);\n          }\n        }, _callee3, this, [[0, 4]]);\n      }));\n      function loadPropertiesForSelect() {\n        return _loadPropertiesForSelect.apply(this, arguments);\n      }\n      return loadPropertiesForSelect;\n    }()\n  }, {\n    key: \"populatePropertyCheckboxes\",\n    value: function populatePropertyCheckboxes(result) {\n      var _this5 = this;\n      var checkboxList = document.getElementById('propertyCheckboxList');\n      if (!checkboxList || !result.success) return;\n\n      // Clear existing items\n      checkboxList.innerHTML = '';\n      if (result.properties.length === 0) {\n        checkboxList.innerHTML = '<li class=\"px-3 py-2 text-muted\">No properties available</li>';\n        return;\n      }\n      result.properties.forEach(function (property) {\n        var listItem = document.createElement('li');\n        listItem.className = 'px-3 py-2';\n        var checkboxId = \"property-\".concat(property.propertyId);\n        var isChecked = _this5.selectedProperties.includes(property.propertyId);\n        listItem.innerHTML = \"\\n                <div class=\\\"form-check\\\">\\n                    <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"\".concat(checkboxId, \"\\\" \\n                           value=\\\"\").concat(property.propertyId, \"\\\" \").concat(isChecked ? 'checked' : '', \">\\n                    <label class=\\\"form-check-label\\\" for=\\\"\").concat(checkboxId, \"\\\" style=\\\"cursor: pointer;\\\">\\n                        <strong>\").concat(property.propertyId, \"</strong> - \").concat(property.address, \", \").concat(property.unit, \"\\n                    </label>\\n                </div>\\n            \");\n\n        // Add click handler to the checkbox\n        var checkbox = listItem.querySelector('input[type=\"checkbox\"]');\n        checkbox.addEventListener('change', function (e) {\n          _this5.handleCheckboxChange(e.target.value, e.target.checked);\n        });\n\n        // Prevent dropdown from closing when clicking on list items\n        listItem.addEventListener('click', function (e) {\n          e.stopPropagation();\n          // If clicking on the item (not checkbox), toggle the checkbox\n          if (e.target.tagName !== 'INPUT') {\n            checkbox.checked = !checkbox.checked;\n            _this5.handleCheckboxChange(checkbox.value, checkbox.checked);\n          }\n        });\n        checkboxList.appendChild(listItem);\n      });\n\n      // Update dropdown text\n      this.updateDropdownText();\n    }\n  }, {\n    key: \"handleCheckboxChange\",\n    value: function handleCheckboxChange(propertyId, isChecked) {\n      if (isChecked) {\n        // Add property if not already selected\n        if (!this.selectedProperties.includes(propertyId)) {\n          this.selectedProperties.push(propertyId);\n        }\n      } else {\n        // Remove property from selection\n        this.selectedProperties = this.selectedProperties.filter(function (id) {\n          return id !== propertyId;\n        });\n      }\n      this.updateSelectedPropertiesList();\n      this.updateDropdownText();\n    }\n  }, {\n    key: \"updateDropdownText\",\n    value: function updateDropdownText() {\n      var dropdownText = document.getElementById('propertyDropdownText');\n      if (!dropdownText) return;\n      var count = this.selectedProperties.length;\n      if (count === 0) {\n        dropdownText.textContent = 'Select properties...';\n      } else if (count === 1) {\n        dropdownText.textContent = '1 property selected';\n      } else {\n        dropdownText.textContent = \"\".concat(count, \" properties selected\");\n      }\n    }\n\n    // Keep old function for backward compatibility but redirect to new logic\n  }, {\n    key: \"addPropertyToTenant\",\n    value: function addPropertyToTenant() {\n      // This function is no longer used with multiselect, but keeping for safety\n      console.log('addPropertyToTenant called - now handled by handlePropertySelectionChange');\n    }\n  }, {\n    key: \"removePropertyFromTenant\",\n    value: function removePropertyFromTenant(propertyId) {\n      this.selectedProperties = this.selectedProperties.filter(function (id) {\n        return id !== propertyId;\n      });\n      this.updateSelectedPropertiesList();\n      this.updateDropdownText();\n\n      // Update checkbox to reflect removal\n      var checkbox = document.getElementById(\"property-\".concat(propertyId));\n      if (checkbox) {\n        checkbox.checked = false;\n      }\n    }\n  }, {\n    key: \"updateSelectedPropertiesList\",\n    value: function updateSelectedPropertiesList() {\n      var listContainer = document.getElementById('selectedPropertiesList');\n      var noPropertiesMessage = document.getElementById('noPropertiesMessage');\n      var hiddenInput = document.getElementById('tenantProperties');\n      if (this.selectedProperties.length === 0) {\n        listContainer.innerHTML = '<div class=\"text-muted\" id=\"noPropertiesMessage\">No properties assigned</div>';\n        hiddenInput.value = '';\n      } else {\n        var html = '';\n        this.selectedProperties.forEach(function (propertyId) {\n          html += \"\\n                    <div class=\\\"badge bg-secondary me-2 mb-2 p-2\\\">\\n                        <i class=\\\"bi bi-building me-1\\\"></i>\".concat(propertyId, \"\\n                        <button type=\\\"button\\\" class=\\\"btn-close btn-close-white ms-2\\\" aria-label=\\\"Remove\\\" \\n                                onclick=\\\"tenantManager.removePropertyFromTenant('\").concat(propertyId, \"')\\\" style=\\\"font-size: 0.7em;\\\"></button>\\n                    </div>\\n                \");\n        });\n        listContainer.innerHTML = html;\n        hiddenInput.value = this.selectedProperties.join(',');\n      }\n\n      // Update dropdown text when list changes\n      this.updateDropdownText();\n    }\n  }, {\n    key: \"handleTenantSubmit\",\n    value: function () {\n      var _handleTenantSubmit = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(event) {\n        var form, formData, isEdit, originalFin, tenantData, submitBtn, originalText, modal, _isEdit, _submitBtn, _isEdit2, _t3;\n        return _regenerator().w(function (_context4) {\n          while (1) switch (_context4.p = _context4.n) {\n            case 0:\n              _context4.p = 0;\n              form = event.target;\n              formData = new FormData(form);\n              isEdit = form.getAttribute('data-mode') === 'edit';\n              originalFin = form.getAttribute('data-tenant-fin');\n              tenantData = {\n                name: formData.get('name').trim(),\n                fin: formData.get('fin').trim().toUpperCase(),\n                passportNumber: formData.get('passportNumber').trim().toUpperCase(),\n                phoneNumber: formData.get('phoneNumber').trim(),\n                room: formData.get('room'),\n                moveinDate: formData.get('moveinDate'),\n                moveoutDate: formData.get('moveoutDate') || null,\n                isRegistered: formData.get('isRegistered') === 'on',\n                isMainTenant: formData.get('isMainTenant') === 'on',\n                properties: this.selectedProperties,\n                passportPics: this.passportPics,\n                visaPics: this.visaPics\n              }; // Debug: log the properties being sent\n              console.log('🔄 Tenant update data:', _objectSpread(_objectSpread({}, tenantData), {}, {\n                propertiesType: _typeof(this.selectedProperties[0]),\n                propertiesContent: this.selectedProperties\n              }));\n\n              // Validate required fields\n              if (!(!tenantData.name || !tenantData.fin || !tenantData.passportNumber)) {\n                _context4.n = 1;\n                break;\n              }\n              alert('Please fill in all required fields (Name, FIN, Passport Number)');\n              return _context4.a(2);\n            case 1:\n              if (!(tenantData.fin.length > 20)) {\n                _context4.n = 2;\n                break;\n              }\n              alert('FIN cannot exceed 20 characters');\n              return _context4.a(2);\n            case 2:\n              if (!(tenantData.passportNumber.length < 6 || tenantData.passportNumber.length > 15)) {\n                _context4.n = 3;\n                break;\n              }\n              alert('Passport number must be between 6 and 15 characters');\n              return _context4.a(2);\n            case 3:\n              if (!(tenantData.phoneNumber && (tenantData.phoneNumber.length < 8 || tenantData.phoneNumber.length > 20))) {\n                _context4.n = 4;\n                break;\n              }\n              alert('Phone number must be between 8 and 20 characters');\n              return _context4.a(2);\n            case 4:\n              if (!(tenantData.moveoutDate && tenantData.moveinDate && new Date(tenantData.moveoutDate) <= new Date(tenantData.moveinDate))) {\n                _context4.n = 5;\n                break;\n              }\n              alert('Move-out date must be after move-in date');\n              return _context4.a(2);\n            case 5:\n              // Show loading state\n              submitBtn = event.target.querySelector('button[type=\"submit\"]');\n              originalText = submitBtn.innerHTML;\n              submitBtn.disabled = true;\n              submitBtn.innerHTML = isEdit ? '<i class=\"bi bi-hourglass-split me-1\"></i>Updating Tenant...' : '<i class=\"bi bi-hourglass-split me-1\"></i>Adding Tenant...';\n\n              // Add or update the tenant\n              if (!isEdit) {\n                _context4.n = 7;\n                break;\n              }\n              _context4.n = 6;\n              return this.updateTenant(originalFin, tenantData);\n            case 6:\n              _context4.n = 8;\n              break;\n            case 7:\n              _context4.n = 8;\n              return this.addTenant(tenantData);\n            case 8:\n              // Close modal on success\n              modal = bootstrap.Modal.getInstance(document.getElementById('tenantModal'));\n              if (modal) {\n                modal.hide();\n              }\n\n              // Ensure backdrop is removed\n              setTimeout(function () {\n                var backdrop = document.querySelector('.modal-backdrop');\n                if (backdrop) {\n                  backdrop.remove();\n                }\n                document.body.classList.remove('modal-open');\n                document.body.style.paddingRight = '';\n              }, 300);\n\n              // Reset button state\n              submitBtn.disabled = false;\n              submitBtn.innerHTML = originalText;\n              _context4.n = 10;\n              break;\n            case 9:\n              _context4.p = 9;\n              _t3 = _context4.v;\n              console.error('Error in handleTenantSubmit:', _t3);\n              _isEdit = event.target.getAttribute('data-mode') === 'edit';\n              alert(\"An error occurred while \".concat(_isEdit ? 'updating' : 'adding', \" the tenant. Please try again.\"));\n\n              // Reset button state\n              _submitBtn = event.target.querySelector('button[type=\"submit\"]');\n              if (_submitBtn) {\n                _submitBtn.disabled = false;\n                _isEdit2 = event.target.getAttribute('data-mode') === 'edit';\n                _submitBtn.innerHTML = _isEdit2 ? '<i class=\"bi bi-person-check me-1\"></i>Update Tenant' : '<i class=\"bi bi-person-plus me-1\"></i>Add Tenant';\n              }\n            case 10:\n              return _context4.a(2);\n          }\n        }, _callee4, this, [[0, 9]]);\n      }));\n      function handleTenantSubmit(_x) {\n        return _handleTenantSubmit.apply(this, arguments);\n      }\n      return handleTenantSubmit;\n    }()\n  }, {\n    key: \"getTenantDataFromUser\",\n    value: function getTenantDataFromUser() {\n      var existingTenant = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var name = prompt('Full Name:', (existingTenant === null || existingTenant === void 0 ? void 0 : existingTenant.name) || '');\n      if (!name) return null;\n      var fin = prompt('FIN (Singaporean ID):', (existingTenant === null || existingTenant === void 0 ? void 0 : existingTenant.fin) || '');\n      if (!fin) return null;\n      var passportNumber = prompt('Passport Number:', (existingTenant === null || existingTenant === void 0 ? void 0 : existingTenant.passportNumber) || '');\n      if (!passportNumber) return null;\n      var isRegistered = confirm('Is this tenant active/registered?');\n      var isMainTenant = confirm('Is this the main tenant?');\n      return {\n        name: name,\n        fin: fin.toUpperCase(),\n        passportNumber: passportNumber.toUpperCase(),\n        isRegistered: isRegistered,\n        isMainTenant: isMainTenant,\n        properties: (existingTenant === null || existingTenant === void 0 ? void 0 : existingTenant.properties) || []\n      };\n    }\n  }, {\n    key: \"addTenant\",\n    value: function () {\n      var _addTenant = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee5(tenantData) {\n        var response, result, _t4;\n        return _regenerator().w(function (_context5) {\n          while (1) switch (_context5.p = _context5.n) {\n            case 0:\n              _context5.p = 0;\n              _context5.n = 1;\n              return API.post(API_CONFIG.ENDPOINTS.TENANTS, tenantData);\n            case 1:\n              response = _context5.v;\n              _context5.n = 2;\n              return response.json();\n            case 2:\n              result = _context5.v;\n              if (!result.success) {\n                _context5.n = 4;\n                break;\n              }\n              _context5.n = 3;\n              return this.loadTenants();\n            case 3:\n              _context5.n = 5;\n              break;\n            case 4:\n              alert('Failed to add tenant: ' + result.error);\n            case 5:\n              _context5.n = 7;\n              break;\n            case 6:\n              _context5.p = 6;\n              _t4 = _context5.v;\n              console.error('Error adding tenant:', _t4);\n              alert('Error adding tenant. Please try again.');\n            case 7:\n              return _context5.a(2);\n          }\n        }, _callee5, this, [[0, 6]]);\n      }));\n      function addTenant(_x2) {\n        return _addTenant.apply(this, arguments);\n      }\n      return addTenant;\n    }()\n  }, {\n    key: \"editTenant\",\n    value: function () {\n      var _editTenant = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee6(fin) {\n        var tenant;\n        return _regenerator().w(function (_context6) {\n          while (1) switch (_context6.n) {\n            case 0:\n              // Find the tenant to edit\n              tenant = this.tenants.find(function (t) {\n                return t.fin === fin;\n              });\n              if (tenant) {\n                _context6.n = 1;\n                break;\n              }\n              alert('Tenant not found');\n              return _context6.a(2);\n            case 1:\n              // Show the modal with tenant data\n              this.showTenantModal(tenant);\n            case 2:\n              return _context6.a(2);\n          }\n        }, _callee6, this);\n      }));\n      function editTenant(_x3) {\n        return _editTenant.apply(this, arguments);\n      }\n      return editTenant;\n    }()\n  }, {\n    key: \"updateTenant\",\n    value: function () {\n      var _updateTenant = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee7(originalFin, tenantData) {\n        var tenant, response, result, _t5;\n        return _regenerator().w(function (_context7) {\n          while (1) switch (_context7.p = _context7.n) {\n            case 0:\n              _context7.p = 0;\n              // Find the tenant to get the ID\n              tenant = this.tenants.find(function (t) {\n                return t.fin === originalFin;\n              });\n              if (!(!tenant || !tenant._id)) {\n                _context7.n = 1;\n                break;\n              }\n              throw new Error('Tenant ID not found');\n            case 1:\n              _context7.n = 2;\n              return API.put(API_CONFIG.ENDPOINTS.TENANT_BY_ID(tenant._id), tenantData);\n            case 2:\n              response = _context7.v;\n              _context7.n = 3;\n              return response.json();\n            case 3:\n              result = _context7.v;\n              if (!result.success) {\n                _context7.n = 5;\n                break;\n              }\n              _context7.n = 4;\n              return this.loadTenants();\n            case 4:\n              _context7.n = 6;\n              break;\n            case 5:\n              alert('Failed to update tenant: ' + result.error);\n            case 6:\n              _context7.n = 8;\n              break;\n            case 7:\n              _context7.p = 7;\n              _t5 = _context7.v;\n              console.error('Error updating tenant:', _t5);\n              alert('Error updating tenant: ' + _t5.message);\n              throw _t5;\n            case 8:\n              return _context7.a(2);\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n      function updateTenant(_x4, _x5) {\n        return _updateTenant.apply(this, arguments);\n      }\n      return updateTenant;\n    }()\n  }, {\n    key: \"deleteTenant\",\n    value: function () {\n      var _deleteTenant = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee8(fin) {\n        var tenant, response, result, _t6;\n        return _regenerator().w(function (_context8) {\n          while (1) switch (_context8.p = _context8.n) {\n            case 0:\n              if (confirm(\"Are you sure you want to delete tenant \".concat(fin, \"?\"))) {\n                _context8.n = 1;\n                break;\n              }\n              return _context8.a(2);\n            case 1:\n              _context8.p = 1;\n              // Find the tenant to get the ID\n              tenant = this.tenants.find(function (t) {\n                return t.fin === fin;\n              });\n              if (!(!tenant || !tenant._id)) {\n                _context8.n = 2;\n                break;\n              }\n              throw new Error('Tenant ID not found');\n            case 2:\n              _context8.n = 3;\n              return API[\"delete\"](API_CONFIG.ENDPOINTS.TENANT_BY_ID(tenant._id));\n            case 3:\n              response = _context8.v;\n              _context8.n = 4;\n              return response.json();\n            case 4:\n              result = _context8.v;\n              if (!result.success) {\n                _context8.n = 6;\n                break;\n              }\n              _context8.n = 5;\n              return this.loadTenants();\n            case 5:\n              _context8.n = 7;\n              break;\n            case 6:\n              alert('Failed to delete tenant: ' + result.error);\n            case 7:\n              _context8.n = 9;\n              break;\n            case 8:\n              _context8.p = 8;\n              _t6 = _context8.v;\n              console.error('Error deleting tenant:', _t6);\n              alert('Error deleting tenant. Please try again.');\n            case 9:\n              return _context8.a(2);\n          }\n        }, _callee8, this, [[1, 8]]);\n      }));\n      function deleteTenant(_x6) {\n        return _deleteTenant.apply(this, arguments);\n      }\n      return deleteTenant;\n    }() // Method to assign tenant to property\n  }, {\n    key: \"assignToProperty\",\n    value: function () {\n      var _assignToProperty = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee9(fin, propertyId) {\n        var response, result, _t7;\n        return _regenerator().w(function (_context9) {\n          while (1) switch (_context9.p = _context9.n) {\n            case 0:\n              _context9.p = 0;\n              _context9.n = 1;\n              return API.post(API_CONFIG.ENDPOINTS.TENANT_ADD_PROPERTY(fin), {\n                propertyId: propertyId\n              });\n            case 1:\n              response = _context9.v;\n              _context9.n = 2;\n              return response.json();\n            case 2:\n              result = _context9.v;\n              if (!result.success) {\n                _context9.n = 4;\n                break;\n              }\n              _context9.n = 3;\n              return this.loadTenants();\n            case 3:\n              _context9.n = 5;\n              break;\n            case 4:\n              alert('Failed to assign tenant to property: ' + result.error);\n            case 5:\n              _context9.n = 7;\n              break;\n            case 6:\n              _context9.p = 6;\n              _t7 = _context9.v;\n              console.error('Error assigning tenant to property:', _t7);\n              alert('Error assigning tenant to property. Please try again.');\n            case 7:\n              return _context9.a(2);\n          }\n        }, _callee9, this, [[0, 6]]);\n      }));\n      function assignToProperty(_x7, _x8) {\n        return _assignToProperty.apply(this, arguments);\n      }\n      return assignToProperty;\n    }() // Utility method to escape HTML to prevent XSS\n  }, {\n    key: \"escapeHtml\",\n    value: function escapeHtml(text) {\n      var map = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#039;'\n      };\n      return text.replace(/[&<>\"']/g, function (m) {\n        return map[m];\n      });\n    }\n\n    // Public method to refresh the tenants list\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      this.loadTenants();\n    }\n\n    // Multiple image upload methods\n  }, {\n    key: \"openImageUpload\",\n    value: function openImageUpload(type) {\n      var _this6 = this;\n      this.currentUploadType = type;\n      var fileInput = document.getElementById('imageUploadInput');\n      fileInput.click();\n\n      // Add event listener for file selection (supports multiple files)\n      fileInput.onchange = function (e) {\n        if (e.target.files.length > 0) {\n          _this6.uploadMultipleImages(Array.from(e.target.files), type);\n        }\n      };\n    }\n  }, {\n    key: \"uploadMultipleImages\",\n    value: function () {\n      var _uploadMultipleImages = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee0(files, type) {\n        var _this7 = this;\n        var uploadButton, originalText, uploadPromises, results, imageArray, successCount, _t8;\n        return _regenerator().w(function (_context0) {\n          while (1) switch (_context0.p = _context0.n) {\n            case 0:\n              uploadButton = document.querySelector(\"button[onclick=\\\"tenantManager.openImageUpload('\".concat(type, \"')\\\"]\"));\n              originalText = uploadButton.innerHTML;\n              _context0.p = 1;\n              // Show loading state\n              uploadButton.disabled = true;\n              uploadButton.innerHTML = \"<i class=\\\"bi bi-hourglass-split\\\"></i> Uploading \".concat(files.length, \" image(s)...\");\n              uploadPromises = files.map(function (file) {\n                return _this7.uploadSingleImage(file);\n              });\n              _context0.n = 2;\n              return Promise.all(uploadPromises);\n            case 2:\n              results = _context0.v;\n              // Add successful uploads to the image array\n              imageArray = type === 'passport' ? this.passportPics : this.visaPics;\n              results.forEach(function (result) {\n                if (result.success) {\n                  console.log('🔗 Received image URL from upload:', result.url);\n                  console.log('🔧 Original URL from backend:', result.originalUrl);\n                  console.log('🔧 Public ID from backend:', result.publicId);\n\n                  // Ensure URL is properly formatted\n                  var imageUrl = result.url;\n                  if (imageUrl && !imageUrl.startsWith('http')) {\n                    imageUrl = 'https://' + imageUrl;\n                  }\n                  console.log('🔗 Final image URL to store:', imageUrl);\n                  imageArray.push(imageUrl);\n                }\n              });\n\n              // Update gallery display\n              this.updateImageGallery(type);\n              successCount = results.filter(function (r) {\n                return r.success;\n              }).length;\n              console.log(\"\\u2705 \".concat(successCount, \"/\").concat(files.length, \" \").concat(type, \" images uploaded successfully\"));\n              if (successCount < files.length) {\n                alert(\"\".concat(successCount, \"/\").concat(files.length, \" images uploaded successfully. Some uploads failed.\"));\n              }\n              _context0.n = 4;\n              break;\n            case 3:\n              _context0.p = 3;\n              _t8 = _context0.v;\n              console.error(\"Error uploading \".concat(type, \" images:\"), _t8);\n              alert(\"Error uploading \".concat(type, \" images. Please try again.\"));\n            case 4:\n              _context0.p = 4;\n              // Restore button state\n              uploadButton.disabled = false;\n              uploadButton.innerHTML = originalText;\n              return _context0.f(4);\n            case 5:\n              return _context0.a(2);\n          }\n        }, _callee0, this, [[1, 3, 4, 5]]);\n      }));\n      function uploadMultipleImages(_x9, _x0) {\n        return _uploadMultipleImages.apply(this, arguments);\n      }\n      return uploadMultipleImages;\n    }()\n  }, {\n    key: \"uploadSingleImage\",\n    value: function () {\n      var _uploadSingleImage = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee1(file) {\n        var formData, uploadUrl, response, _t9;\n        return _regenerator().w(function (_context1) {\n          while (1) switch (_context1.p = _context1.n) {\n            case 0:\n              _context1.p = 0;\n              formData = new FormData();\n              formData.append('image', file);\n              uploadUrl = buildApiUrl(API_CONFIG.ENDPOINTS.UPLOAD_TENANT_DOCUMENT);\n              console.log('🔧 Upload URL:', uploadUrl);\n              console.log('🔧 Base URL:', API_CONFIG.BASE_URL);\n              _context1.n = 1;\n              return fetch(uploadUrl, {\n                method: 'POST',\n                headers: {\n                  'Authorization': \"Bearer \".concat(getAuthToken())\n                },\n                body: formData\n              });\n            case 1:\n              response = _context1.v;\n              _context1.n = 2;\n              return response.json();\n            case 2:\n              return _context1.a(2, _context1.v);\n            case 3:\n              _context1.p = 3;\n              _t9 = _context1.v;\n              return _context1.a(2, {\n                success: false,\n                error: _t9.message\n              });\n          }\n        }, _callee1, null, [[0, 3]]);\n      }));\n      function uploadSingleImage(_x1) {\n        return _uploadSingleImage.apply(this, arguments);\n      }\n      return uploadSingleImage;\n    }()\n  }, {\n    key: \"addImageFromUrl\",\n    value: function addImageFromUrl(type) {\n      var urlInput = document.getElementById(\"tenant\".concat(type.charAt(0).toUpperCase() + type.slice(1), \"PicUrl\"));\n      var url = urlInput.value.trim();\n      if (!url) {\n        alert('Please enter a valid image URL');\n        return;\n      }\n\n      // Add to appropriate array\n      var imageArray = type === 'passport' ? this.passportPics : this.visaPics;\n      if (!imageArray.includes(url)) {\n        imageArray.push(url);\n        this.updateImageGallery(type);\n        urlInput.value = ''; // Clear input after adding\n      } else {\n        alert('This image URL is already added');\n      }\n    }\n  }, {\n    key: \"removeImage\",\n    value: function removeImage(type, index) {\n      var imageArray = type === 'passport' ? this.passportPics : this.visaPics;\n      imageArray.splice(index, 1);\n      this.updateImageGallery(type);\n    }\n  }, {\n    key: \"handleImageError\",\n    value: function handleImageError(imgElement, proxyUrl, type, index) {\n      console.error('❌ Image failed to load via proxy:', proxyUrl);\n      console.error('Image element:', imgElement);\n      console.error('Current src attribute:', imgElement.src);\n      console.error('Has fallback been attempted?', imgElement.hasAttribute('data-fallback-attempted'));\n\n      // Try to extract Cloudinary path from proxy URL and create direct Cloudinary URL\n      try {\n        // Extract the path after image-proxy/\n        var match = proxyUrl.match(/image-proxy\\/(.+)$/);\n        if (match) {\n          var cloudinaryPath = match[1];\n          var directUrl = \"https://res.cloudinary.com/djye0w3gi/image/upload/\".concat(cloudinaryPath);\n          console.log('🔄 Trying direct Cloudinary URL as fallback:', directUrl);\n\n          // Set a flag to prevent infinite recursion\n          if (!imgElement.hasAttribute('data-fallback-attempted')) {\n            imgElement.setAttribute('data-fallback-attempted', 'true');\n            imgElement.src = directUrl;\n\n            // Test if the direct URL is accessible by making a fetch request\n            fetch(directUrl, {\n              method: 'HEAD'\n            }).then(function (response) {\n              console.log('🧪 Direct URL test result:', response.status, response.statusText);\n              if (!response.ok) {\n                console.error('🚨 Direct URL also failed:', response.status);\n              }\n            })[\"catch\"](function (err) {\n              console.error('🚨 Direct URL fetch test failed:', err);\n            });\n            return;\n          }\n        }\n      } catch (error) {\n        console.error('Error creating fallback URL:', error);\n      }\n\n      // Final fallback: show error placeholder\n      console.log('🚨 All fallback attempts failed, showing error placeholder');\n      imgElement.style.objectFit = 'cover';\n      imgElement.style.backgroundColor = '#e9ecef';\n      imgElement.src = \"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='150' height='150' viewBox='0 0 150 150'><rect width='150' height='150' fill='%23e9ecef'/><text x='75' y='75' text-anchor='middle' dy='.3em' fill='%236c757d'>Image Failed</text></svg>\";\n    }\n  }, {\n    key: \"updateImageGallery\",\n    value: function updateImageGallery(type) {\n      var gallery = document.getElementById(\"\".concat(type, \"Gallery\"));\n      var imageArray = type === 'passport' ? this.passportPics : this.visaPics;\n      var hiddenInput = document.getElementById(\"tenant\".concat(type.charAt(0).toUpperCase() + type.slice(1), \"Pics\"));\n\n      // Update hidden input\n      hiddenInput.value = JSON.stringify(imageArray);\n      console.log(\"\\uD83D\\uDDBC\\uFE0F Updating \".concat(type, \" gallery with \").concat(imageArray.length, \" images:\"), imageArray);\n      if (imageArray.length === 0) {\n        gallery.innerHTML = '<div class=\"text-muted small\">No images uploaded yet</div>';\n        return;\n      }\n\n      // Create images with proper loading handling\n      var html = '<div class=\"row g-2\">';\n      imageArray.forEach(function (url, index) {\n        var icon = type === 'passport' ? 'bi-passport' : 'bi-credit-card';\n        html += \"\\n                <div class=\\\"col-6 col-md-4 mb-3\\\">\\n                    <div class=\\\"position-relative border rounded overflow-hidden\\\">\\n                        <img src=\\\"\".concat(url, \"\\\" alt=\\\"\").concat(type, \" \").concat(index + 1, \"\\\" \\n                             class=\\\"img-fluid w-100\\\" \\n                             style=\\\"height: 150px; object-fit: contain; cursor: pointer; background-color: #f8f9fa;\\\"\\n                             onclick=\\\"window.open('\").concat(url, \"', '_blank')\\\"\\n                             onload=\\\"console.log('\\u2705 Image loaded successfully:', '\").concat(url, \"'); console.log('Image natural dimensions:', this.naturalWidth + 'x' + this.naturalHeight); console.log('Image complete:', this.complete); this.style.backgroundColor='#f8f9fa'; this.style.objectFit='contain';\\\"\\n                             onerror=\\\"console.error('\\u274C Image load error for:', '\").concat(url, \"'); this.style.objectFit='cover'; this.style.backgroundColor='#e9ecef'; this.src='data:image/svg+xml,<svg xmlns=\\\\'http://www.w3.org/2000/svg\\\\' width=\\\\'150\\\\' height=\\\\'150\\\\' viewBox=\\\\'0 0 150 150\\\\'><rect width=\\\\'150\\\\' height=\\\\'150\\\\' fill=\\\\'%23e9ecef\\\\'/><text x=\\\\'75\\\\' y=\\\\'75\\\\' text-anchor=\\\\'middle\\\\' dy=\\\\'.3em\\\\' fill=\\\\'%236c757d\\\\'>Loading...</text></svg>';\\\"\\n                        <button type=\\\"button\\\" \\n                                class=\\\"btn btn-danger position-absolute top-0 end-0 m-1\\\"\\n                                onclick=\\\"tenantManager.removeImage('\").concat(type, \"', \").concat(index, \")\\\"\\n                                style=\\\"padding: 6px 10px; font-size: 0.8rem; opacity: 0.9; border-radius: 50%; width: 32px; height: 32px; display: flex; align-items: center; justify-content: center; box-shadow: 0 2px 4px rgba(0,0,0,0.2);\\\"\\n                                onmouseover=\\\"this.style.opacity='1'; this.style.transform='scale(1.1)'\\\"\\n                                onmouseout=\\\"this.style.opacity='0.9'; this.style.transform='scale(1)'\\\"\\n                                title=\\\"Delete image\\\">\\n                            <i class=\\\"bi bi-trash-fill\\\"></i>\\n                        </button>\\n                        <div class=\\\"position-absolute bottom-0 start-0 end-0 bg-primary bg-opacity-90 text-white text-center py-2\\\">\\n                            <small><i class=\\\"bi \").concat(icon, \" me-1\\\"></i>\").concat(type.charAt(0).toUpperCase() + type.slice(1), \" \").concat(index + 1, \"</small>\\n                        </div>\\n                    </div>\\n                </div>\\n            \");\n      });\n      html += '</div>';\n      gallery.innerHTML = html;\n    }\n  }, {\n    key: \"setupImageUrlListeners\",\n    value: function setupImageUrlListeners() {\n      // These are no longer needed with the new multiple image approach\n      // The URL inputs now have dedicated \"Add\" buttons\n    }\n  }]);\n}(); // Export for use in other modules\nwindow.TenantManagementComponent = TenantManagementComponent;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/components/tenant-management.js?\n}");

/***/ }),

/***/ "./src/js/components/toast/toast.js":
/*!******************************************!*\
  !*** ./src/js/components/toast/toast.js ***!
  \******************************************/
/***/ (() => {

eval("{function showToast(message) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"success\";\n  // Create toast container if it doesn't exist\n  var toastContainer = document.getElementById(\"toast-container\");\n  if (!toastContainer) {\n    toastContainer = document.createElement(\"div\");\n    toastContainer.id = \"toast-container\";\n    toastContainer.className = \"position-fixed top-0 end-0 p-3\";\n    toastContainer.style.zIndex = \"9999\";\n    document.body.appendChild(toastContainer);\n  }\n\n  // Create toast element\n  var toastId = \"toast-\".concat(Date.now());\n  var iconMap = {\n    success: \"check-circle-fill\",\n    error: \"exclamation-triangle-fill\",\n    info: \"info-circle-fill\"\n  };\n  var bgMap = {\n    success: \"bg-success\",\n    error: \"bg-danger\",\n    info: \"bg-info\"\n  };\n  var toastHtml = \"\\n            <div id=\\\"\".concat(toastId, \"\\\" class=\\\"toast align-items-center text-white \").concat(bgMap[type], \" border-0\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\">\\n                <div class=\\\"d-flex\\\">\\n                    <div class=\\\"toast-body d-flex align-items-center\\\">\\n                        <i class=\\\"bi bi-\").concat(iconMap[type], \" me-2\\\"></i>\\n                        \").concat(escapeHtml(message), \"\\n                    </div>\\n                    <button type=\\\"button\\\" class=\\\"btn-close btn-close-white me-2 m-auto\\\" data-bs-dismiss=\\\"toast\\\" aria-label=\\\"Close\\\"></button>\\n                </div>\\n            </div>\\n        \");\n\n  // Add toast to container\n  toastContainer.insertAdjacentHTML(\"beforeend\", toastHtml);\n\n  // Initialize and show toast\n  var toastElement = document.getElementById(toastId);\n  var toast = new bootstrap.Toast(toastElement, {\n    delay: 3000\n  });\n\n  // Clean up toast after it's hidden\n  toastElement.addEventListener(\"hidden.bs.toast\", function () {\n    toastElement.remove();\n  });\n  toast.show();\n}\n\n// Utility methods\nfunction escapeHtml(text) {\n  var div = document.createElement(\"div\");\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n// Make functions available globally\nwindow.showToast = showToast;\nwindow.escapeHtml = escapeHtml;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/components/toast/toast.js?\n}");

/***/ }),

/***/ "./src/js/config.js":
/*!**************************!*\
  !*** ./src/js/config.js ***!
  \**************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// API Configuration\nvar API_CONFIG = {\n  // Backend API base URL - Update these URLs to point to your backend\n  BASE_URL: window.location.hostname === \"localhost\" ? \"\" // Local development - use webpack dev server proxy\n  : \"https://rental-management-backend-mocha.vercel.app\",\n  // Production backend URL - Vercel deployment\n\n  // API endpoints\n  ENDPOINTS: {\n    // Authentication\n    LOGIN: \"/api/auth/login\",\n    LOGOUT: \"/api/auth/logout\",\n    STATUS: \"/api/auth/status\",\n    ME: \"/api/auth/me\",\n    // Properties\n    PROPERTIES: \"/api/properties\",\n    PROPERTY_BY_ID: function PROPERTY_BY_ID(id) {\n      return \"/api/properties/\".concat(id);\n    },\n    PROPERTY_TENANTS: function PROPERTY_TENANTS(id) {\n      return \"/api/properties/\".concat(id, \"/tenants\");\n    },\n    PROPERTY_STATS: \"/api/properties/stats/summary\",\n    // Tenants\n    TENANTS: \"/api/tenants\",\n    TENANT_BY_ID: function TENANT_BY_ID(id) {\n      return \"/api/tenants/\".concat(id);\n    },\n    TENANT_BY_FIN: function TENANT_BY_FIN(fin) {\n      return \"/api/tenants/fin/\".concat(fin);\n    },\n    TENANT_STATS: \"/api/tenants/stats/summary\",\n    TENANT_ADD_PROPERTY: function TENANT_ADD_PROPERTY(id) {\n      return \"/api/tenants/\".concat(id, \"/properties\");\n    },\n    TENANT_REMOVE_PROPERTY: function TENANT_REMOVE_PROPERTY(id, propertyId) {\n      return \"/api/tenants/\".concat(id, \"/properties/\").concat(propertyId);\n    },\n    // File Upload\n    UPLOAD: \"/api/upload\",\n    UPLOAD_MULTIPLE: \"/api/upload/multiple\",\n    UPLOAD_TENANT_DOCUMENT: \"/api/upload/tenant-document\",\n    // Analytics\n    DASHBOARD_ANALYTICS: \"/api/analysis/dashboard\",\n    PROPERTY_PERFORMANCE: \"/api/analysis/property-performance\",\n    TENANT_INSIGHTS: \"/api/analysis/tenant-insights\",\n    // Investors\n    INVESTORS: \"/api/investors\",\n    INVESTOR_BY_ID: function INVESTOR_BY_ID(id) {\n      return \"/api/investors/\".concat(id);\n    },\n    INVESTORS_BY_PROPERTY: function INVESTORS_BY_PROPERTY(propertyId) {\n      return \"/api/investors/property/\".concat(propertyId);\n    },\n    INVESTOR_ADD_PROPERTY: function INVESTOR_ADD_PROPERTY(investorId) {\n      return \"/api/investors/\".concat(investorId, \"/properties\");\n    },\n    INVESTOR_REMOVE_PROPERTY: function INVESTOR_REMOVE_PROPERTY(investorId, propertyId) {\n      return \"/api/investors/\".concat(investorId, \"/properties/\").concat(propertyId);\n    },\n    // Financial Reports\n    FINANCIAL_REPORTS_BY_PROPERTY: function FINANCIAL_REPORTS_BY_PROPERTY(propertyId) {\n      return \"/api/financial-reports/property/\".concat(propertyId);\n    },\n    FINANCIAL_REPORT: function FINANCIAL_REPORT(propertyId, year, month) {\n      return \"/api/financial-reports/property/\".concat(propertyId, \"/\").concat(year, \"/\").concat(month);\n    },\n    FINANCIAL_REPORT_INCOME: function FINANCIAL_REPORT_INCOME(propertyId, year, month) {\n      return \"/api/financial-reports/property/\".concat(propertyId, \"/\").concat(year, \"/\").concat(month, \"/income\");\n    },\n    FINANCIAL_REPORT_EXPENSES: function FINANCIAL_REPORT_EXPENSES(propertyId, year, month) {\n      return \"/api/financial-reports/property/\".concat(propertyId, \"/\").concat(year, \"/\").concat(month, \"/expenses\");\n    },\n    // Health Check\n    HEALTH: \"/health\"\n  }\n};\n\n// Helper function to build full API URL\nvar buildApiUrl = function buildApiUrl(endpoint) {\n  return \"\".concat(API_CONFIG.BASE_URL).concat(endpoint);\n};\n\n// Default fetch options with credentials for cookies and auth token\nvar defaultFetchOptions = {\n  credentials: \"include\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n};\n\n// Function to get auth token from storage (checks both localStorage and sessionStorage)\nvar getAuthToken = function getAuthToken() {\n  // First check localStorage (persistent storage)\n  var token = localStorage.getItem('authToken');\n\n  // Check if localStorage token is expired\n  if (token) {\n    var expiration = localStorage.getItem('authExpiration');\n    if (expiration && Date.now() > parseInt(expiration)) {\n      // Token expired, clear it\n      clearAuth();\n      token = null;\n    }\n  }\n\n  // If no persistent token, check sessionStorage (temporary storage)\n  if (!token) {\n    token = sessionStorage.getItem('authToken');\n  }\n  return token;\n};\n\n// Function to get auth headers including token\nvar getAuthHeaders = function getAuthHeaders() {\n  var headers = {\n    \"Content-Type\": \"application/json\"\n  };\n  var token = getAuthToken();\n  if (token) {\n    headers['Authorization'] = \"Bearer \".concat(token);\n  }\n  return headers;\n};\n\n// API helper functions\nvar API = {\n  get: function () {\n    var _get = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee(endpoint) {\n      var options,\n        response,\n        _args = arguments;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            _context.n = 1;\n            return fetch(buildApiUrl(endpoint), _objectSpread({\n              method: \"GET\",\n              credentials: \"include\",\n              headers: _objectSpread(_objectSpread({}, getAuthHeaders()), options.headers || {})\n            }, options));\n          case 1:\n            response = _context.v;\n            return _context.a(2, response);\n        }\n      }, _callee);\n    }));\n    function get(_x) {\n      return _get.apply(this, arguments);\n    }\n    return get;\n  }(),\n  post: function () {\n    var _post = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2(endpoint) {\n      var data,\n        options,\n        response,\n        _args2 = arguments;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            data = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : null;\n            options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n            _context2.n = 1;\n            return fetch(buildApiUrl(endpoint), _objectSpread({\n              method: \"POST\",\n              credentials: \"include\",\n              headers: _objectSpread(_objectSpread({}, getAuthHeaders()), options.headers || {}),\n              body: data ? JSON.stringify(data) : null\n            }, options));\n          case 1:\n            response = _context2.v;\n            return _context2.a(2, response);\n        }\n      }, _callee2);\n    }));\n    function post(_x2) {\n      return _post.apply(this, arguments);\n    }\n    return post;\n  }(),\n  put: function () {\n    var _put = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3(endpoint) {\n      var data,\n        options,\n        response,\n        _args3 = arguments;\n      return _regenerator().w(function (_context3) {\n        while (1) switch (_context3.n) {\n          case 0:\n            data = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : null;\n            options = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n            _context3.n = 1;\n            return fetch(buildApiUrl(endpoint), _objectSpread({\n              method: \"PUT\",\n              credentials: \"include\",\n              headers: _objectSpread(_objectSpread({}, getAuthHeaders()), options.headers || {}),\n              body: data ? JSON.stringify(data) : null\n            }, options));\n          case 1:\n            response = _context3.v;\n            return _context3.a(2, response);\n        }\n      }, _callee3);\n    }));\n    function put(_x3) {\n      return _put.apply(this, arguments);\n    }\n    return put;\n  }(),\n  \"delete\": function () {\n    var _delete2 = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4(endpoint) {\n      var options,\n        response,\n        _args4 = arguments;\n      return _regenerator().w(function (_context4) {\n        while (1) switch (_context4.n) {\n          case 0:\n            options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n            _context4.n = 1;\n            return fetch(buildApiUrl(endpoint), _objectSpread({\n              method: \"DELETE\",\n              credentials: \"include\",\n              headers: _objectSpread(_objectSpread({}, getAuthHeaders()), options.headers || {})\n            }, options));\n          case 1:\n            response = _context4.v;\n            return _context4.a(2, response);\n        }\n      }, _callee4);\n    }));\n    function _delete(_x4) {\n      return _delete2.apply(this, arguments);\n    }\n    return _delete;\n  }()\n};\n\n// Helper function to clear authentication\nvar clearAuth = function clearAuth() {\n  // Clear localStorage\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('user');\n  localStorage.removeItem('rememberMe');\n  localStorage.removeItem('loginTime');\n  localStorage.removeItem('authExpiration');\n\n  // Clear sessionStorage\n  sessionStorage.removeItem('authToken');\n  sessionStorage.removeItem('user');\n  sessionStorage.removeItem('rememberMe');\n};\n\n// Export for use in other files\nwindow.API_CONFIG = API_CONFIG;\nwindow.buildApiUrl = buildApiUrl;\nwindow.API = API;\nwindow.getAuthToken = getAuthToken;\nwindow.getAuthHeaders = getAuthHeaders;\nwindow.clearAuth = clearAuth;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/config.js?\n}");

/***/ }),

/***/ "./src/js/dashboard-controller.js":
/*!****************************************!*\
  !*** ./src/js/dashboard-controller.js ***!
  \****************************************/
/***/ (() => {

eval("{function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regenerator() { /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = \"function\" == typeof Symbol ? Symbol : {}, n = r.iterator || \"@@iterator\", o = r.toStringTag || \"@@toStringTag\"; function i(r, n, o, i) { var c = n && n.prototype instanceof Generator ? n : Generator, u = Object.create(c.prototype); return _regeneratorDefine2(u, \"_invoke\", function (r, n, o) { var i, c, u, f = 0, p = o || [], y = !1, G = { p: 0, n: 0, v: e, a: d, f: d.bind(e, 4), d: function d(t, r) { return i = t, c = 0, u = e, G.n = r, a; } }; function d(r, n) { for (c = r, u = n, t = 0; !y && f && !o && t < p.length; t++) { var o, i = p[t], d = G.p, l = i[2]; r > 3 ? (o = l === n) && (u = i[(c = i[4]) ? 5 : (c = 3, 3)], i[4] = i[5] = e) : i[0] <= d && ((o = r < 2 && d < i[1]) ? (c = 0, G.v = n, G.n = i[1]) : d < l && (o = r < 3 || i[0] > n || n > l) && (i[4] = r, i[5] = n, G.n = l, c = 0)); } if (o || r > 1) return a; throw y = !0, n; } return function (o, p, l) { if (f > 1) throw TypeError(\"Generator is already running\"); for (y && 1 === p && d(p, l), c = p, u = l; (t = c < 2 ? e : u) || !y;) { i || (c ? c < 3 ? (c > 1 && (G.n = -1), d(c, u)) : G.n = u : G.v = u); try { if (f = 2, i) { if (c || (o = \"next\"), t = i[o]) { if (!(t = t.call(i, u))) throw TypeError(\"iterator result is not an object\"); if (!t.done) return t; u = t.value, c < 2 && (c = 0); } else 1 === c && (t = i[\"return\"]) && t.call(i), c < 2 && (u = TypeError(\"The iterator does not provide a '\" + o + \"' method\"), c = 1); i = e; } else if ((t = (y = G.n < 0) ? u : r.call(n, G)) !== a) break; } catch (t) { i = e, c = 1, u = t; } finally { f = 1; } } return { value: t, done: y }; }; }(r, o, i), !0), u; } var a = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} t = Object.getPrototypeOf; var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function () { return this; }), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c); function f(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e, o, \"GeneratorFunction\")), e.prototype = Object.create(u), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, \"constructor\", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = \"GeneratorFunction\", _regeneratorDefine2(GeneratorFunctionPrototype, o, \"GeneratorFunction\"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, \"Generator\"), _regeneratorDefine2(u, n, function () { return this; }), _regeneratorDefine2(u, \"toString\", function () { return \"[object Generator]\"; }), (_regenerator = function _regenerator() { return { w: i, m: f }; })(); }\nfunction _regeneratorDefine2(e, r, n, t) { var i = Object.defineProperty; try { i({}, \"\", {}); } catch (e) { i = 0; } _regeneratorDefine2 = function _regeneratorDefine(e, r, n, t) { function o(r, n) { _regeneratorDefine2(e, r, function (e) { return this._invoke(r, n, e); }); } r ? i ? i(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }) : e[r] = n : (o(\"next\", 0), o(\"throw\", 1), o(\"return\", 2)); }, _regeneratorDefine2(e, r, n, t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/**\n * Dashboard Controller\n * Main controller that manages the dashboard sections and components\n */\nvar DashboardController = /*#__PURE__*/function () {\n  function DashboardController() {\n    _classCallCheck(this, DashboardController);\n    this.components = {};\n    this.currentSection = \"dashboard\";\n    this.init();\n  }\n  return _createClass(DashboardController, [{\n    key: \"init\",\n    value: function init() {\n      this.updateCurrentDate();\n      this.setupNavigation();\n      this.setupFeatureCards();\n      this.loadUserInfo();\n      this.loadDashboardStats();\n\n      // Initialize components when their sections are first accessed\n      this.initializeComponentsLazily();\n    }\n  }, {\n    key: \"updateCurrentDate\",\n    value: function updateCurrentDate() {\n      var now = new Date();\n      var currentDateEl = document.getElementById(\"currentDate\");\n      if (currentDateEl) {\n        currentDateEl.textContent = now.toLocaleDateString(\"en-US\", {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\"\n        });\n      }\n    }\n  }, {\n    key: \"setupNavigation\",\n    value: function setupNavigation() {\n      var _this = this;\n      document.querySelectorAll(\".nav-link\").forEach(function (link) {\n        link.addEventListener(\"click\", function (e) {\n          e.preventDefault();\n          var section = link.getAttribute(\"data-section\");\n          if (section) {\n            _this.showSection(section);\n\n            // Update active nav link\n            document.querySelectorAll(\".nav-link\").forEach(function (l) {\n              return l.classList.remove(\"active\");\n            });\n            link.classList.add(\"active\");\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setupFeatureCards\",\n    value: function setupFeatureCards() {\n      var _this2 = this;\n      // Add click handlers for feature cards using event delegation\n      document.addEventListener(\"click\", function (e) {\n        var featureCard = e.target.closest(\"[data-section]\");\n        if (featureCard && featureCard.classList.contains(\"feature-card\")) {\n          var section = featureCard.getAttribute(\"data-section\");\n          _this2.showSection(section);\n        }\n      });\n    }\n  }, {\n    key: \"showSection\",\n    value: function showSection(sectionName) {\n      // Hide all sections\n      document.querySelectorAll(\".content-section\").forEach(function (section) {\n        section.style.display = \"none\";\n      });\n\n      // Show target section\n      var targetSectionId = sectionName + \"-section\";\n      var targetSection = document.getElementById(targetSectionId);\n      if (targetSection) {\n        targetSection.style.display = \"block\";\n        this.currentSection = sectionName;\n\n        // Initialize component for this section if not already done\n        this.initializeComponentForSection(sectionName);\n      }\n\n      // Update active nav link\n      document.querySelectorAll(\".nav-link\").forEach(function (l) {\n        return l.classList.remove(\"active\");\n      });\n      var navLink = document.querySelector(\".nav-link[data-section=\\\"\".concat(sectionName, \"\\\"]\"));\n      if (navLink) {\n        navLink.classList.add(\"active\");\n      }\n    }\n  }, {\n    key: \"initializeComponentsLazily\",\n    value: function initializeComponentsLazily() {\n      // Components will be initialized when their sections are first shown\n      // This improves initial page load performance\n    }\n  }, {\n    key: \"initializeComponentForSection\",\n    value: function initializeComponentForSection(sectionName) {\n      // Initialize component if not already initialized\n      switch (sectionName) {\n        case \"analysis\":\n          if (!this.components.contractAnalysis) {\n            this.components.contractAnalysis = new ContractAnalysisComponent();\n          }\n          break;\n        case \"properties\":\n          if (!this.components.propertyManagement) {\n            this.components.propertyManagement = new PropertyManagementComponent();\n            // Make it globally accessible for button onclick handlers\n            window.propertyManager = this.components.propertyManagement;\n          }\n          break;\n        case \"tenants\":\n          if (!this.components.tenantManagement) {\n            this.components.tenantManagement = new TenantManagementComponent();\n            // Make it globally accessible for button onclick handlers\n            window.tenantManager = this.components.tenantManagement;\n          }\n          break;\n        case \"financial\":\n          if (!this.components.financialReports) {\n            this.components.financialReports = new FinancialReportsComponent();\n            // Make it globally accessible for button onclick handlers\n            window.financialReports = this.components.financialReports;\n          }\n          break;\n        case \"investors\":\n          if (!this.components.investorManagement) {\n            this.components.investorManagement = new InvestorManagementComponent();\n            // Make it globally accessible for button onclick handlers\n            window.investorManager = this.components.investorManagement;\n          }\n          break;\n      }\n    }\n  }, {\n    key: \"loadUserInfo\",\n    value: function () {\n      var _loadUserInfo = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var userInfoEl;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              // Placeholder - would load from session/API\n              userInfoEl = document.getElementById(\"userInfo\");\n              if (userInfoEl) {\n                userInfoEl.textContent = \"Admin User\";\n              }\n            case 1:\n              return _context.a(2);\n          }\n        }, _callee);\n      }));\n      function loadUserInfo() {\n        return _loadUserInfo.apply(this, arguments);\n      }\n      return loadUserInfo;\n    }()\n  }, {\n    key: \"loadDashboardStats\",\n    value: function () {\n      var _loadDashboardStats = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n        var propertiesResponse, propertiesResult, propertiesCountEl, tenantsResponse, tenantsResult, stats, totalTenants, registeredCount, tenantsWithProperties, tenantsCountEl, registeredTenantsEl, occupiedPropertiesEl, contractsCountEl, issuesCountEl, cleanCountEl, _t;\n        return _regenerator().w(function (_context2) {\n          while (1) switch (_context2.p = _context2.n) {\n            case 0:\n              _context2.p = 0;\n              _context2.n = 1;\n              return API.get(API_CONFIG.ENDPOINTS.PROPERTY_STATS);\n            case 1:\n              propertiesResponse = _context2.v;\n              _context2.n = 2;\n              return propertiesResponse.json();\n            case 2:\n              propertiesResult = _context2.v;\n              if (propertiesResult.success) {\n                propertiesCountEl = document.getElementById(\"propertiesCount\");\n                if (propertiesCountEl) {\n                  propertiesCountEl.textContent = propertiesResult.stats.totalProperties || 0;\n                }\n              }\n\n              // Load tenants stats\n              _context2.n = 3;\n              return API.get(API_CONFIG.ENDPOINTS.TENANT_STATS);\n            case 3:\n              tenantsResponse = _context2.v;\n              _context2.n = 4;\n              return tenantsResponse.json();\n            case 4:\n              tenantsResult = _context2.v;\n              if (tenantsResult.success) {\n                stats = tenantsResult.stats;\n                totalTenants = stats.totalTenants || 0;\n                registeredCount = stats.registeredTenants || 0;\n                tenantsWithProperties = stats.tenantsWithProperties || 0;\n                tenantsCountEl = document.getElementById(\"tenantsCount\");\n                registeredTenantsEl = document.getElementById(\"registeredTenants\");\n                occupiedPropertiesEl = document.getElementById(\"occupiedProperties\");\n                if (tenantsCountEl) tenantsCountEl.textContent = totalTenants;\n                if (registeredTenantsEl) registeredTenantsEl.textContent = registeredCount;\n                if (occupiedPropertiesEl) occupiedPropertiesEl.textContent = tenantsWithProperties;\n              }\n\n              // Update contracts analyzed count (placeholder)\n              contractsCountEl = document.getElementById(\"contractsCount\");\n              if (contractsCountEl) {\n                contractsCountEl.textContent = \"0\"; // Would be loaded from analytics\n              }\n              issuesCountEl = document.getElementById(\"issuesCount\");\n              if (issuesCountEl) {\n                issuesCountEl.textContent = \"0\"; // Would be loaded from analytics\n              }\n              cleanCountEl = document.getElementById(\"cleanCount\");\n              if (cleanCountEl) {\n                cleanCountEl.textContent = \"0\"; // Would be loaded from analytics\n              }\n              _context2.n = 6;\n              break;\n            case 5:\n              _context2.p = 5;\n              _t = _context2.v;\n              console.error(\"Error loading dashboard stats:\", _t);\n              // Silently fail - dashboard stats are not critical\n            case 6:\n              return _context2.a(2);\n          }\n        }, _callee2, null, [[0, 5]]);\n      }));\n      function loadDashboardStats() {\n        return _loadDashboardStats.apply(this, arguments);\n      }\n      return loadDashboardStats;\n    }() // Public methods for external access\n  }, {\n    key: \"getComponent\",\n    value: function getComponent(componentName) {\n      return this.components[componentName];\n    }\n  }, {\n    key: \"refreshCurrentSection\",\n    value: function refreshCurrentSection() {\n      this.initializeComponentForSection(this.currentSection);\n\n      // Refresh component data if available\n      var component = this.getComponent(this.currentSection);\n      if (component && component.refresh) {\n        component.refresh();\n      }\n    }\n  }, {\n    key: \"refreshDashboardStats\",\n    value: function refreshDashboardStats() {\n      this.loadDashboardStats();\n    }\n\n    // Navigation helper methods\n  }, {\n    key: \"goToSection\",\n    value: function goToSection(sectionName) {\n      this.showSection(sectionName);\n    }\n  }, {\n    key: \"goToDashboard\",\n    value: function goToDashboard() {\n      this.showSection(\"dashboard\");\n    }\n  }, {\n    key: \"goToAnalysis\",\n    value: function goToAnalysis() {\n      this.showSection(\"analysis\");\n    }\n  }, {\n    key: \"goToProperties\",\n    value: function goToProperties() {\n      this.showSection(\"properties\");\n    }\n  }, {\n    key: \"goToTenants\",\n    value: function goToTenants() {\n      this.showSection(\"tenants\");\n    }\n  }, {\n    key: \"goToInvestors\",\n    value: function goToInvestors() {\n      this.showSection(\"investors\");\n    }\n  }]);\n}(); // Initialize dashboard when DOM is ready\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  window.dashboardController = new DashboardController();\n});\n\n// Export for use in other modules\nwindow.DashboardController = DashboardController;\n\n//# sourceURL=webpack://rental-management-platform/./src/js/dashboard-controller.js?\n}");

/***/ }),

/***/ "./src/js/dashboard.js":
/*!*****************************!*\
  !*** ./src/js/dashboard.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config.js */ \"./src/js/config.js\");\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_config_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_toast_toast_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/toast/toast.js */ \"./src/js/components/toast/toast.js\");\n/* harmony import */ var _components_toast_toast_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_toast_toast_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_contract_analysis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/contract-analysis.js */ \"./src/js/components/contract-analysis.js\");\n/* harmony import */ var _components_contract_analysis_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_contract_analysis_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_property_management_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/property-management.js */ \"./src/js/components/property-management.js\");\n/* harmony import */ var _components_property_management_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_property_management_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_tenant_management_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/tenant-management.js */ \"./src/js/components/tenant-management.js\");\n/* harmony import */ var _components_tenant_management_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_components_tenant_management_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_financial_reports_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/financial-reports.js */ \"./src/js/components/financial-reports.js\");\n/* harmony import */ var _components_financial_reports_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_financial_reports_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _components_investor_management_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/investor-management.js */ \"./src/js/components/investor-management.js\");\n/* harmony import */ var _components_investor_management_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_components_investor_management_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _dashboard_controller_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dashboard-controller.js */ \"./src/js/dashboard-controller.js\");\n/* harmony import */ var _dashboard_controller_js__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_dashboard_controller_js__WEBPACK_IMPORTED_MODULE_7__);\n// Dashboard entry point\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://rental-management-platform/./src/js/dashboard.js?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/dashboard.js");
/******/ 	
/******/ })()
;